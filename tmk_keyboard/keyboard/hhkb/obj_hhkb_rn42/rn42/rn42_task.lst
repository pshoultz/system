   1               		.file	"rn42_task.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.enter_command_mode,"ax",@progbits
  12               	enter_command_mode:
  13               	.LFB111:
  14               		.file 1 "rn42/rn42_task.c"
   1:rn42/rn42_task.c **** #include <stdint.h>
   2:rn42/rn42_task.c **** #include <string.h>
   3:rn42/rn42_task.c **** #include <avr/pgmspace.h>
   4:rn42/rn42_task.c **** #include <avr/eeprom.h>
   5:rn42/rn42_task.c **** #include "keycode.h"
   6:rn42/rn42_task.c **** #include "serial.h"
   7:rn42/rn42_task.c **** #include "host.h"
   8:rn42/rn42_task.c **** #include "action.h"
   9:rn42/rn42_task.c **** #include "action_util.h"
  10:rn42/rn42_task.c **** #include "lufa.h"
  11:rn42/rn42_task.c **** #include "rn42_task.h"
  12:rn42/rn42_task.c **** #include "print.h"
  13:rn42/rn42_task.c **** #include "debug.h"
  14:rn42/rn42_task.c **** #include "timer.h"
  15:rn42/rn42_task.c **** #include "wait.h"
  16:rn42/rn42_task.c **** #include "command.h"
  17:rn42/rn42_task.c **** #include "battery.h"
  18:rn42/rn42_task.c **** 
  19:rn42/rn42_task.c **** static bool config_mode = false;
  20:rn42/rn42_task.c **** static bool force_usb = false;
  21:rn42/rn42_task.c **** 
  22:rn42/rn42_task.c **** static void status_led(bool on)
  23:rn42/rn42_task.c **** {
  24:rn42/rn42_task.c ****     if (on) {
  25:rn42/rn42_task.c ****         DDRE  |=  (1<<6);
  26:rn42/rn42_task.c ****         PORTE &= ~(1<<6);
  27:rn42/rn42_task.c ****     } else {
  28:rn42/rn42_task.c ****         DDRE  |=  (1<<6);
  29:rn42/rn42_task.c ****         PORTE |=  (1<<6);
  30:rn42/rn42_task.c ****     }
  31:rn42/rn42_task.c **** }
  32:rn42/rn42_task.c **** 
  33:rn42/rn42_task.c **** void rn42_task_init(void)
  34:rn42/rn42_task.c **** {
  35:rn42/rn42_task.c ****     battery_init();
  36:rn42/rn42_task.c **** #ifdef NKRO_ENABLE
  37:rn42/rn42_task.c ****     rn42_nkro_last = keyboard_nkro;
  38:rn42/rn42_task.c **** #endif
  39:rn42/rn42_task.c **** }
  40:rn42/rn42_task.c **** 
  41:rn42/rn42_task.c **** void rn42_task(void)
  42:rn42/rn42_task.c **** {
  43:rn42/rn42_task.c ****     int16_t c;
  44:rn42/rn42_task.c ****     // Raw mode: interpret output report of LED state
  45:rn42/rn42_task.c ****     while ((c = rn42_getc()) != -1) {
  46:rn42/rn42_task.c ****         // LED Out report: 0xFE, 0x02, 0x01, <leds>
  47:rn42/rn42_task.c ****         // To get the report over UART set bit3 with SH, command.
  48:rn42/rn42_task.c ****         static enum {LED_INIT, LED_FE, LED_02, LED_01} state = LED_INIT;
  49:rn42/rn42_task.c ****         switch (state) {
  50:rn42/rn42_task.c ****             case LED_INIT:
  51:rn42/rn42_task.c ****                 if (c == 0xFE) state = LED_FE;
  52:rn42/rn42_task.c ****                 else {
  53:rn42/rn42_task.c ****                     if (0x0 <= c && c <= 0x7f) xprintf("%c", c);
  54:rn42/rn42_task.c ****                     else xprintf(" %02X", c);
  55:rn42/rn42_task.c ****                 }
  56:rn42/rn42_task.c ****                 break;
  57:rn42/rn42_task.c ****             case LED_FE:
  58:rn42/rn42_task.c ****                 if (c == 0x02) state = LED_02;
  59:rn42/rn42_task.c ****                 else           state = LED_INIT;
  60:rn42/rn42_task.c ****                 break;
  61:rn42/rn42_task.c ****             case LED_02:
  62:rn42/rn42_task.c ****                 if (c == 0x01) state = LED_01;
  63:rn42/rn42_task.c ****                 else           state = LED_INIT;
  64:rn42/rn42_task.c ****                 break;
  65:rn42/rn42_task.c ****             case LED_01:
  66:rn42/rn42_task.c ****                 dprintf("LED status: %02X\n", c);
  67:rn42/rn42_task.c ****                 rn42_set_leds(c);
  68:rn42/rn42_task.c ****                 state = LED_INIT;
  69:rn42/rn42_task.c ****                 break;
  70:rn42/rn42_task.c ****             default:
  71:rn42/rn42_task.c ****                 state = LED_INIT;
  72:rn42/rn42_task.c ****         }
  73:rn42/rn42_task.c ****     }
  74:rn42/rn42_task.c **** 
  75:rn42/rn42_task.c ****     /* Switch between USB and Bluetooth */
  76:rn42/rn42_task.c ****     if (!config_mode) { // not switch while config mode
  77:rn42/rn42_task.c ****         if (!force_usb && !rn42_rts()) {
  78:rn42/rn42_task.c ****             if (host_get_driver() != &rn42_driver) {
  79:rn42/rn42_task.c ****                 clear_keyboard();
  80:rn42/rn42_task.c **** #ifdef NKRO_ENABLE
  81:rn42/rn42_task.c ****                 rn42_nkro_last = keyboard_nkro;
  82:rn42/rn42_task.c ****                 keyboard_nkro = false;
  83:rn42/rn42_task.c **** #endif
  84:rn42/rn42_task.c ****                 host_set_driver(&rn42_driver);
  85:rn42/rn42_task.c ****             }
  86:rn42/rn42_task.c ****         } else {
  87:rn42/rn42_task.c ****             if (host_get_driver() != &lufa_driver) {
  88:rn42/rn42_task.c ****                 clear_keyboard();
  89:rn42/rn42_task.c **** #ifdef NKRO_ENABLE
  90:rn42/rn42_task.c ****                 keyboard_nkro = rn42_nkro_last;
  91:rn42/rn42_task.c **** #endif
  92:rn42/rn42_task.c ****                 host_set_driver(&lufa_driver);
  93:rn42/rn42_task.c ****             }
  94:rn42/rn42_task.c ****         }
  95:rn42/rn42_task.c ****     }
  96:rn42/rn42_task.c **** 
  97:rn42/rn42_task.c **** 
  98:rn42/rn42_task.c ****     static uint16_t prev_timer = 0;
  99:rn42/rn42_task.c ****     uint16_t e = timer_elapsed(prev_timer);
 100:rn42/rn42_task.c ****     if (e > 1000) {
 101:rn42/rn42_task.c ****         /* every second */
 102:rn42/rn42_task.c ****         prev_timer += e/1000*1000;
 103:rn42/rn42_task.c **** 
 104:rn42/rn42_task.c ****         /* Low voltage alert */
 105:rn42/rn42_task.c ****         uint8_t bs = battery_status();
 106:rn42/rn42_task.c ****         if (bs == LOW_VOLTAGE) {
 107:rn42/rn42_task.c ****             battery_led(LED_ON);
 108:rn42/rn42_task.c ****         } else {
 109:rn42/rn42_task.c ****             battery_led(LED_CHARGER);
 110:rn42/rn42_task.c ****         }
 111:rn42/rn42_task.c **** 
 112:rn42/rn42_task.c ****         /* every minute */
 113:rn42/rn42_task.c ****         uint32_t t = timer_read32()/1000;
 114:rn42/rn42_task.c ****         if (t%60 == 0) {
 115:rn42/rn42_task.c ****             uint16_t v = battery_voltage();
 116:rn42/rn42_task.c ****             uint8_t h = t/3600;
 117:rn42/rn42_task.c ****             uint8_t m = t%3600/60;
 118:rn42/rn42_task.c ****             uint8_t s = t%60;
 119:rn42/rn42_task.c ****             dprintf("%02u:%02u:%02u\t%umV\n", h, m, s, v);
 120:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 121:rn42/rn42_task.c ****             xprintf("%02u:%02u:%02u\t%umV\n", (t/3600), (t%3600/60), (t%60), v);
 122:rn42/rn42_task.c ****             */
 123:rn42/rn42_task.c ****         }
 124:rn42/rn42_task.c ****     }
 125:rn42/rn42_task.c **** 
 126:rn42/rn42_task.c **** 
 127:rn42/rn42_task.c ****     /* Connection monitor */
 128:rn42/rn42_task.c ****     if (!rn42_rts() && rn42_linked()) {
 129:rn42/rn42_task.c ****         status_led(true);
 130:rn42/rn42_task.c ****     } else {
 131:rn42/rn42_task.c ****         status_led(false);
 132:rn42/rn42_task.c ****     }
 133:rn42/rn42_task.c **** }
 134:rn42/rn42_task.c **** 
 135:rn42/rn42_task.c **** 
 136:rn42/rn42_task.c **** 
 137:rn42/rn42_task.c **** /******************************************************************************
 138:rn42/rn42_task.c ****  * Command
 139:rn42/rn42_task.c ****  ******************************************************************************/
 140:rn42/rn42_task.c **** static host_driver_t *prev_driver = &rn42_driver;
 141:rn42/rn42_task.c **** 
 142:rn42/rn42_task.c **** static void enter_command_mode(void)
 143:rn42/rn42_task.c **** {
  15               		.loc 1 143 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 144:rn42/rn42_task.c ****     prev_driver = host_get_driver();
  21               		.loc 1 144 5 view .LVU1
  22               		.loc 1 144 19 is_stmt 0 view .LVU2
  23 0000 0E94 0000 		call host_get_driver
  24               	.LVL0:
  25               		.loc 1 144 17 view .LVU3
  26 0004 9093 0000 		sts prev_driver+1,r25
  27 0008 8093 0000 		sts prev_driver,r24
 145:rn42/rn42_task.c ****     clear_keyboard();
  28               		.loc 1 145 5 is_stmt 1 view .LVU4
  29 000c 0E94 0000 		call clear_keyboard
  30               	.LVL1:
 146:rn42/rn42_task.c ****     host_set_driver(&rn42_config_driver);   // null driver; not to send a key to host
  31               		.loc 1 146 5 view .LVU5
  32 0010 80E0      		ldi r24,lo8(rn42_config_driver)
  33 0012 90E0      		ldi r25,hi8(rn42_config_driver)
  34 0014 0E94 0000 		call host_set_driver
  35               	.LVL2:
 147:rn42/rn42_task.c ****     rn42_disconnect();
  36               		.loc 1 147 5 view .LVU6
  37 0018 0E94 0000 		call rn42_disconnect
  38               	.LVL3:
 148:rn42/rn42_task.c ****     while (rn42_linked()) ;
  39               		.loc 1 148 5 view .LVU7
  40               	.L2:
  41               		.loc 1 148 27 discriminator 1 view .LVU8
  42               		.loc 1 148 12 is_stmt 0 discriminator 1 view .LVU9
  43 001c 0E94 0000 		call rn42_linked
  44               	.LVL4:
  45               		.loc 1 148 11 discriminator 1 view .LVU10
  46 0020 8111      		cpse r24,__zero_reg__
  47 0022 00C0      		rjmp .L2
 149:rn42/rn42_task.c **** 
 150:rn42/rn42_task.c ****     print("Entering config mode ...\n");
  48               		.loc 1 150 5 is_stmt 1 view .LVU11
  49               	.LBB10:
  50               		.loc 1 150 5 view .LVU12
  51               		.loc 1 150 5 view .LVU13
  52               	.LBE10:
  53 0024 80E0      		ldi r24,lo8(__c.4979)
  54 0026 90E0      		ldi r25,hi8(__c.4979)
  55 0028 0E94 0000 		call xputs
  56               	.LVL5:
 151:rn42/rn42_task.c ****     wait_ms(1100);          // need 1 sec
  57               		.loc 1 151 5 view .LVU14
  58               	.LBB11:
  59               	.LBI11:
  60               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
  61               		.loc 2 166 1 view .LVU15
  62               	.LBB12:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
  63               		.loc 2 168 2 view .LVU16
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
  64               		.loc 2 172 2 view .LVU17
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  65               		.loc 2 173 2 view .LVU18
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
  66               		.loc 2 174 2 view .LVU19
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
  67               		.loc 2 184 3 view .LVU20
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  68               		.loc 2 187 2 view .LVU21
  69 002c 2FEF      		ldi r18,lo8(3519999)
  70 002e 85EB      		ldi r24,hi8(3519999)
  71 0030 95E3      		ldi r25,hlo8(3519999)
  72 0032 2150      	1:	subi r18,1
  73 0034 8040      		sbci r24,0
  74 0036 9040      		sbci r25,0
  75 0038 01F4      		brne 1b
  76 003a 00C0      		rjmp .
  77 003c 0000      		nop
  78               	.LVL6:
  79               		.loc 2 187 2 is_stmt 0 view .LVU22
  80               	.LBE12:
  81               	.LBE11:
 152:rn42/rn42_task.c ****     SEND_COMMAND("$$$");
  82               		.loc 1 152 5 is_stmt 1 view .LVU23
  83               	.LBB13:
  84               		.loc 1 152 5 view .LVU24
  85               		.loc 1 152 5 view .LVU25
  86               	.LBE13:
  87 003e 80E0      		ldi r24,lo8(__c.4981)
  88 0040 90E0      		ldi r25,hi8(__c.4981)
  89 0042 0E94 0000 		call rn42_send_command
  90               	.LVL7:
 153:rn42/rn42_task.c ****     wait_ms(600);           // need 1 sec
  91               		.loc 1 153 5 view .LVU26
  92               	.LBB14:
  93               	.LBI14:
 166:/usr/avr/include/util/delay.h **** {
  94               		.loc 2 166 1 view .LVU27
  95               	.LBB15:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  96               		.loc 2 168 2 view .LVU28
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  97               		.loc 2 172 2 view .LVU29
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
  98               		.loc 2 173 2 view .LVU30
 174:/usr/avr/include/util/delay.h **** 
  99               		.loc 2 174 2 view .LVU31
 184:/usr/avr/include/util/delay.h **** 	#endif
 100               		.loc 2 184 3 view .LVU32
 101               		.loc 2 187 2 view .LVU33
 102 0046 EFEF      		ldi r30,lo8(1919999)
 103 0048 FBE4      		ldi r31,hi8(1919999)
 104 004a 2DE1      		ldi r18,hlo8(1919999)
 105 004c E150      	1:	subi r30,1
 106 004e F040      		sbci r31,0
 107 0050 2040      		sbci r18,0
 108 0052 01F4      		brne 1b
 109 0054 00C0      		rjmp .
 110 0056 0000      		nop
 111               	.LVL8:
 112               		.loc 2 187 2 is_stmt 0 view .LVU34
 113               	.LBE15:
 114               	.LBE14:
 154:rn42/rn42_task.c ****     rn42_print_response();
 115               		.loc 1 154 5 is_stmt 1 view .LVU35
 116 0058 0E94 0000 		call rn42_print_response
 117               	.LVL9:
 155:rn42/rn42_task.c ****     const char *s = SEND_COMMAND("v\r\n");
 118               		.loc 1 155 5 view .LVU36
 119               	.LBB16:
 120               		.loc 1 155 21 view .LVU37
 121               		.loc 1 155 21 view .LVU38
 122               	.LBE16:
 123 005c 80E0      		ldi r24,lo8(__c.4984)
 124 005e 90E0      		ldi r25,hi8(__c.4984)
 125 0060 0E94 0000 		call rn42_send_command
 126               	.LVL10:
 156:rn42/rn42_task.c ****     if (strncmp("v", s, 1) != 0) SEND_COMMAND("+\r\n"); // local echo on
 127               		.loc 1 156 5 view .LVU39
 128               		.loc 1 156 8 is_stmt 0 view .LVU40
 129 0064 FC01      		movw r30,r24
 130 0066 8081      		ld r24,Z
 131               	.LVL11:
 132               		.loc 1 156 8 view .LVU41
 133 0068 8637      		cpi r24,lo8(118)
 134 006a 01F0      		breq .L1
 135               		.loc 1 156 34 is_stmt 1 discriminator 1 view .LVU42
 136               	.LBB17:
 137               		.loc 1 156 34 discriminator 1 view .LVU43
 138               		.loc 1 156 34 discriminator 1 view .LVU44
 139               	.LBE17:
 140 006c 80E0      		ldi r24,lo8(__c.4986)
 141 006e 90E0      		ldi r25,hi8(__c.4986)
 142 0070 0C94 0000 		jmp rn42_send_command
 143               	.LVL12:
 144               	.L1:
 145               	/* epilogue start */
 157:rn42/rn42_task.c **** }
 146               		.loc 1 157 1 is_stmt 0 view .LVU45
 147 0074 0895      		ret
 148               		.cfi_endproc
 149               	.LFE111:
 151               		.section	.text.exit_command_mode,"ax",@progbits
 153               	exit_command_mode:
 154               	.LFB112:
 158:rn42/rn42_task.c **** 
 159:rn42/rn42_task.c **** static void exit_command_mode(void)
 160:rn42/rn42_task.c **** {
 155               		.loc 1 160 1 is_stmt 1 view -0
 156               		.cfi_startproc
 157               	/* prologue: function */
 158               	/* frame size = 0 */
 159               	/* stack size = 0 */
 160               	.L__stack_usage = 0
 161:rn42/rn42_task.c ****     print("Exiting config mode ...\n");
 161               		.loc 1 161 5 view .LVU47
 162               	.LBB18:
 163               		.loc 1 161 5 view .LVU48
 164               		.loc 1 161 5 view .LVU49
 165               	.LBE18:
 166 0000 80E0      		ldi r24,lo8(__c.4991)
 167 0002 90E0      		ldi r25,hi8(__c.4991)
 168 0004 0E94 0000 		call xputs
 169               	.LVL13:
 162:rn42/rn42_task.c ****     SEND_COMMAND("---\r\n");    // exit
 170               		.loc 1 162 5 view .LVU50
 171               	.LBB19:
 172               		.loc 1 162 5 view .LVU51
 173               		.loc 1 162 5 view .LVU52
 174               	.LBE19:
 175 0008 80E0      		ldi r24,lo8(__c.4993)
 176 000a 90E0      		ldi r25,hi8(__c.4993)
 177 000c 0E94 0000 		call rn42_send_command
 178               	.LVL14:
 163:rn42/rn42_task.c **** 
 164:rn42/rn42_task.c ****     rn42_autoconnect();
 179               		.loc 1 164 5 view .LVU53
 180 0010 0E94 0000 		call rn42_autoconnect
 181               	.LVL15:
 165:rn42/rn42_task.c ****     clear_keyboard();
 182               		.loc 1 165 5 view .LVU54
 183 0014 0E94 0000 		call clear_keyboard
 184               	.LVL16:
 166:rn42/rn42_task.c ****     host_set_driver(prev_driver);
 185               		.loc 1 166 5 view .LVU55
 186 0018 8091 0000 		lds r24,prev_driver
 187 001c 9091 0000 		lds r25,prev_driver+1
 188 0020 0C94 0000 		jmp host_set_driver
 189               	.LVL17:
 190               		.cfi_endproc
 191               	.LFE112:
 193               		.section	.text.rn42_task_init,"ax",@progbits
 194               	.global	rn42_task_init
 196               	rn42_task_init:
 197               	.LFB109:
  34:rn42/rn42_task.c ****     battery_init();
 198               		.loc 1 34 1 view -0
 199               		.cfi_startproc
 200               	/* prologue: function */
 201               	/* frame size = 0 */
 202               	/* stack size = 0 */
 203               	.L__stack_usage = 0
  35:rn42/rn42_task.c **** #ifdef NKRO_ENABLE
 204               		.loc 1 35 5 view .LVU57
 205 0000 0E94 0000 		call battery_init
 206               	.LVL18:
  37:rn42/rn42_task.c **** #endif
 207               		.loc 1 37 5 view .LVU58
  37:rn42/rn42_task.c **** #endif
 208               		.loc 1 37 20 is_stmt 0 view .LVU59
 209 0004 8091 0000 		lds r24,keyboard_nkro
 210 0008 8093 0000 		sts rn42_nkro_last,r24
 211               	/* epilogue start */
  39:rn42/rn42_task.c **** 
 212               		.loc 1 39 1 view .LVU60
 213 000c 0895      		ret
 214               		.cfi_endproc
 215               	.LFE109:
 217               		.section	.text.rn42_task,"ax",@progbits
 218               	.global	rn42_task
 220               	rn42_task:
 221               	.LFB110:
  42:rn42/rn42_task.c ****     int16_t c;
 222               		.loc 1 42 1 is_stmt 1 view -0
 223               		.cfi_startproc
 224 0000 4F92      		push r4
 225               	.LCFI0:
 226               		.cfi_def_cfa_offset 3
 227               		.cfi_offset 4, -2
 228 0002 5F92      		push r5
 229               	.LCFI1:
 230               		.cfi_def_cfa_offset 4
 231               		.cfi_offset 5, -3
 232 0004 6F92      		push r6
 233               	.LCFI2:
 234               		.cfi_def_cfa_offset 5
 235               		.cfi_offset 6, -4
 236 0006 7F92      		push r7
 237               	.LCFI3:
 238               		.cfi_def_cfa_offset 6
 239               		.cfi_offset 7, -5
 240 0008 8F92      		push r8
 241               	.LCFI4:
 242               		.cfi_def_cfa_offset 7
 243               		.cfi_offset 8, -6
 244 000a 9F92      		push r9
 245               	.LCFI5:
 246               		.cfi_def_cfa_offset 8
 247               		.cfi_offset 9, -7
 248 000c AF92      		push r10
 249               	.LCFI6:
 250               		.cfi_def_cfa_offset 9
 251               		.cfi_offset 10, -8
 252 000e BF92      		push r11
 253               	.LCFI7:
 254               		.cfi_def_cfa_offset 10
 255               		.cfi_offset 11, -9
 256 0010 CF92      		push r12
 257               	.LCFI8:
 258               		.cfi_def_cfa_offset 11
 259               		.cfi_offset 12, -10
 260 0012 DF92      		push r13
 261               	.LCFI9:
 262               		.cfi_def_cfa_offset 12
 263               		.cfi_offset 13, -11
 264 0014 EF92      		push r14
 265               	.LCFI10:
 266               		.cfi_def_cfa_offset 13
 267               		.cfi_offset 14, -12
 268 0016 FF92      		push r15
 269               	.LCFI11:
 270               		.cfi_def_cfa_offset 14
 271               		.cfi_offset 15, -13
 272 0018 0F93      		push r16
 273               	.LCFI12:
 274               		.cfi_def_cfa_offset 15
 275               		.cfi_offset 16, -14
 276 001a 1F93      		push r17
 277               	.LCFI13:
 278               		.cfi_def_cfa_offset 16
 279               		.cfi_offset 17, -15
 280 001c CF93      		push r28
 281               	.LCFI14:
 282               		.cfi_def_cfa_offset 17
 283               		.cfi_offset 28, -16
 284 001e DF93      		push r29
 285               	.LCFI15:
 286               		.cfi_def_cfa_offset 18
 287               		.cfi_offset 29, -17
 288               	/* prologue: function */
 289               	/* frame size = 0 */
 290               	/* stack size = 16 */
 291               	.L__stack_usage = 16
  43:rn42/rn42_task.c ****     // Raw mode: interpret output report of LED state
 292               		.loc 1 43 5 view .LVU62
  45:rn42/rn42_task.c ****         // LED Out report: 0xFE, 0x02, 0x01, <leds>
 293               		.loc 1 45 5 view .LVU63
 294               	.LBB31:
  58:rn42/rn42_task.c ****                 else           state = LED_INIT;
 295               		.loc 1 58 38 is_stmt 0 view .LVU64
 296 0020 92E0      		ldi r25,lo8(2)
 297 0022 B92E      		mov r11,r25
  54:rn42/rn42_task.c ****                 }
 298               		.loc 1 54 26 view .LVU65
 299 0024 00E0      		ldi r16,lo8(__c.4950)
 300 0026 10E0      		ldi r17,hi8(__c.4950)
  53:rn42/rn42_task.c ****                     else xprintf(" %02X", c);
 301               		.loc 1 53 48 view .LVU66
 302 0028 20E0      		ldi r18,lo8(__c.4948)
 303 002a E22E      		mov r14,r18
 304 002c 20E0      		ldi r18,hi8(__c.4948)
 305 002e F22E      		mov r15,r18
  51:rn42/rn42_task.c ****                 else {
 306               		.loc 1 51 38 view .LVU67
 307 0030 AA24      		clr r10
 308 0032 A394      		inc r10
  62:rn42/rn42_task.c ****                 else           state = LED_INIT;
 309               		.loc 1 62 38 view .LVU68
 310 0034 33E0      		ldi r19,lo8(3)
 311 0036 932E      		mov r9,r19
  66:rn42/rn42_task.c ****                 rn42_set_leds(c);
 312               		.loc 1 66 17 view .LVU69
 313 0038 40E0      		ldi r20,lo8(__c.4956)
 314 003a C42E      		mov r12,r20
 315 003c 40E0      		ldi r20,hi8(__c.4956)
 316 003e D42E      		mov r13,r20
 317               	.L8:
 318               	.LBE31:
  45:rn42/rn42_task.c ****         // LED Out report: 0xFE, 0x02, 0x01, <leds>
 319               		.loc 1 45 17 view .LVU70
 320 0040 0E94 0000 		call rn42_getc
 321 0044 EC01      		movw r28,r24
  45:rn42/rn42_task.c ****         // LED Out report: 0xFE, 0x02, 0x01, <leds>
 322               		.loc 1 45 11 view .LVU71
 323 0046 0196      		adiw r24,1
 324 0048 01F0      		breq .+2
 325 004a 00C0      		rjmp .L19
  76:rn42/rn42_task.c ****         if (!force_usb && !rn42_rts()) {
 326               		.loc 1 76 5 is_stmt 1 view .LVU72
  76:rn42/rn42_task.c ****         if (!force_usb && !rn42_rts()) {
 327               		.loc 1 76 8 is_stmt 0 view .LVU73
 328 004c 8091 0000 		lds r24,config_mode
 329 0050 8111      		cpse r24,__zero_reg__
 330 0052 00C0      		rjmp .L21
  77:rn42/rn42_task.c ****             if (host_get_driver() != &rn42_driver) {
 331               		.loc 1 77 9 is_stmt 1 view .LVU74
  77:rn42/rn42_task.c ****             if (host_get_driver() != &rn42_driver) {
 332               		.loc 1 77 12 is_stmt 0 view .LVU75
 333 0054 8091 0000 		lds r24,force_usb
 334 0058 8111      		cpse r24,__zero_reg__
 335 005a 00C0      		rjmp .L22
  77:rn42/rn42_task.c ****             if (host_get_driver() != &rn42_driver) {
 336               		.loc 1 77 28 discriminator 1 view .LVU76
 337 005c 0E94 0000 		call rn42_rts
  77:rn42/rn42_task.c ****             if (host_get_driver() != &rn42_driver) {
 338               		.loc 1 77 24 discriminator 1 view .LVU77
 339 0060 8111      		cpse r24,__zero_reg__
 340 0062 00C0      		rjmp .L22
  78:rn42/rn42_task.c ****                 clear_keyboard();
 341               		.loc 1 78 13 is_stmt 1 view .LVU78
  78:rn42/rn42_task.c ****                 clear_keyboard();
 342               		.loc 1 78 17 is_stmt 0 view .LVU79
 343 0064 0E94 0000 		call host_get_driver
  78:rn42/rn42_task.c ****                 clear_keyboard();
 344               		.loc 1 78 16 view .LVU80
 345 0068 8050      		subi r24,lo8(rn42_driver)
 346 006a 9040      		sbci r25,hi8(rn42_driver)
 347 006c 01F0      		breq .L21
  79:rn42/rn42_task.c **** #ifdef NKRO_ENABLE
 348               		.loc 1 79 17 is_stmt 1 view .LVU81
 349 006e 0E94 0000 		call clear_keyboard
  81:rn42/rn42_task.c ****                 keyboard_nkro = false;
 350               		.loc 1 81 17 view .LVU82
  81:rn42/rn42_task.c ****                 keyboard_nkro = false;
 351               		.loc 1 81 32 is_stmt 0 view .LVU83
 352 0072 8091 0000 		lds r24,keyboard_nkro
 353 0076 8093 0000 		sts rn42_nkro_last,r24
  82:rn42/rn42_task.c **** #endif
 354               		.loc 1 82 17 is_stmt 1 view .LVU84
  82:rn42/rn42_task.c **** #endif
 355               		.loc 1 82 31 is_stmt 0 view .LVU85
 356 007a 1092 0000 		sts keyboard_nkro,__zero_reg__
  84:rn42/rn42_task.c ****             }
 357               		.loc 1 84 17 is_stmt 1 view .LVU86
 358 007e 80E0      		ldi r24,lo8(rn42_driver)
 359 0080 90E0      		ldi r25,hi8(rn42_driver)
 360               	.L48:
  92:rn42/rn42_task.c ****             }
 361               		.loc 1 92 17 is_stmt 0 view .LVU87
 362 0082 0E94 0000 		call host_set_driver
 363               	.L21:
  98:rn42/rn42_task.c ****     uint16_t e = timer_elapsed(prev_timer);
 364               		.loc 1 98 5 is_stmt 1 view .LVU88
  99:rn42/rn42_task.c ****     if (e > 1000) {
 365               		.loc 1 99 5 view .LVU89
  99:rn42/rn42_task.c ****     if (e > 1000) {
 366               		.loc 1 99 18 is_stmt 0 view .LVU90
 367 0086 8091 0000 		lds r24,prev_timer.4962
 368 008a 9091 0000 		lds r25,prev_timer.4962+1
 369 008e 0E94 0000 		call timer_elapsed
 100:rn42/rn42_task.c ****         /* every second */
 370               		.loc 1 100 5 is_stmt 1 view .LVU91
 100:rn42/rn42_task.c ****         /* every second */
 371               		.loc 1 100 8 is_stmt 0 view .LVU92
 372 0092 893E      		cpi r24,-23
 373 0094 23E0      		ldi r18,3
 374 0096 9207      		cpc r25,r18
 375 0098 00F4      		brsh .+2
 376 009a 00C0      		rjmp .L25
 377               	.LBB35:
 102:rn42/rn42_task.c **** 
 378               		.loc 1 102 9 is_stmt 1 view .LVU93
 102:rn42/rn42_task.c **** 
 379               		.loc 1 102 24 is_stmt 0 view .LVU94
 380 009c 28EE      		ldi r18,lo8(-24)
 381 009e 33E0      		ldi r19,lo8(3)
 382 00a0 B901      		movw r22,r18
 383 00a2 0E94 0000 		call __udivmodhi4
 102:rn42/rn42_task.c **** 
 384               		.loc 1 102 29 view .LVU95
 385 00a6 629F      		mul r22,r18
 386 00a8 A001      		movw r20,r0
 387 00aa 639F      		mul r22,r19
 388 00ac 500D      		add r21,r0
 389 00ae 729F      		mul r23,r18
 390 00b0 500D      		add r21,r0
 391 00b2 1124      		clr r1
 102:rn42/rn42_task.c **** 
 392               		.loc 1 102 20 view .LVU96
 393 00b4 8091 0000 		lds r24,prev_timer.4962
 394 00b8 9091 0000 		lds r25,prev_timer.4962+1
 395 00bc 840F      		add r24,r20
 396 00be 951F      		adc r25,r21
 397 00c0 9093 0000 		sts prev_timer.4962+1,r25
 398 00c4 8093 0000 		sts prev_timer.4962,r24
 105:rn42/rn42_task.c ****         if (bs == LOW_VOLTAGE) {
 399               		.loc 1 105 9 is_stmt 1 view .LVU97
 105:rn42/rn42_task.c ****         if (bs == LOW_VOLTAGE) {
 400               		.loc 1 105 22 is_stmt 0 view .LVU98
 401 00c8 0E94 0000 		call battery_status
 106:rn42/rn42_task.c ****             battery_led(LED_ON);
 402               		.loc 1 106 9 is_stmt 1 view .LVU99
 106:rn42/rn42_task.c ****             battery_led(LED_ON);
 403               		.loc 1 106 12 is_stmt 0 view .LVU100
 404 00cc 8330      		cpi r24,lo8(3)
 405 00ce 01F0      		breq .+2
 406 00d0 00C0      		rjmp .L26
 107:rn42/rn42_task.c ****         } else {
 407               		.loc 1 107 13 is_stmt 1 view .LVU101
 408 00d2 81E0      		ldi r24,lo8(1)
 409               	.L49:
 109:rn42/rn42_task.c ****         }
 410               		.loc 1 109 13 is_stmt 0 view .LVU102
 411 00d4 0E94 0000 		call battery_led
 113:rn42/rn42_task.c ****         if (t%60 == 0) {
 412               		.loc 1 113 9 is_stmt 1 view .LVU103
 113:rn42/rn42_task.c ****         if (t%60 == 0) {
 413               		.loc 1 113 22 is_stmt 0 view .LVU104
 414 00d8 0E94 0000 		call timer_read32
 415 00dc 6B01      		movw r12,r22
 416 00de 7C01      		movw r14,r24
 113:rn42/rn42_task.c ****         if (t%60 == 0) {
 417               		.loc 1 113 18 view .LVU105
 418 00e0 28EE      		ldi r18,lo8(-24)
 419 00e2 33E0      		ldi r19,lo8(3)
 420 00e4 40E0      		ldi r20,0
 421 00e6 50E0      		ldi r21,0
 422 00e8 0E94 0000 		call __udivmodsi4
 423 00ec 2901      		movw r4,r18
 424 00ee 3A01      		movw r6,r20
 114:rn42/rn42_task.c ****             uint16_t v = battery_voltage();
 425               		.loc 1 114 9 is_stmt 1 view .LVU106
 114:rn42/rn42_task.c ****             uint16_t v = battery_voltage();
 426               		.loc 1 114 14 is_stmt 0 view .LVU107
 427 00f0 8CE3      		ldi r24,lo8(60)
 428 00f2 882E      		mov r8,r24
 429 00f4 912C      		mov r9,__zero_reg__
 430 00f6 A12C      		mov r10,__zero_reg__
 431 00f8 B12C      		mov r11,__zero_reg__
 432 00fa CA01      		movw r24,r20
 433 00fc B901      		movw r22,r18
 434 00fe A501      		movw r20,r10
 435 0100 9401      		movw r18,r8
 436 0102 0E94 0000 		call __udivmodsi4
 114:rn42/rn42_task.c ****             uint16_t v = battery_voltage();
 437               		.loc 1 114 12 view .LVU108
 438 0106 672B      		or r22,r23
 439 0108 682B      		or r22,r24
 440 010a 692B      		or r22,r25
 441 010c 01F4      		brne .L25
 442               	.LBB36:
 115:rn42/rn42_task.c ****             uint8_t h = t/3600;
 443               		.loc 1 115 13 is_stmt 1 view .LVU109
 115:rn42/rn42_task.c ****             uint8_t h = t/3600;
 444               		.loc 1 115 26 is_stmt 0 view .LVU110
 445 010e 0E94 0000 		call battery_voltage
 116:rn42/rn42_task.c ****             uint8_t m = t%3600/60;
 446               		.loc 1 116 13 is_stmt 1 view .LVU111
 117:rn42/rn42_task.c ****             uint8_t s = t%60;
 447               		.loc 1 117 13 view .LVU112
 118:rn42/rn42_task.c ****             dprintf("%02u:%02u:%02u\t%umV\n", h, m, s, v);
 448               		.loc 1 118 13 view .LVU113
 119:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 449               		.loc 1 119 13 view .LVU114
 119:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 450               		.loc 1 119 13 view .LVU115
 451 0112 2091 0000 		lds r18,debug_config
 452 0116 20FF      		sbrs r18,0
 453 0118 00C0      		rjmp .L25
 119:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 454               		.loc 1 119 13 discriminator 1 view .LVU116
 455               	.LBB37:
 119:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 456               		.loc 1 119 13 discriminator 1 view .LVU117
 119:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 457               		.loc 1 119 13 discriminator 1 view .LVU118
 458               	.LBE37:
 459 011a 9F93      		push r25
 460               	.LCFI16:
 461               		.cfi_def_cfa_offset 19
 462 011c 8F93      		push r24
 463               	.LCFI17:
 464               		.cfi_def_cfa_offset 20
 465 011e 1F92      		push __zero_reg__
 466               	.LCFI18:
 467               		.cfi_def_cfa_offset 21
 468 0120 1F92      		push __zero_reg__
 469               	.LCFI19:
 470               		.cfi_def_cfa_offset 22
 117:rn42/rn42_task.c ****             uint8_t s = t%60;
 471               		.loc 1 117 26 is_stmt 0 discriminator 1 view .LVU119
 472 0122 C301      		movw r24,r6
 473 0124 B201      		movw r22,r4
 474 0126 20E1      		ldi r18,lo8(16)
 475 0128 3EE0      		ldi r19,lo8(14)
 476 012a 40E0      		ldi r20,0
 477 012c 50E0      		ldi r21,0
 478 012e 0E94 0000 		call __udivmodsi4
 117:rn42/rn42_task.c ****             uint8_t s = t%60;
 479               		.loc 1 117 31 discriminator 1 view .LVU120
 480 0132 A501      		movw r20,r10
 481 0134 9401      		movw r18,r8
 482 0136 0E94 0000 		call __udivmodsi4
 119:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 483               		.loc 1 119 13 discriminator 1 view .LVU121
 484 013a 3F93      		push r19
 485               	.LCFI20:
 486               		.cfi_def_cfa_offset 23
 487 013c 2F93      		push r18
 488               	.LCFI21:
 489               		.cfi_def_cfa_offset 24
 116:rn42/rn42_task.c ****             uint8_t m = t%3600/60;
 490               		.loc 1 116 26 discriminator 1 view .LVU122
 491 013e C701      		movw r24,r14
 492 0140 B601      		movw r22,r12
 493 0142 20E8      		ldi r18,lo8(-128)
 494 0144 3EEE      		ldi r19,lo8(-18)
 495 0146 46E3      		ldi r20,lo8(54)
 496 0148 50E0      		ldi r21,0
 497 014a 0E94 0000 		call __udivmodsi4
 119:rn42/rn42_task.c ****             /* TODO: xprintf doesn't work for this.
 498               		.loc 1 119 13 discriminator 1 view .LVU123
 499 014e 1F92      		push __zero_reg__
 500               	.LCFI22:
 501               		.cfi_def_cfa_offset 25
 502 0150 2F93      		push r18
 503               	.LCFI23:
 504               		.cfi_def_cfa_offset 26
 505 0152 80E0      		ldi r24,lo8(__c.4970)
 506 0154 90E0      		ldi r25,hi8(__c.4970)
 507 0156 9F93      		push r25
 508               	.LCFI24:
 509               		.cfi_def_cfa_offset 27
 510 0158 8F93      		push r24
 511               	.LCFI25:
 512               		.cfi_def_cfa_offset 28
 513 015a 0E94 0000 		call __xprintf
 514 015e 8DB7      		in r24,__SP_L__
 515 0160 9EB7      		in r25,__SP_H__
 516 0162 0A96      		adiw r24,10
 517 0164 0FB6      		in __tmp_reg__,__SREG__
 518 0166 F894      		cli
 519 0168 9EBF      		out __SP_H__,r25
 520 016a 0FBE      		out __SREG__,__tmp_reg__
 521 016c 8DBF      		out __SP_L__,r24
 522               	.LCFI26:
 523               		.cfi_def_cfa_offset 18
 524               	.L25:
 525               	.LBE36:
 526               	.LBE35:
 128:rn42/rn42_task.c ****         status_led(true);
 527               		.loc 1 128 5 is_stmt 1 view .LVU124
 128:rn42/rn42_task.c ****         status_led(true);
 528               		.loc 1 128 10 is_stmt 0 view .LVU125
 529 016e 0E94 0000 		call rn42_rts
 128:rn42/rn42_task.c ****         status_led(true);
 530               		.loc 1 128 8 view .LVU126
 531 0172 8111      		cpse r24,__zero_reg__
 532 0174 00C0      		rjmp .L29
 128:rn42/rn42_task.c ****         status_led(true);
 533               		.loc 1 128 24 discriminator 1 view .LVU127
 534 0176 0E94 0000 		call rn42_linked
 128:rn42/rn42_task.c ****         status_led(true);
 535               		.loc 1 128 21 discriminator 1 view .LVU128
 536 017a 8823      		tst r24
 537 017c 01F4      		brne .+2
 538 017e 00C0      		rjmp .L29
 129:rn42/rn42_task.c ****     } else {
 539               		.loc 1 129 9 is_stmt 1 view .LVU129
 540               	.LBB38:
 541               	.LBI38:
  22:rn42/rn42_task.c **** {
 542               		.loc 1 22 13 view .LVU130
 543               	.LBB39:
  24:rn42/rn42_task.c ****         DDRE  |=  (1<<6);
 544               		.loc 1 24 5 view .LVU131
  25:rn42/rn42_task.c ****         PORTE &= ~(1<<6);
 545               		.loc 1 25 9 view .LVU132
  25:rn42/rn42_task.c ****         PORTE &= ~(1<<6);
 546               		.loc 1 25 15 is_stmt 0 view .LVU133
 547 0180 6E9A      		sbi 0xd,6
  26:rn42/rn42_task.c ****     } else {
 548               		.loc 1 26 9 is_stmt 1 view .LVU134
  26:rn42/rn42_task.c ****     } else {
 549               		.loc 1 26 15 is_stmt 0 view .LVU135
 550 0182 7698      		cbi 0xe,6
 551               	.L7:
 552               	/* epilogue start */
 553               	.LBE39:
 554               	.LBE38:
 133:rn42/rn42_task.c **** 
 555               		.loc 1 133 1 view .LVU136
 556 0184 DF91      		pop r29
 557 0186 CF91      		pop r28
 558 0188 1F91      		pop r17
 559 018a 0F91      		pop r16
 560 018c FF90      		pop r15
 561 018e EF90      		pop r14
 562 0190 DF90      		pop r13
 563 0192 CF90      		pop r12
 564 0194 BF90      		pop r11
 565 0196 AF90      		pop r10
 566 0198 9F90      		pop r9
 567 019a 8F90      		pop r8
 568 019c 7F90      		pop r7
 569 019e 6F90      		pop r6
 570 01a0 5F90      		pop r5
 571 01a2 4F90      		pop r4
 572 01a4 0895      		ret
 573               	.L19:
 574               	.LBB40:
  48:rn42/rn42_task.c ****         switch (state) {
 575               		.loc 1 48 9 is_stmt 1 view .LVU137
  49:rn42/rn42_task.c ****             case LED_INIT:
 576               		.loc 1 49 9 view .LVU138
 577 01a6 8091 0000 		lds r24,state.4946
 578 01aa 8130      		cpi r24,lo8(1)
 579 01ac 01F0      		breq .L9
 580 01ae 8823      		tst r24
 581 01b0 01F0      		breq .L10
 582 01b2 8230      		cpi r24,lo8(2)
 583 01b4 01F0      		breq .L11
 584 01b6 8330      		cpi r24,lo8(3)
 585 01b8 01F0      		breq .L12
 586               	.L46:
  71:rn42/rn42_task.c ****         }
 587               		.loc 1 71 17 view .LVU139
  71:rn42/rn42_task.c ****         }
 588               		.loc 1 71 23 is_stmt 0 view .LVU140
 589 01ba 1092 0000 		sts state.4946,__zero_reg__
 590 01be 00C0      		rjmp .L8
 591               	.L10:
  51:rn42/rn42_task.c ****                 else {
 592               		.loc 1 51 17 is_stmt 1 view .LVU141
  51:rn42/rn42_task.c ****                 else {
 593               		.loc 1 51 20 is_stmt 0 view .LVU142
 594 01c0 CE3F      		cpi r28,-2
 595 01c2 D105      		cpc r29,__zero_reg__
 596 01c4 01F4      		brne .L14
  51:rn42/rn42_task.c ****                 else {
 597               		.loc 1 51 32 is_stmt 1 discriminator 1 view .LVU143
  51:rn42/rn42_task.c ****                 else {
 598               		.loc 1 51 38 is_stmt 0 discriminator 1 view .LVU144
 599 01c6 A092 0000 		sts state.4946,r10
 600 01ca 00C0      		rjmp .L8
 601               	.L14:
  53:rn42/rn42_task.c ****                     else xprintf(" %02X", c);
 602               		.loc 1 53 21 is_stmt 1 view .LVU145
  53:rn42/rn42_task.c ****                     else xprintf(" %02X", c);
 603               		.loc 1 53 24 is_stmt 0 view .LVU146
 604 01cc C038      		cpi r28,-128
 605 01ce D105      		cpc r29,__zero_reg__
 606 01d0 00F4      		brsh .L16
  53:rn42/rn42_task.c ****                     else xprintf(" %02X", c);
 607               		.loc 1 53 48 is_stmt 1 discriminator 1 view .LVU147
 608               	.LBB32:
  53:rn42/rn42_task.c ****                     else xprintf(" %02X", c);
 609               		.loc 1 53 48 discriminator 1 view .LVU148
  53:rn42/rn42_task.c ****                     else xprintf(" %02X", c);
 610               		.loc 1 53 48 discriminator 1 view .LVU149
 611               	.LBE32:
 612 01d2 DF93      		push r29
 613               	.LCFI27:
 614               		.cfi_def_cfa_offset 19
 615 01d4 CF93      		push r28
 616               	.LCFI28:
 617               		.cfi_def_cfa_offset 20
 618 01d6 FF92      		push r15
 619               	.LCFI29:
 620               		.cfi_def_cfa_offset 21
 621 01d8 EF92      		push r14
 622               	.LCFI30:
 623               		.cfi_def_cfa_offset 22
 624               	.L47:
  54:rn42/rn42_task.c ****                 }
 625               		.loc 1 54 26 is_stmt 0 view .LVU150
 626 01da 0E94 0000 		call __xprintf
 627 01de 0F90      		pop __tmp_reg__
 628 01e0 0F90      		pop __tmp_reg__
 629 01e2 0F90      		pop __tmp_reg__
 630 01e4 0F90      		pop __tmp_reg__
 631               	.LCFI31:
 632               		.cfi_def_cfa_offset 18
 633 01e6 00C0      		rjmp .L8
 634               	.L16:
  54:rn42/rn42_task.c ****                 }
 635               		.loc 1 54 26 is_stmt 1 view .LVU151
 636               	.LBB33:
  54:rn42/rn42_task.c ****                 }
 637               		.loc 1 54 26 view .LVU152
  54:rn42/rn42_task.c ****                 }
 638               		.loc 1 54 26 view .LVU153
 639               	.LBE33:
 640 01e8 DF93      		push r29
 641               	.LCFI32:
 642               		.cfi_remember_state
 643               		.cfi_def_cfa_offset 19
 644 01ea CF93      		push r28
 645               	.LCFI33:
 646               		.cfi_def_cfa_offset 20
 647 01ec 1F93      		push r17
 648               	.LCFI34:
 649               		.cfi_def_cfa_offset 21
 650 01ee 0F93      		push r16
 651               	.LCFI35:
 652               		.cfi_def_cfa_offset 22
 653 01f0 00C0      		rjmp .L47
 654               	.L9:
 655               	.LCFI36:
 656               		.cfi_restore_state
  58:rn42/rn42_task.c ****                 else           state = LED_INIT;
 657               		.loc 1 58 17 view .LVU154
  58:rn42/rn42_task.c ****                 else           state = LED_INIT;
 658               		.loc 1 58 20 is_stmt 0 view .LVU155
 659 01f2 2297      		sbiw r28,2
 660 01f4 01F4      		brne .L46
  58:rn42/rn42_task.c ****                 else           state = LED_INIT;
 661               		.loc 1 58 32 is_stmt 1 discriminator 1 view .LVU156
  58:rn42/rn42_task.c ****                 else           state = LED_INIT;
 662               		.loc 1 58 38 is_stmt 0 discriminator 1 view .LVU157
 663 01f6 B092 0000 		sts state.4946,r11
 664 01fa 00C0      		rjmp .L8
 665               	.L11:
  62:rn42/rn42_task.c ****                 else           state = LED_INIT;
 666               		.loc 1 62 17 is_stmt 1 view .LVU158
  62:rn42/rn42_task.c ****                 else           state = LED_INIT;
 667               		.loc 1 62 20 is_stmt 0 view .LVU159
 668 01fc 2197      		sbiw r28,1
 669 01fe 01F4      		brne .L46
  62:rn42/rn42_task.c ****                 else           state = LED_INIT;
 670               		.loc 1 62 32 is_stmt 1 discriminator 1 view .LVU160
  62:rn42/rn42_task.c ****                 else           state = LED_INIT;
 671               		.loc 1 62 38 is_stmt 0 discriminator 1 view .LVU161
 672 0200 9092 0000 		sts state.4946,r9
 673 0204 00C0      		rjmp .L8
 674               	.L12:
  66:rn42/rn42_task.c ****                 rn42_set_leds(c);
 675               		.loc 1 66 17 is_stmt 1 view .LVU162
  66:rn42/rn42_task.c ****                 rn42_set_leds(c);
 676               		.loc 1 66 17 view .LVU163
 677 0206 8091 0000 		lds r24,debug_config
 678 020a 80FF      		sbrs r24,0
 679 020c 00C0      		rjmp .L18
  66:rn42/rn42_task.c ****                 rn42_set_leds(c);
 680               		.loc 1 66 17 discriminator 1 view .LVU164
 681               	.LBB34:
  66:rn42/rn42_task.c ****                 rn42_set_leds(c);
 682               		.loc 1 66 17 discriminator 1 view .LVU165
  66:rn42/rn42_task.c ****                 rn42_set_leds(c);
 683               		.loc 1 66 17 discriminator 1 view .LVU166
 684               	.LBE34:
 685 020e DF93      		push r29
 686               	.LCFI37:
 687               		.cfi_def_cfa_offset 19
 688 0210 CF93      		push r28
 689               	.LCFI38:
 690               		.cfi_def_cfa_offset 20
 691 0212 DF92      		push r13
 692               	.LCFI39:
 693               		.cfi_def_cfa_offset 21
 694 0214 CF92      		push r12
 695               	.LCFI40:
 696               		.cfi_def_cfa_offset 22
 697 0216 0E94 0000 		call __xprintf
 698 021a 0F90      		pop __tmp_reg__
 699 021c 0F90      		pop __tmp_reg__
 700 021e 0F90      		pop __tmp_reg__
 701 0220 0F90      		pop __tmp_reg__
 702               	.LCFI41:
 703               		.cfi_def_cfa_offset 18
 704               	.L18:
  67:rn42/rn42_task.c ****                 state = LED_INIT;
 705               		.loc 1 67 17 view .LVU167
 706 0222 8C2F      		mov r24,r28
 707 0224 0E94 0000 		call rn42_set_leds
  68:rn42/rn42_task.c ****                 break;
 708               		.loc 1 68 17 view .LVU168
 709 0228 00C0      		rjmp .L46
 710               	.L22:
 711               	.LBE40:
  87:rn42/rn42_task.c ****                 clear_keyboard();
 712               		.loc 1 87 13 view .LVU169
  87:rn42/rn42_task.c ****                 clear_keyboard();
 713               		.loc 1 87 17 is_stmt 0 view .LVU170
 714 022a 0E94 0000 		call host_get_driver
  87:rn42/rn42_task.c ****                 clear_keyboard();
 715               		.loc 1 87 16 view .LVU171
 716 022e 8050      		subi r24,lo8(lufa_driver)
 717 0230 9040      		sbci r25,hi8(lufa_driver)
 718 0232 01F4      		brne .+2
 719 0234 00C0      		rjmp .L21
  88:rn42/rn42_task.c **** #ifdef NKRO_ENABLE
 720               		.loc 1 88 17 is_stmt 1 view .LVU172
 721 0236 0E94 0000 		call clear_keyboard
  90:rn42/rn42_task.c **** #endif
 722               		.loc 1 90 17 view .LVU173
  90:rn42/rn42_task.c **** #endif
 723               		.loc 1 90 31 is_stmt 0 view .LVU174
 724 023a 8091 0000 		lds r24,rn42_nkro_last
 725 023e 8093 0000 		sts keyboard_nkro,r24
  92:rn42/rn42_task.c ****             }
 726               		.loc 1 92 17 is_stmt 1 view .LVU175
 727 0242 80E0      		ldi r24,lo8(lufa_driver)
 728 0244 90E0      		ldi r25,hi8(lufa_driver)
 729 0246 00C0      		rjmp .L48
 730               	.L26:
 731               	.LBB41:
 109:rn42/rn42_task.c ****         }
 732               		.loc 1 109 13 view .LVU176
 733 0248 80E0      		ldi r24,0
 734 024a 00C0      		rjmp .L49
 735               	.L29:
 736               	.LBE41:
 131:rn42/rn42_task.c ****     }
 737               		.loc 1 131 9 view .LVU177
 738               	.LBB42:
 739               	.LBI42:
  22:rn42/rn42_task.c **** {
 740               		.loc 1 22 13 view .LVU178
 741               	.LBB43:
  24:rn42/rn42_task.c ****         DDRE  |=  (1<<6);
 742               		.loc 1 24 5 view .LVU179
  28:rn42/rn42_task.c ****         PORTE |=  (1<<6);
 743               		.loc 1 28 9 view .LVU180
  28:rn42/rn42_task.c ****         PORTE |=  (1<<6);
 744               		.loc 1 28 15 is_stmt 0 view .LVU181
 745 024c 6E9A      		sbi 0xd,6
  29:rn42/rn42_task.c ****     }
 746               		.loc 1 29 9 is_stmt 1 view .LVU182
  29:rn42/rn42_task.c ****     }
 747               		.loc 1 29 15 is_stmt 0 view .LVU183
 748 024e 769A      		sbi 0xe,6
 749               	.LBE43:
 750               	.LBE42:
 133:rn42/rn42_task.c **** 
 751               		.loc 1 133 1 view .LVU184
 752 0250 00C0      		rjmp .L7
 753               		.cfi_endproc
 754               	.LFE110:
 756               		.section	.rodata.command_extra.str1.1,"aMS",@progbits,1
 757               	.LC0:
 758 0000 524E 2D34 		.string	"RN-42"
 758      3200 
 759               	.LC1:
 760 0006 4C55 4641 		.string	"LUFA"
 760      00
 761               	.LC2:
 762 000b 4F46 4600 		.string	"OFF"
 763               	.LC3:
 764 000f 434F 4E4E 		.string	"CONN"
 764      00
 765               	.LC4:
 766 0014 4F4E 00   		.string	"ON"
 767               	.LC5:
 768 0017 5375 7370 		.string	"Suspended"
 768      656E 6465 
 768      6400 
 769               	.LC6:
 770 0021 4164 6472 		.string	"Addressed"
 770      6573 7365 
 770      6400 
 771               	.LC7:
 772 002b 556E 6174 		.string	"Unattached"
 772      7461 6368 
 772      6564 00
 773               	.LC8:
 774 0036 506F 7765 		.string	"Powered"
 774      7265 6400 
 775               	.LC9:
 776 003e 4465 6661 		.string	"Default"
 776      756C 7400 
 777               	.LC10:
 778 0046 436F 6E66 		.string	"Configured"
 778      6967 7572 
 778      6564 00
 779               	.LC11:
 780 0051 3F00      		.string	"?"
 781               		.section	.text.command_extra,"ax",@progbits
 782               	.global	command_extra
 784               	command_extra:
 785               	.LFB115:
 167:rn42/rn42_task.c **** }
 168:rn42/rn42_task.c **** 
 169:rn42/rn42_task.c **** static void init_rn42(void)
 170:rn42/rn42_task.c **** {
 171:rn42/rn42_task.c ****     // RN-42 configure
 172:rn42/rn42_task.c ****     if (!config_mode) enter_command_mode();
 173:rn42/rn42_task.c ****     SEND_COMMAND("SF,1\r\n");  // factory defaults
 174:rn42/rn42_task.c ****     SEND_COMMAND("S-,TmkBT\r\n");
 175:rn42/rn42_task.c ****     SEND_COMMAND("SS,Keyboard/Mouse\r\n");
 176:rn42/rn42_task.c ****     SEND_COMMAND("SM,4\r\n");  // auto connect(DTR)
 177:rn42/rn42_task.c ****     SEND_COMMAND("SW,8000\r\n");   // Sniff disable
 178:rn42/rn42_task.c ****     SEND_COMMAND("S~,6\r\n");   // HID profile
 179:rn42/rn42_task.c ****     SEND_COMMAND("SH,003C\r\n");   // combo device, out-report, 4-reconnect
 180:rn42/rn42_task.c ****     SEND_COMMAND("SY,FFF4\r\n");   // transmit power -12
 181:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");
 182:rn42/rn42_task.c ****     if (!config_mode) exit_command_mode();
 183:rn42/rn42_task.c **** }
 184:rn42/rn42_task.c **** 
 185:rn42/rn42_task.c **** #if 0
 186:rn42/rn42_task.c **** // Switching connections
 187:rn42/rn42_task.c **** // NOTE: Remote Address doesn't work in the way manual says.
 188:rn42/rn42_task.c **** // EEPROM address for link store
 189:rn42/rn42_task.c **** #define RN42_LINK0  (uint8_t *)128
 190:rn42/rn42_task.c **** #define RN42_LINK1  (uint8_t *)140
 191:rn42/rn42_task.c **** #define RN42_LINK2  (uint8_t *)152
 192:rn42/rn42_task.c **** #define RN42_LINK3  (uint8_t *)164
 193:rn42/rn42_task.c **** static void store_link(uint8_t *eeaddr)
 194:rn42/rn42_task.c **** {
 195:rn42/rn42_task.c ****     enter_command_mode();
 196:rn42/rn42_task.c ****     SEND_STR("GR\r\n"); // remote address
 197:rn42/rn42_task.c ****     const char *s = rn42_gets(500);
 198:rn42/rn42_task.c ****     if (strcmp("GR", s) == 0) s = rn42_gets(500);   // ignore local echo
 199:rn42/rn42_task.c ****     xprintf("%s(%d)\r\n", s, strlen(s));
 200:rn42/rn42_task.c ****     if (strlen(s) == 12) {
 201:rn42/rn42_task.c ****         for (int i = 0; i < 12; i++) {
 202:rn42/rn42_task.c ****             eeprom_write_byte(eeaddr+i, *(s+i));
 203:rn42/rn42_task.c ****             dprintf("%c ", *(s+i));
 204:rn42/rn42_task.c ****         }
 205:rn42/rn42_task.c ****         dprint("\r\n");
 206:rn42/rn42_task.c ****     }
 207:rn42/rn42_task.c ****     exit_command_mode();
 208:rn42/rn42_task.c **** }
 209:rn42/rn42_task.c **** 
 210:rn42/rn42_task.c **** static void restore_link(const uint8_t *eeaddr)
 211:rn42/rn42_task.c **** {
 212:rn42/rn42_task.c ****     enter_command_mode();
 213:rn42/rn42_task.c ****     SEND_COMMAND("SR,Z\r\n");   // remove remote address
 214:rn42/rn42_task.c ****     SEND_STR("SR,");            // set remote address from EEPROM
 215:rn42/rn42_task.c ****     for (int i = 0; i < 12; i++) {
 216:rn42/rn42_task.c ****         uint8_t c = eeprom_read_byte(eeaddr+i);
 217:rn42/rn42_task.c ****         rn42_putc(c);
 218:rn42/rn42_task.c ****         dprintf("%c ", c);
 219:rn42/rn42_task.c ****     }
 220:rn42/rn42_task.c ****     dprintf("\r\n");
 221:rn42/rn42_task.c ****     SEND_COMMAND("\r\n");
 222:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");    // reboot
 223:rn42/rn42_task.c ****     exit_command_mode();
 224:rn42/rn42_task.c **** }
 225:rn42/rn42_task.c **** 
 226:rn42/rn42_task.c **** static const char *get_link(uint8_t * eeaddr)
 227:rn42/rn42_task.c **** {
 228:rn42/rn42_task.c ****     static char s[13];
 229:rn42/rn42_task.c ****     for (int i = 0; i < 12; i++) {
 230:rn42/rn42_task.c ****         uint8_t c = eeprom_read_byte(eeaddr+i);
 231:rn42/rn42_task.c ****         s[i] = c;
 232:rn42/rn42_task.c ****     }
 233:rn42/rn42_task.c ****     s[12] = '\0';
 234:rn42/rn42_task.c ****     return s;
 235:rn42/rn42_task.c **** }
 236:rn42/rn42_task.c **** #endif
 237:rn42/rn42_task.c **** 
 238:rn42/rn42_task.c **** static void pairing(void)
 239:rn42/rn42_task.c **** {
 240:rn42/rn42_task.c ****     enter_command_mode();
 241:rn42/rn42_task.c ****     SEND_COMMAND("SR,Z\r\n");   // remove remote address
 242:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");    // reboot
 243:rn42/rn42_task.c ****     exit_command_mode();
 244:rn42/rn42_task.c **** }
 245:rn42/rn42_task.c **** 
 246:rn42/rn42_task.c **** bool command_extra(uint8_t code)
 247:rn42/rn42_task.c **** {
 786               		.loc 1 247 1 is_stmt 1 view -0
 787               		.cfi_startproc
 788 0000 4F92      		push r4
 789               	.LCFI42:
 790               		.cfi_def_cfa_offset 3
 791               		.cfi_offset 4, -2
 792 0002 5F92      		push r5
 793               	.LCFI43:
 794               		.cfi_def_cfa_offset 4
 795               		.cfi_offset 5, -3
 796 0004 6F92      		push r6
 797               	.LCFI44:
 798               		.cfi_def_cfa_offset 5
 799               		.cfi_offset 6, -4
 800 0006 7F92      		push r7
 801               	.LCFI45:
 802               		.cfi_def_cfa_offset 6
 803               		.cfi_offset 7, -5
 804 0008 8F92      		push r8
 805               	.LCFI46:
 806               		.cfi_def_cfa_offset 7
 807               		.cfi_offset 8, -6
 808 000a 9F92      		push r9
 809               	.LCFI47:
 810               		.cfi_def_cfa_offset 8
 811               		.cfi_offset 9, -7
 812 000c AF92      		push r10
 813               	.LCFI48:
 814               		.cfi_def_cfa_offset 9
 815               		.cfi_offset 10, -8
 816 000e BF92      		push r11
 817               	.LCFI49:
 818               		.cfi_def_cfa_offset 10
 819               		.cfi_offset 11, -9
 820 0010 CF92      		push r12
 821               	.LCFI50:
 822               		.cfi_def_cfa_offset 11
 823               		.cfi_offset 12, -10
 824 0012 DF92      		push r13
 825               	.LCFI51:
 826               		.cfi_def_cfa_offset 12
 827               		.cfi_offset 13, -11
 828 0014 EF92      		push r14
 829               	.LCFI52:
 830               		.cfi_def_cfa_offset 13
 831               		.cfi_offset 14, -12
 832 0016 FF92      		push r15
 833               	.LCFI53:
 834               		.cfi_def_cfa_offset 14
 835               		.cfi_offset 15, -13
 836 0018 CF93      		push r28
 837               	.LCFI54:
 838               		.cfi_def_cfa_offset 15
 839               		.cfi_offset 28, -14
 840               	/* prologue: function */
 841               	/* frame size = 0 */
 842               	/* stack size = 13 */
 843               	.L__stack_usage = 13
 248:rn42/rn42_task.c ****     uint32_t t;
 844               		.loc 1 248 5 view .LVU186
 249:rn42/rn42_task.c ****     uint16_t b;
 845               		.loc 1 249 5 view .LVU187
 250:rn42/rn42_task.c ****     switch (code) {
 846               		.loc 1 250 5 view .LVU188
 847 001a 8331      		cpi r24,lo8(19)
 848 001c 01F4      		brne .+2
 849 001e 00C0      		rjmp .L51
 850 0020 00F4      		brsh .L52
 851 0022 8B30      		cpi r24,lo8(11)
 852 0024 01F0      		breq .L53
 853 0026 00F4      		brsh .L54
 854 0028 8530      		cpi r24,lo8(5)
 855 002a 01F4      		brne .+2
 856 002c 00C0      		rjmp .L55
 857               	.L56:
 858               	.LBB90:
 251:rn42/rn42_task.c ****         case KC_H:
 252:rn42/rn42_task.c ****         case KC_SLASH: /* ? */
 253:rn42/rn42_task.c ****             print("\n\n----- Bluetooth RN-42 Help -----\n");
 254:rn42/rn42_task.c ****             print("i:       RN-42 info\n");
 255:rn42/rn42_task.c ****             print("b:       battery voltage\n");
 256:rn42/rn42_task.c ****             print("Del:     enter/exit RN-42 config mode\n");
 257:rn42/rn42_task.c ****             print("Slck:    RN-42 initialize\n");
 258:rn42/rn42_task.c **** #if 0
 259:rn42/rn42_task.c ****             print("1-4:     restore link\n");
 260:rn42/rn42_task.c ****             print("F1-F4:   store link\n");
 261:rn42/rn42_task.c **** #endif
 262:rn42/rn42_task.c ****             print("p:       pairing\n");
 263:rn42/rn42_task.c **** 
 264:rn42/rn42_task.c ****             if (config_mode) {
 265:rn42/rn42_task.c ****                 return true;
 266:rn42/rn42_task.c ****             } else {
 267:rn42/rn42_task.c ****                 print("u:       toggle Force USB mode\n");
 268:rn42/rn42_task.c ****                 return false;   // to display default command help
 269:rn42/rn42_task.c ****             }
 270:rn42/rn42_task.c ****         case KC_P:
 271:rn42/rn42_task.c ****             pairing();
 272:rn42/rn42_task.c ****             return true;
 273:rn42/rn42_task.c **** #if 0
 274:rn42/rn42_task.c ****         /* Store link address to EEPROM */
 275:rn42/rn42_task.c ****         case KC_F1:
 276:rn42/rn42_task.c ****             store_link(RN42_LINK0);
 277:rn42/rn42_task.c ****             return true;
 278:rn42/rn42_task.c ****         case KC_F2:
 279:rn42/rn42_task.c ****             store_link(RN42_LINK1);
 280:rn42/rn42_task.c ****             return true;
 281:rn42/rn42_task.c ****         case KC_F3:
 282:rn42/rn42_task.c ****             store_link(RN42_LINK2);
 283:rn42/rn42_task.c ****             return true;
 284:rn42/rn42_task.c ****         case KC_F4:
 285:rn42/rn42_task.c ****             store_link(RN42_LINK3);
 286:rn42/rn42_task.c ****             return true;
 287:rn42/rn42_task.c ****         /* Restore link address to EEPROM */
 288:rn42/rn42_task.c ****         case KC_1:
 289:rn42/rn42_task.c ****             restore_link(RN42_LINK0);
 290:rn42/rn42_task.c ****             return true;
 291:rn42/rn42_task.c ****         case KC_2:
 292:rn42/rn42_task.c ****             restore_link(RN42_LINK1);
 293:rn42/rn42_task.c ****             return true;
 294:rn42/rn42_task.c ****         case KC_3:
 295:rn42/rn42_task.c ****             restore_link(RN42_LINK2);
 296:rn42/rn42_task.c ****             return true;
 297:rn42/rn42_task.c ****         case KC_4:
 298:rn42/rn42_task.c ****             restore_link(RN42_LINK3);
 299:rn42/rn42_task.c ****             return true;
 300:rn42/rn42_task.c **** #endif
 301:rn42/rn42_task.c ****         case KC_I:
 302:rn42/rn42_task.c ****             print("\n----- RN-42 info -----\n");
 303:rn42/rn42_task.c ****             xprintf("protocol: %s\n", (host_get_driver() == &rn42_driver) ? "RN-42" : "LUFA");
 304:rn42/rn42_task.c ****             xprintf("force_usb: %X\n", force_usb);
 305:rn42/rn42_task.c ****             xprintf("rn42: %s\n", rn42_rts() ? "OFF" : (rn42_linked() ? "CONN" : "ON"));
 306:rn42/rn42_task.c ****             xprintf("rn42_autoconnecting(): %X\n", rn42_autoconnecting());
 307:rn42/rn42_task.c ****             xprintf("config_mode: %X\n", config_mode);
 308:rn42/rn42_task.c ****             xprintf("USB State: %s\n",
 309:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 310:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Powered) ? "Powered" :
 311:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Default) ? "Default" :
 312:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Addressed) ? "Addressed" :
 313:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Configured) ? "Configured" :
 314:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Suspended) ? "Suspended" : "?");
 315:rn42/rn42_task.c ****             xprintf("battery: ");
 316:rn42/rn42_task.c ****             switch (battery_status()) {
 317:rn42/rn42_task.c ****                 case FULL_CHARGED:  xprintf("FULL"); break;
 318:rn42/rn42_task.c ****                 case CHARGING:      xprintf("CHARG"); break;
 319:rn42/rn42_task.c ****                 case DISCHARGING:   xprintf("DISCHG"); break;
 320:rn42/rn42_task.c ****                 case LOW_VOLTAGE:   xprintf("LOW"); break;
 321:rn42/rn42_task.c ****                 default:            xprintf("?"); break;
 322:rn42/rn42_task.c ****             };
 323:rn42/rn42_task.c ****             xprintf("\n");
 324:rn42/rn42_task.c ****             xprintf("RemoteWakeupEnabled: %X\n", USB_Device_RemoteWakeupEnabled);
 325:rn42/rn42_task.c ****             xprintf("VBUS: %X\n", USBSTA&(1<<VBUS));
 326:rn42/rn42_task.c ****             t = timer_read32()/1000;
 327:rn42/rn42_task.c ****             uint8_t d = t/3600/24;
 328:rn42/rn42_task.c ****             uint8_t h = t/3600;
 329:rn42/rn42_task.c ****             uint8_t m = t%3600/60;
 330:rn42/rn42_task.c ****             uint8_t s = t%60;
 331:rn42/rn42_task.c ****             xprintf("uptime: %02u %02u:%02u:%02u\n", d, h, m, s);
 332:rn42/rn42_task.c **** #if 0
 333:rn42/rn42_task.c ****             xprintf("LINK0: %s\r\n", get_link(RN42_LINK0));
 334:rn42/rn42_task.c ****             xprintf("LINK1: %s\r\n", get_link(RN42_LINK1));
 335:rn42/rn42_task.c ****             xprintf("LINK2: %s\r\n", get_link(RN42_LINK2));
 336:rn42/rn42_task.c ****             xprintf("LINK3: %s\r\n", get_link(RN42_LINK3));
 337:rn42/rn42_task.c **** #endif
 338:rn42/rn42_task.c ****             return true;
 339:rn42/rn42_task.c ****         case KC_B:
 340:rn42/rn42_task.c ****             // battery monitor
 341:rn42/rn42_task.c ****             t = timer_read32()/1000;
 342:rn42/rn42_task.c ****             b = battery_voltage();
 343:rn42/rn42_task.c ****             xprintf("BAT: %umV\t", b);
 344:rn42/rn42_task.c ****             xprintf("%02u:",   t/3600);
 345:rn42/rn42_task.c ****             xprintf("%02u:",   t%3600/60);
 346:rn42/rn42_task.c ****             xprintf("%02u\n",  t%60);
 347:rn42/rn42_task.c ****             return true;
 348:rn42/rn42_task.c ****         case KC_U:
 349:rn42/rn42_task.c ****             if (config_mode) return false;
 350:rn42/rn42_task.c ****             if (force_usb) {
 351:rn42/rn42_task.c ****                 print("Auto mode\n");
 352:rn42/rn42_task.c ****                 force_usb = false;
 353:rn42/rn42_task.c ****             } else {
 354:rn42/rn42_task.c ****                 print("USB mode\n");
 355:rn42/rn42_task.c ****                 force_usb = true;
 356:rn42/rn42_task.c ****             }
 357:rn42/rn42_task.c ****             return true;
 358:rn42/rn42_task.c ****         case KC_DELETE:
 359:rn42/rn42_task.c ****             /* RN-42 Command mode */
 360:rn42/rn42_task.c ****             if (rn42_autoconnecting()) {
 361:rn42/rn42_task.c ****                 enter_command_mode();
 362:rn42/rn42_task.c **** 
 363:rn42/rn42_task.c ****                 command_state = CONSOLE;
 364:rn42/rn42_task.c ****                 config_mode = true;
 365:rn42/rn42_task.c ****             } else {
 366:rn42/rn42_task.c ****                 exit_command_mode();
 367:rn42/rn42_task.c **** 
 368:rn42/rn42_task.c ****                 command_state = ONESHOT;
 369:rn42/rn42_task.c ****                 config_mode = false;
 370:rn42/rn42_task.c ****             }
 371:rn42/rn42_task.c ****             return true;
 372:rn42/rn42_task.c ****         case KC_SCROLLLOCK:
 373:rn42/rn42_task.c ****             init_rn42();
 374:rn42/rn42_task.c ****             return true;
 375:rn42/rn42_task.c **** #ifdef NKRO_ENABLE
 376:rn42/rn42_task.c ****         case KC_N:
 377:rn42/rn42_task.c ****             if (host_get_driver() != &lufa_driver) {
 378:rn42/rn42_task.c ****                 // ignored unless USB mode
 379:rn42/rn42_task.c ****                 return true;
 380:rn42/rn42_task.c ****             }
 381:rn42/rn42_task.c ****             return false;
 382:rn42/rn42_task.c **** #endif
 383:rn42/rn42_task.c ****         default:
 384:rn42/rn42_task.c ****             if (config_mode)
 859               		.loc 1 384 13 view .LVU189
 860               		.loc 1 384 17 is_stmt 0 view .LVU190
 861 002e C091 0000 		lds r28,config_mode
 862 0032 00C0      		rjmp .L50
 863               	.L54:
 864 0034 8C30      		cpi r24,lo8(12)
 865 0036 01F4      		brne .+2
 866 0038 00C0      		rjmp .L57
 867 003a 8131      		cpi r24,lo8(17)
 868 003c 01F4      		brne .L56
 377:rn42/rn42_task.c ****                 // ignored unless USB mode
 869               		.loc 1 377 13 is_stmt 1 view .LVU191
 377:rn42/rn42_task.c ****                 // ignored unless USB mode
 870               		.loc 1 377 17 is_stmt 0 view .LVU192
 871 003e 0E94 0000 		call host_get_driver
 377:rn42/rn42_task.c ****                 // ignored unless USB mode
 872               		.loc 1 377 16 view .LVU193
 873 0042 C1E0      		ldi r28,lo8(1)
 874 0044 8050      		subi r24,lo8(lufa_driver)
 875 0046 9040      		sbci r25,hi8(lufa_driver)
 876 0048 01F0      		breq .+2
 877 004a 00C0      		rjmp .L50
 878               	.L88:
 349:rn42/rn42_task.c ****             if (force_usb) {
 879               		.loc 1 349 37 view .LVU194
 880 004c C0E0      		ldi r28,0
 881 004e 00C0      		rjmp .L50
 882               	.L52:
 883 0050 8833      		cpi r24,lo8(56)
 884 0052 01F0      		breq .L53
 885 0054 00F4      		brsh .L59
 886 0056 8831      		cpi r24,lo8(24)
 887 0058 01F4      		brne .L56
 349:rn42/rn42_task.c ****             if (force_usb) {
 888               		.loc 1 349 13 is_stmt 1 view .LVU195
 349:rn42/rn42_task.c ****             if (force_usb) {
 889               		.loc 1 349 16 is_stmt 0 view .LVU196
 890 005a 8091 0000 		lds r24,config_mode
 891 005e 8111      		cpse r24,__zero_reg__
 892 0060 00C0      		rjmp .L88
 350:rn42/rn42_task.c ****                 print("Auto mode\n");
 893               		.loc 1 350 13 is_stmt 1 view .LVU197
 350:rn42/rn42_task.c ****                 print("Auto mode\n");
 894               		.loc 1 350 17 is_stmt 0 view .LVU198
 895 0062 C091 0000 		lds r28,force_usb
 350:rn42/rn42_task.c ****                 print("Auto mode\n");
 896               		.loc 1 350 16 view .LVU199
 897 0066 CC23      		tst r28
 898 0068 01F4      		brne .+2
 899 006a 00C0      		rjmp .L74
 351:rn42/rn42_task.c ****                 force_usb = false;
 900               		.loc 1 351 17 is_stmt 1 view .LVU200
 901               	.LBB91:
 351:rn42/rn42_task.c ****                 force_usb = false;
 902               		.loc 1 351 17 view .LVU201
 351:rn42/rn42_task.c ****                 force_usb = false;
 903               		.loc 1 351 17 view .LVU202
 904               	.LBE91:
 905 006c 80E0      		ldi r24,lo8(__c.5100)
 906 006e 90E0      		ldi r25,hi8(__c.5100)
 907 0070 0E94 0000 		call xputs
 352:rn42/rn42_task.c ****             } else {
 908               		.loc 1 352 17 view .LVU203
 352:rn42/rn42_task.c ****             } else {
 909               		.loc 1 352 27 is_stmt 0 view .LVU204
 910 0074 1092 0000 		sts force_usb,__zero_reg__
 911 0078 00C0      		rjmp .L50
 912               	.L59:
 913 007a 8734      		cpi r24,lo8(71)
 914 007c 01F4      		brne .+2
 915 007e 00C0      		rjmp .L61
 916 0080 8C34      		cpi r24,lo8(76)
 917 0082 01F4      		brne .L56
 360:rn42/rn42_task.c ****                 enter_command_mode();
 918               		.loc 1 360 13 is_stmt 1 view .LVU205
 360:rn42/rn42_task.c ****                 enter_command_mode();
 919               		.loc 1 360 17 is_stmt 0 view .LVU206
 920 0084 0E94 0000 		call rn42_autoconnecting
 921 0088 C82F      		mov r28,r24
 360:rn42/rn42_task.c ****                 enter_command_mode();
 922               		.loc 1 360 16 view .LVU207
 923 008a 8823      		tst r24
 924 008c 01F4      		brne .+2
 925 008e 00C0      		rjmp .L75
 361:rn42/rn42_task.c **** 
 926               		.loc 1 361 17 is_stmt 1 view .LVU208
 927 0090 0E94 0000 		call enter_command_mode
 363:rn42/rn42_task.c ****                 config_mode = true;
 928               		.loc 1 363 17 view .LVU209
 363:rn42/rn42_task.c ****                 config_mode = true;
 929               		.loc 1 363 31 is_stmt 0 view .LVU210
 930 0094 81E0      		ldi r24,lo8(1)
 931 0096 8093 0000 		sts command_state,r24
 364:rn42/rn42_task.c ****             } else {
 932               		.loc 1 364 17 is_stmt 1 view .LVU211
 364:rn42/rn42_task.c ****             } else {
 933               		.loc 1 364 29 is_stmt 0 view .LVU212
 934 009a 8093 0000 		sts config_mode,r24
 935 009e 00C0      		rjmp .L50
 936               	.L53:
 253:rn42/rn42_task.c ****             print("i:       RN-42 info\n");
 937               		.loc 1 253 13 is_stmt 1 view .LVU213
 938               	.LBB92:
 253:rn42/rn42_task.c ****             print("i:       RN-42 info\n");
 939               		.loc 1 253 13 view .LVU214
 253:rn42/rn42_task.c ****             print("i:       RN-42 info\n");
 940               		.loc 1 253 13 view .LVU215
 941               	.LBE92:
 942 00a0 80E0      		ldi r24,lo8(__c.5030)
 943 00a2 90E0      		ldi r25,hi8(__c.5030)
 944 00a4 0E94 0000 		call xputs
 254:rn42/rn42_task.c ****             print("b:       battery voltage\n");
 945               		.loc 1 254 13 view .LVU216
 946               	.LBB93:
 254:rn42/rn42_task.c ****             print("b:       battery voltage\n");
 947               		.loc 1 254 13 view .LVU217
 254:rn42/rn42_task.c ****             print("b:       battery voltage\n");
 948               		.loc 1 254 13 view .LVU218
 949               	.LBE93:
 950 00a8 80E0      		ldi r24,lo8(__c.5032)
 951 00aa 90E0      		ldi r25,hi8(__c.5032)
 952 00ac 0E94 0000 		call xputs
 255:rn42/rn42_task.c ****             print("Del:     enter/exit RN-42 config mode\n");
 953               		.loc 1 255 13 view .LVU219
 954               	.LBB94:
 255:rn42/rn42_task.c ****             print("Del:     enter/exit RN-42 config mode\n");
 955               		.loc 1 255 13 view .LVU220
 255:rn42/rn42_task.c ****             print("Del:     enter/exit RN-42 config mode\n");
 956               		.loc 1 255 13 view .LVU221
 957               	.LBE94:
 958 00b0 80E0      		ldi r24,lo8(__c.5034)
 959 00b2 90E0      		ldi r25,hi8(__c.5034)
 960 00b4 0E94 0000 		call xputs
 256:rn42/rn42_task.c ****             print("Slck:    RN-42 initialize\n");
 961               		.loc 1 256 13 view .LVU222
 962               	.LBB95:
 256:rn42/rn42_task.c ****             print("Slck:    RN-42 initialize\n");
 963               		.loc 1 256 13 view .LVU223
 256:rn42/rn42_task.c ****             print("Slck:    RN-42 initialize\n");
 964               		.loc 1 256 13 view .LVU224
 965               	.LBE95:
 966 00b8 80E0      		ldi r24,lo8(__c.5036)
 967 00ba 90E0      		ldi r25,hi8(__c.5036)
 968 00bc 0E94 0000 		call xputs
 257:rn42/rn42_task.c **** #if 0
 969               		.loc 1 257 13 view .LVU225
 970               	.LBB96:
 257:rn42/rn42_task.c **** #if 0
 971               		.loc 1 257 13 view .LVU226
 257:rn42/rn42_task.c **** #if 0
 972               		.loc 1 257 13 view .LVU227
 973               	.LBE96:
 974 00c0 80E0      		ldi r24,lo8(__c.5038)
 975 00c2 90E0      		ldi r25,hi8(__c.5038)
 976 00c4 0E94 0000 		call xputs
 262:rn42/rn42_task.c **** 
 977               		.loc 1 262 13 view .LVU228
 978               	.LBB97:
 262:rn42/rn42_task.c **** 
 979               		.loc 1 262 13 view .LVU229
 262:rn42/rn42_task.c **** 
 980               		.loc 1 262 13 view .LVU230
 981               	.LBE97:
 982 00c8 80E0      		ldi r24,lo8(__c.5040)
 983 00ca 90E0      		ldi r25,hi8(__c.5040)
 984 00cc 0E94 0000 		call xputs
 264:rn42/rn42_task.c ****                 return true;
 985               		.loc 1 264 13 view .LVU231
 264:rn42/rn42_task.c ****                 return true;
 986               		.loc 1 264 17 is_stmt 0 view .LVU232
 987 00d0 C091 0000 		lds r28,config_mode
 264:rn42/rn42_task.c ****                 return true;
 988               		.loc 1 264 16 view .LVU233
 989 00d4 CC23      		tst r28
 990 00d6 01F0      		breq .L63
 991               	.L97:
 272:rn42/rn42_task.c **** #if 0
 992               		.loc 1 272 20 view .LVU234
 993 00d8 C1E0      		ldi r28,lo8(1)
 994 00da 00C0      		rjmp .L50
 995               	.L63:
 267:rn42/rn42_task.c ****                 return false;   // to display default command help
 996               		.loc 1 267 17 is_stmt 1 view .LVU235
 997               	.LBB98:
 267:rn42/rn42_task.c ****                 return false;   // to display default command help
 998               		.loc 1 267 17 view .LVU236
 267:rn42/rn42_task.c ****                 return false;   // to display default command help
 999               		.loc 1 267 17 view .LVU237
 1000               	.LBE98:
 1001 00dc 80E0      		ldi r24,lo8(__c.5042)
 1002 00de 90E0      		ldi r25,hi8(__c.5042)
 1003 00e0 0E94 0000 		call xputs
 268:rn42/rn42_task.c ****             }
 1004               		.loc 1 268 17 view .LVU238
 1005               	.L50:
 1006               	.LBE90:
 385:rn42/rn42_task.c ****                 return true;
 386:rn42/rn42_task.c ****             else
 387:rn42/rn42_task.c ****                 return false;   // yield to default command
 388:rn42/rn42_task.c ****     }
 389:rn42/rn42_task.c ****     return true;
 390:rn42/rn42_task.c **** }
 1007               		.loc 1 390 1 is_stmt 0 view .LVU239
 1008 00e4 8C2F      		mov r24,r28
 1009               	/* epilogue start */
 1010 00e6 CF91      		pop r28
 1011 00e8 FF90      		pop r15
 1012 00ea EF90      		pop r14
 1013 00ec DF90      		pop r13
 1014 00ee CF90      		pop r12
 1015 00f0 BF90      		pop r11
 1016 00f2 AF90      		pop r10
 1017 00f4 9F90      		pop r9
 1018 00f6 8F90      		pop r8
 1019 00f8 7F90      		pop r7
 1020 00fa 6F90      		pop r6
 1021 00fc 5F90      		pop r5
 1022 00fe 4F90      		pop r4
 1023 0100 0895      		ret
 1024               	.L51:
 1025               	.LBB147:
 271:rn42/rn42_task.c ****             return true;
 1026               		.loc 1 271 13 is_stmt 1 view .LVU240
 1027               	.LBB99:
 1028               	.LBI99:
 238:rn42/rn42_task.c **** {
 1029               		.loc 1 238 13 view .LVU241
 1030               	.LBB100:
 240:rn42/rn42_task.c ****     SEND_COMMAND("SR,Z\r\n");   // remove remote address
 1031               		.loc 1 240 5 view .LVU242
 1032 0102 0E94 0000 		call enter_command_mode
 241:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");    // reboot
 1033               		.loc 1 241 5 view .LVU243
 1034               	.LBE100:
 1035               	.LBE99:
 1036               	.LBE147:
 241:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");    // reboot
 1037               		.loc 1 241 5 view .LVU244
 241:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");    // reboot
 1038               		.loc 1 241 5 view .LVU245
 1039               	.LBB148:
 1040               	.LBB103:
 1041               	.LBB101:
 1042 0106 80E0      		ldi r24,lo8(__c.5019)
 1043 0108 90E0      		ldi r25,hi8(__c.5019)
 1044 010a 0E94 0000 		call rn42_send_command
 242:rn42/rn42_task.c ****     exit_command_mode();
 1045               		.loc 1 242 5 view .LVU246
 1046               	.LBE101:
 1047               	.LBE103:
 1048               	.LBE148:
 242:rn42/rn42_task.c ****     exit_command_mode();
 1049               		.loc 1 242 5 view .LVU247
 242:rn42/rn42_task.c ****     exit_command_mode();
 1050               		.loc 1 242 5 view .LVU248
 1051               	.LBB149:
 1052               	.LBB104:
 1053               	.LBB102:
 1054 010e 80E0      		ldi r24,lo8(__c.5021)
 1055 0110 90E0      		ldi r25,hi8(__c.5021)
 1056 0112 0E94 0000 		call rn42_send_command
 1057               	.L98:
 243:rn42/rn42_task.c **** }
 1058               		.loc 1 243 5 view .LVU249
 1059 0116 0E94 0000 		call exit_command_mode
 1060 011a 00C0      		rjmp .L97
 1061               	.L57:
 1062               	.LBE102:
 1063               	.LBE104:
 302:rn42/rn42_task.c ****             xprintf("protocol: %s\n", (host_get_driver() == &rn42_driver) ? "RN-42" : "LUFA");
 1064               		.loc 1 302 13 view .LVU250
 1065               	.LBB105:
 302:rn42/rn42_task.c ****             xprintf("protocol: %s\n", (host_get_driver() == &rn42_driver) ? "RN-42" : "LUFA");
 1066               		.loc 1 302 13 view .LVU251
 302:rn42/rn42_task.c ****             xprintf("protocol: %s\n", (host_get_driver() == &rn42_driver) ? "RN-42" : "LUFA");
 1067               		.loc 1 302 13 view .LVU252
 1068               	.LBE105:
 1069 011c 80E0      		ldi r24,lo8(__c.5046)
 1070 011e 90E0      		ldi r25,hi8(__c.5046)
 1071 0120 0E94 0000 		call xputs
 303:rn42/rn42_task.c ****             xprintf("force_usb: %X\n", force_usb);
 1072               		.loc 1 303 13 view .LVU253
 1073 0124 0E94 0000 		call host_get_driver
 1074 0128 8050      		subi r24,lo8(rn42_driver)
 1075 012a 9040      		sbci r25,hi8(rn42_driver)
 1076 012c 01F4      		brne .+2
 1077 012e 00C0      		rjmp .L79
 1078 0130 80E0      		ldi r24,lo8(.LC1)
 1079 0132 90E0      		ldi r25,hi8(.LC1)
 1080               	.L65:
 1081               	.LBB106:
 303:rn42/rn42_task.c ****             xprintf("force_usb: %X\n", force_usb);
 1082               		.loc 1 303 13 discriminator 4 view .LVU254
 303:rn42/rn42_task.c ****             xprintf("force_usb: %X\n", force_usb);
 1083               		.loc 1 303 13 discriminator 4 view .LVU255
 1084               	.LBE106:
 1085 0134 9F93      		push r25
 1086               	.LCFI55:
 1087               		.cfi_def_cfa_offset 16
 1088 0136 8F93      		push r24
 1089               	.LCFI56:
 1090               		.cfi_def_cfa_offset 17
 1091 0138 80E0      		ldi r24,lo8(__c.5048)
 1092 013a 90E0      		ldi r25,hi8(__c.5048)
 1093 013c 9F93      		push r25
 1094               	.LCFI57:
 1095               		.cfi_def_cfa_offset 18
 1096 013e 8F93      		push r24
 1097               	.LCFI58:
 1098               		.cfi_def_cfa_offset 19
 1099 0140 0E94 0000 		call __xprintf
 304:rn42/rn42_task.c ****             xprintf("rn42: %s\n", rn42_rts() ? "OFF" : (rn42_linked() ? "CONN" : "ON"));
 1100               		.loc 1 304 13 discriminator 4 view .LVU256
 1101               	.LBB107:
 304:rn42/rn42_task.c ****             xprintf("rn42: %s\n", rn42_rts() ? "OFF" : (rn42_linked() ? "CONN" : "ON"));
 1102               		.loc 1 304 13 discriminator 4 view .LVU257
 304:rn42/rn42_task.c ****             xprintf("rn42: %s\n", rn42_rts() ? "OFF" : (rn42_linked() ? "CONN" : "ON"));
 1103               		.loc 1 304 13 discriminator 4 view .LVU258
 1104               	.LBE107:
 1105 0144 8091 0000 		lds r24,force_usb
 1106 0148 1F92      		push __zero_reg__
 1107               	.LCFI59:
 1108               		.cfi_def_cfa_offset 20
 1109 014a 8F93      		push r24
 1110               	.LCFI60:
 1111               		.cfi_def_cfa_offset 21
 1112 014c 80E0      		ldi r24,lo8(__c.5050)
 1113 014e 90E0      		ldi r25,hi8(__c.5050)
 1114 0150 9F93      		push r25
 1115               	.LCFI61:
 1116               		.cfi_def_cfa_offset 22
 1117 0152 8F93      		push r24
 1118               	.LCFI62:
 1119               		.cfi_def_cfa_offset 23
 1120 0154 0E94 0000 		call __xprintf
 305:rn42/rn42_task.c ****             xprintf("rn42_autoconnecting(): %X\n", rn42_autoconnecting());
 1121               		.loc 1 305 13 discriminator 4 view .LVU259
 1122 0158 0E94 0000 		call rn42_rts
 1123 015c 2DB7      		in r18,__SP_L__
 1124 015e 3EB7      		in r19,__SP_H__
 1125 0160 285F      		subi r18,-8
 1126 0162 3F4F      		sbci r19,-1
 1127 0164 0FB6      		in __tmp_reg__,__SREG__
 1128 0166 F894      		cli
 1129 0168 3EBF      		out __SP_H__,r19
 1130 016a 0FBE      		out __SREG__,__tmp_reg__
 1131 016c 2DBF      		out __SP_L__,r18
 1132               	.LCFI63:
 1133               		.cfi_def_cfa_offset 15
 1134 016e 8111      		cpse r24,__zero_reg__
 1135 0170 00C0      		rjmp .L80
 305:rn42/rn42_task.c ****             xprintf("rn42_autoconnecting(): %X\n", rn42_autoconnecting());
 1136               		.loc 1 305 13 is_stmt 0 discriminator 1 view .LVU260
 1137 0172 0E94 0000 		call rn42_linked
 1138 0176 8111      		cpse r24,__zero_reg__
 1139 0178 00C0      		rjmp .L81
 305:rn42/rn42_task.c ****             xprintf("rn42_autoconnecting(): %X\n", rn42_autoconnecting());
 1140               		.loc 1 305 13 view .LVU261
 1141 017a 80E0      		ldi r24,lo8(.LC4)
 1142 017c 90E0      		ldi r25,hi8(.LC4)
 1143               	.L66:
 1144               	.LBB108:
 305:rn42/rn42_task.c ****             xprintf("rn42_autoconnecting(): %X\n", rn42_autoconnecting());
 1145               		.loc 1 305 13 is_stmt 1 discriminator 8 view .LVU262
 305:rn42/rn42_task.c ****             xprintf("rn42_autoconnecting(): %X\n", rn42_autoconnecting());
 1146               		.loc 1 305 13 discriminator 8 view .LVU263
 1147               	.LBE108:
 1148 017e 9F93      		push r25
 1149               	.LCFI64:
 1150               		.cfi_def_cfa_offset 16
 1151 0180 8F93      		push r24
 1152               	.LCFI65:
 1153               		.cfi_def_cfa_offset 17
 1154 0182 80E0      		ldi r24,lo8(__c.5052)
 1155 0184 90E0      		ldi r25,hi8(__c.5052)
 1156 0186 9F93      		push r25
 1157               	.LCFI66:
 1158               		.cfi_def_cfa_offset 18
 1159 0188 8F93      		push r24
 1160               	.LCFI67:
 1161               		.cfi_def_cfa_offset 19
 1162 018a 0E94 0000 		call __xprintf
 306:rn42/rn42_task.c ****             xprintf("config_mode: %X\n", config_mode);
 1163               		.loc 1 306 13 discriminator 8 view .LVU264
 1164 018e 0E94 0000 		call rn42_autoconnecting
 1165               	.LBB109:
 306:rn42/rn42_task.c ****             xprintf("config_mode: %X\n", config_mode);
 1166               		.loc 1 306 13 discriminator 8 view .LVU265
 306:rn42/rn42_task.c ****             xprintf("config_mode: %X\n", config_mode);
 1167               		.loc 1 306 13 discriminator 8 view .LVU266
 1168               	.LBE109:
 1169 0192 1F92      		push __zero_reg__
 1170               	.LCFI68:
 1171               		.cfi_def_cfa_offset 20
 1172 0194 8F93      		push r24
 1173               	.LCFI69:
 1174               		.cfi_def_cfa_offset 21
 1175 0196 80E0      		ldi r24,lo8(__c.5054)
 1176 0198 90E0      		ldi r25,hi8(__c.5054)
 1177 019a 9F93      		push r25
 1178               	.LCFI70:
 1179               		.cfi_def_cfa_offset 22
 1180 019c 8F93      		push r24
 1181               	.LCFI71:
 1182               		.cfi_def_cfa_offset 23
 1183 019e 0E94 0000 		call __xprintf
 307:rn42/rn42_task.c ****             xprintf("USB State: %s\n",
 1184               		.loc 1 307 13 discriminator 8 view .LVU267
 1185               	.LBB110:
 307:rn42/rn42_task.c ****             xprintf("USB State: %s\n",
 1186               		.loc 1 307 13 discriminator 8 view .LVU268
 307:rn42/rn42_task.c ****             xprintf("USB State: %s\n",
 1187               		.loc 1 307 13 discriminator 8 view .LVU269
 1188               	.LBE110:
 1189 01a2 8091 0000 		lds r24,config_mode
 1190 01a6 1F92      		push __zero_reg__
 1191               	.LCFI72:
 1192               		.cfi_def_cfa_offset 24
 1193 01a8 8F93      		push r24
 1194               	.LCFI73:
 1195               		.cfi_def_cfa_offset 25
 1196 01aa 80E0      		ldi r24,lo8(__c.5056)
 1197 01ac 90E0      		ldi r25,hi8(__c.5056)
 1198 01ae 9F93      		push r25
 1199               	.LCFI74:
 1200               		.cfi_def_cfa_offset 26
 1201 01b0 8F93      		push r24
 1202               	.LCFI75:
 1203               		.cfi_def_cfa_offset 27
 1204 01b2 0E94 0000 		call __xprintf
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1205               		.loc 1 308 13 discriminator 8 view .LVU270
 1206 01b6 8091 0000 		lds r24,USB_DeviceState
 1207 01ba 2DB7      		in r18,__SP_L__
 1208 01bc 3EB7      		in r19,__SP_H__
 1209 01be 245F      		subi r18,-12
 1210 01c0 3F4F      		sbci r19,-1
 1211 01c2 0FB6      		in __tmp_reg__,__SREG__
 1212 01c4 F894      		cli
 1213 01c6 3EBF      		out __SP_H__,r19
 1214 01c8 0FBE      		out __SREG__,__tmp_reg__
 1215 01ca 2DBF      		out __SP_L__,r18
 1216               	.LCFI76:
 1217               		.cfi_def_cfa_offset 15
 1218 01cc 8823      		tst r24
 1219 01ce 01F4      		brne .+2
 1220 01d0 00C0      		rjmp .L82
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1221               		.loc 1 308 13 is_stmt 0 discriminator 1 view .LVU271
 1222 01d2 8091 0000 		lds r24,USB_DeviceState
 1223 01d6 8130      		cpi r24,lo8(1)
 1224 01d8 01F4      		brne .+2
 1225 01da 00C0      		rjmp .L83
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1226               		.loc 1 308 13 discriminator 3 view .LVU272
 1227 01dc 8091 0000 		lds r24,USB_DeviceState
 1228 01e0 8230      		cpi r24,lo8(2)
 1229 01e2 01F4      		brne .+2
 1230 01e4 00C0      		rjmp .L84
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1231               		.loc 1 308 13 discriminator 5 view .LVU273
 1232 01e6 8091 0000 		lds r24,USB_DeviceState
 1233 01ea 8330      		cpi r24,lo8(3)
 1234 01ec 01F4      		brne .+2
 1235 01ee 00C0      		rjmp .L85
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1236               		.loc 1 308 13 discriminator 7 view .LVU274
 1237 01f0 8091 0000 		lds r24,USB_DeviceState
 1238 01f4 8430      		cpi r24,lo8(4)
 1239 01f6 01F4      		brne .+2
 1240 01f8 00C0      		rjmp .L86
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1241               		.loc 1 308 13 discriminator 9 view .LVU275
 1242 01fa 8091 0000 		lds r24,USB_DeviceState
 1243 01fe 8530      		cpi r24,lo8(5)
 1244 0200 01F0      		breq .L87
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1245               		.loc 1 308 13 view .LVU276
 1246 0202 80E0      		ldi r24,lo8(.LC11)
 1247 0204 90E0      		ldi r25,hi8(.LC11)
 1248               	.L67:
 1249               	.LBB111:
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1250               		.loc 1 308 13 is_stmt 1 discriminator 24 view .LVU277
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1251               		.loc 1 308 13 discriminator 24 view .LVU278
 1252               	.LBE111:
 1253 0206 9F93      		push r25
 1254               	.LCFI77:
 1255               		.cfi_def_cfa_offset 16
 1256 0208 8F93      		push r24
 1257               	.LCFI78:
 1258               		.cfi_def_cfa_offset 17
 1259 020a 80E0      		ldi r24,lo8(__c.5058)
 1260 020c 90E0      		ldi r25,hi8(__c.5058)
 1261 020e 9F93      		push r25
 1262               	.LCFI79:
 1263               		.cfi_def_cfa_offset 18
 1264 0210 8F93      		push r24
 1265               	.LCFI80:
 1266               		.cfi_def_cfa_offset 19
 1267 0212 0E94 0000 		call __xprintf
 315:rn42/rn42_task.c ****             switch (battery_status()) {
 1268               		.loc 1 315 13 discriminator 24 view .LVU279
 1269               	.LBB112:
 315:rn42/rn42_task.c ****             switch (battery_status()) {
 1270               		.loc 1 315 13 discriminator 24 view .LVU280
 315:rn42/rn42_task.c ****             switch (battery_status()) {
 1271               		.loc 1 315 13 discriminator 24 view .LVU281
 1272               	.LBE112:
 1273 0216 80E0      		ldi r24,lo8(__c.5060)
 1274 0218 90E0      		ldi r25,hi8(__c.5060)
 1275 021a 9F93      		push r25
 1276               	.LCFI81:
 1277               		.cfi_def_cfa_offset 20
 1278 021c 8F93      		push r24
 1279               	.LCFI82:
 1280               		.cfi_def_cfa_offset 21
 1281 021e 0E94 0000 		call __xprintf
 316:rn42/rn42_task.c ****                 case FULL_CHARGED:  xprintf("FULL"); break;
 1282               		.loc 1 316 13 discriminator 24 view .LVU282
 316:rn42/rn42_task.c ****                 case FULL_CHARGED:  xprintf("FULL"); break;
 1283               		.loc 1 316 21 is_stmt 0 discriminator 24 view .LVU283
 1284 0222 0E94 0000 		call battery_status
 1285 0226 0F90      		pop __tmp_reg__
 1286 0228 0F90      		pop __tmp_reg__
 1287 022a 0F90      		pop __tmp_reg__
 1288 022c 0F90      		pop __tmp_reg__
 1289 022e 0F90      		pop __tmp_reg__
 1290 0230 0F90      		pop __tmp_reg__
 1291               	.LCFI83:
 1292               		.cfi_def_cfa_offset 15
 1293 0232 8130      		cpi r24,lo8(1)
 1294 0234 01F4      		brne .+2
 1295 0236 00C0      		rjmp .L68
 1296 0238 8823      		tst r24
 1297 023a 01F0      		breq .L69
 1298 023c 8230      		cpi r24,lo8(2)
 1299 023e 01F4      		brne .+2
 1300 0240 00C0      		rjmp .L70
 1301 0242 8330      		cpi r24,lo8(3)
 1302 0244 01F4      		brne .+2
 1303 0246 00C0      		rjmp .L71
 321:rn42/rn42_task.c ****             };
 1304               		.loc 1 321 37 is_stmt 1 view .LVU284
 1305               	.LBB113:
 321:rn42/rn42_task.c ****             };
 1306               		.loc 1 321 37 view .LVU285
 321:rn42/rn42_task.c ****             };
 1307               		.loc 1 321 37 view .LVU286
 1308               	.LBE113:
 1309 0248 80E0      		ldi r24,lo8(__c.5076)
 1310 024a 90E0      		ldi r25,hi8(__c.5076)
 1311 024c 00C0      		rjmp .L96
 1312               	.L79:
 303:rn42/rn42_task.c ****             xprintf("force_usb: %X\n", force_usb);
 1313               		.loc 1 303 13 is_stmt 0 view .LVU287
 1314 024e 80E0      		ldi r24,lo8(.LC0)
 1315 0250 90E0      		ldi r25,hi8(.LC0)
 1316 0252 00C0      		rjmp .L65
 1317               	.L80:
 305:rn42/rn42_task.c ****             xprintf("rn42_autoconnecting(): %X\n", rn42_autoconnecting());
 1318               		.loc 1 305 13 view .LVU288
 1319 0254 80E0      		ldi r24,lo8(.LC2)
 1320 0256 90E0      		ldi r25,hi8(.LC2)
 1321 0258 00C0      		rjmp .L66
 1322               	.L81:
 1323 025a 80E0      		ldi r24,lo8(.LC3)
 1324 025c 90E0      		ldi r25,hi8(.LC3)
 1325 025e 00C0      		rjmp .L66
 1326               	.L82:
 308:rn42/rn42_task.c ****                     (USB_DeviceState == DEVICE_STATE_Unattached) ? "Unattached" :
 1327               		.loc 1 308 13 view .LVU289
 1328 0260 80E0      		ldi r24,lo8(.LC7)
 1329 0262 90E0      		ldi r25,hi8(.LC7)
 1330 0264 00C0      		rjmp .L67
 1331               	.L83:
 1332 0266 80E0      		ldi r24,lo8(.LC8)
 1333 0268 90E0      		ldi r25,hi8(.LC8)
 1334 026a 00C0      		rjmp .L67
 1335               	.L84:
 1336 026c 80E0      		ldi r24,lo8(.LC9)
 1337 026e 90E0      		ldi r25,hi8(.LC9)
 1338 0270 00C0      		rjmp .L67
 1339               	.L85:
 1340 0272 80E0      		ldi r24,lo8(.LC6)
 1341 0274 90E0      		ldi r25,hi8(.LC6)
 1342 0276 00C0      		rjmp .L67
 1343               	.L86:
 1344 0278 80E0      		ldi r24,lo8(.LC10)
 1345 027a 90E0      		ldi r25,hi8(.LC10)
 1346 027c 00C0      		rjmp .L67
 1347               	.L87:
 1348 027e 80E0      		ldi r24,lo8(.LC5)
 1349 0280 90E0      		ldi r25,hi8(.LC5)
 1350 0282 00C0      		rjmp .L67
 1351               	.L69:
 317:rn42/rn42_task.c ****                 case CHARGING:      xprintf("CHARG"); break;
 1352               		.loc 1 317 37 is_stmt 1 view .LVU290
 1353               	.LBB114:
 317:rn42/rn42_task.c ****                 case CHARGING:      xprintf("CHARG"); break;
 1354               		.loc 1 317 37 view .LVU291
 317:rn42/rn42_task.c ****                 case CHARGING:      xprintf("CHARG"); break;
 1355               		.loc 1 317 37 view .LVU292
 1356               	.LBE114:
 1357 0284 80E0      		ldi r24,lo8(__c.5063)
 1358 0286 90E0      		ldi r25,hi8(__c.5063)
 1359               	.L96:
 321:rn42/rn42_task.c ****             };
 1360               		.loc 1 321 37 is_stmt 0 view .LVU293
 1361 0288 9F93      		push r25
 1362               	.LCFI84:
 1363               		.cfi_def_cfa_offset 16
 1364 028a 8F93      		push r24
 1365               	.LCFI85:
 1366               		.cfi_def_cfa_offset 17
 1367 028c 0E94 0000 		call __xprintf
 321:rn42/rn42_task.c ****             };
 1368               		.loc 1 321 51 is_stmt 1 view .LVU294
 321:rn42/rn42_task.c ****             };
 1369               		.loc 1 321 17 is_stmt 0 view .LVU295
 1370 0290 0F90      		pop __tmp_reg__
 1371 0292 0F90      		pop __tmp_reg__
 1372               	.LCFI86:
 1373               		.cfi_def_cfa_offset 15
 322:rn42/rn42_task.c ****             xprintf("\n");
 1374               		.loc 1 322 14 is_stmt 1 view .LVU296
 323:rn42/rn42_task.c ****             xprintf("RemoteWakeupEnabled: %X\n", USB_Device_RemoteWakeupEnabled);
 1375               		.loc 1 323 13 view .LVU297
 1376               	.LBB115:
 323:rn42/rn42_task.c ****             xprintf("RemoteWakeupEnabled: %X\n", USB_Device_RemoteWakeupEnabled);
 1377               		.loc 1 323 13 view .LVU298
 323:rn42/rn42_task.c ****             xprintf("RemoteWakeupEnabled: %X\n", USB_Device_RemoteWakeupEnabled);
 1378               		.loc 1 323 13 view .LVU299
 1379               	.LBE115:
 1380 0294 80E0      		ldi r24,lo8(__c.5078)
 1381 0296 90E0      		ldi r25,hi8(__c.5078)
 1382 0298 9F93      		push r25
 1383               	.LCFI87:
 1384               		.cfi_def_cfa_offset 16
 1385 029a 8F93      		push r24
 1386               	.LCFI88:
 1387               		.cfi_def_cfa_offset 17
 1388 029c 0E94 0000 		call __xprintf
 324:rn42/rn42_task.c ****             xprintf("VBUS: %X\n", USBSTA&(1<<VBUS));
 1389               		.loc 1 324 13 view .LVU300
 1390               	.LBB116:
 324:rn42/rn42_task.c ****             xprintf("VBUS: %X\n", USBSTA&(1<<VBUS));
 1391               		.loc 1 324 13 view .LVU301
 324:rn42/rn42_task.c ****             xprintf("VBUS: %X\n", USBSTA&(1<<VBUS));
 1392               		.loc 1 324 13 view .LVU302
 1393               	.LBE116:
 1394 02a0 8091 0000 		lds r24,USB_Device_RemoteWakeupEnabled
 1395 02a4 1F92      		push __zero_reg__
 1396               	.LCFI89:
 1397               		.cfi_def_cfa_offset 18
 1398 02a6 8F93      		push r24
 1399               	.LCFI90:
 1400               		.cfi_def_cfa_offset 19
 1401 02a8 80E0      		ldi r24,lo8(__c.5080)
 1402 02aa 90E0      		ldi r25,hi8(__c.5080)
 1403 02ac 9F93      		push r25
 1404               	.LCFI91:
 1405               		.cfi_def_cfa_offset 20
 1406 02ae 8F93      		push r24
 1407               	.LCFI92:
 1408               		.cfi_def_cfa_offset 21
 1409 02b0 0E94 0000 		call __xprintf
 325:rn42/rn42_task.c ****             t = timer_read32()/1000;
 1410               		.loc 1 325 13 view .LVU303
 1411 02b4 8091 D900 		lds r24,217
 1412               	.LBB117:
 325:rn42/rn42_task.c ****             t = timer_read32()/1000;
 1413               		.loc 1 325 13 view .LVU304
 325:rn42/rn42_task.c ****             t = timer_read32()/1000;
 1414               		.loc 1 325 13 view .LVU305
 1415               	.LBE117:
 1416 02b8 8170      		andi r24,lo8(1)
 1417 02ba 1F92      		push __zero_reg__
 1418               	.LCFI93:
 1419               		.cfi_def_cfa_offset 22
 1420 02bc 8F93      		push r24
 1421               	.LCFI94:
 1422               		.cfi_def_cfa_offset 23
 1423 02be 80E0      		ldi r24,lo8(__c.5082)
 1424 02c0 90E0      		ldi r25,hi8(__c.5082)
 1425 02c2 9F93      		push r25
 1426               	.LCFI95:
 1427               		.cfi_def_cfa_offset 24
 1428 02c4 8F93      		push r24
 1429               	.LCFI96:
 1430               		.cfi_def_cfa_offset 25
 1431 02c6 0E94 0000 		call __xprintf
 326:rn42/rn42_task.c ****             uint8_t d = t/3600/24;
 1432               		.loc 1 326 13 view .LVU306
 326:rn42/rn42_task.c ****             uint8_t d = t/3600/24;
 1433               		.loc 1 326 17 is_stmt 0 view .LVU307
 1434 02ca 0E94 0000 		call timer_read32
 1435 02ce 6B01      		movw r12,r22
 1436 02d0 7C01      		movw r14,r24
 326:rn42/rn42_task.c ****             uint8_t d = t/3600/24;
 1437               		.loc 1 326 15 view .LVU308
 1438 02d2 28EE      		ldi r18,lo8(-24)
 1439 02d4 33E0      		ldi r19,lo8(3)
 1440 02d6 40E0      		ldi r20,0
 1441 02d8 50E0      		ldi r21,0
 1442 02da 0E94 0000 		call __udivmodsi4
 1443 02de 2901      		movw r4,r18
 1444 02e0 3A01      		movw r6,r20
 327:rn42/rn42_task.c ****             uint8_t h = t/3600;
 1445               		.loc 1 327 13 is_stmt 1 view .LVU309
 328:rn42/rn42_task.c ****             uint8_t m = t%3600/60;
 1446               		.loc 1 328 13 view .LVU310
 329:rn42/rn42_task.c ****             uint8_t s = t%60;
 1447               		.loc 1 329 13 view .LVU311
 330:rn42/rn42_task.c ****             xprintf("uptime: %02u %02u:%02u:%02u\n", d, h, m, s);
 1448               		.loc 1 330 13 view .LVU312
 331:rn42/rn42_task.c **** #if 0
 1449               		.loc 1 331 13 view .LVU313
 1450               	.LBB118:
 331:rn42/rn42_task.c **** #if 0
 1451               		.loc 1 331 13 view .LVU314
 331:rn42/rn42_task.c **** #if 0
 1452               		.loc 1 331 13 view .LVU315
 1453               	.LBE118:
 330:rn42/rn42_task.c ****             xprintf("uptime: %02u %02u:%02u:%02u\n", d, h, m, s);
 1454               		.loc 1 330 26 is_stmt 0 view .LVU316
 1455 02e2 3CE3      		ldi r19,lo8(60)
 1456 02e4 832E      		mov r8,r19
 1457 02e6 912C      		mov r9,__zero_reg__
 1458 02e8 A12C      		mov r10,__zero_reg__
 1459 02ea B12C      		mov r11,__zero_reg__
 1460 02ec C301      		movw r24,r6
 1461 02ee B201      		movw r22,r4
 1462 02f0 A501      		movw r20,r10
 1463 02f2 9401      		movw r18,r8
 1464 02f4 0E94 0000 		call __udivmodsi4
 331:rn42/rn42_task.c **** #if 0
 1465               		.loc 1 331 13 view .LVU317
 1466 02f8 7F93      		push r23
 1467               	.LCFI97:
 1468               		.cfi_def_cfa_offset 26
 1469 02fa 6F93      		push r22
 1470               	.LCFI98:
 1471               		.cfi_def_cfa_offset 27
 329:rn42/rn42_task.c ****             uint8_t s = t%60;
 1472               		.loc 1 329 26 view .LVU318
 1473 02fc C301      		movw r24,r6
 1474 02fe B201      		movw r22,r4
 1475 0300 20E1      		ldi r18,lo8(16)
 1476 0302 3EE0      		ldi r19,lo8(14)
 1477 0304 40E0      		ldi r20,0
 1478 0306 50E0      		ldi r21,0
 1479 0308 0E94 0000 		call __udivmodsi4
 329:rn42/rn42_task.c ****             uint8_t s = t%60;
 1480               		.loc 1 329 31 view .LVU319
 1481 030c A501      		movw r20,r10
 1482 030e 9401      		movw r18,r8
 1483 0310 0E94 0000 		call __udivmodsi4
 331:rn42/rn42_task.c **** #if 0
 1484               		.loc 1 331 13 view .LVU320
 1485 0314 3F93      		push r19
 1486               	.LCFI99:
 1487               		.cfi_def_cfa_offset 28
 1488 0316 2F93      		push r18
 1489               	.LCFI100:
 1490               		.cfi_def_cfa_offset 29
 328:rn42/rn42_task.c ****             uint8_t m = t%3600/60;
 1491               		.loc 1 328 26 view .LVU321
 1492 0318 C701      		movw r24,r14
 1493 031a B601      		movw r22,r12
 1494 031c 20E8      		ldi r18,lo8(-128)
 1495 031e 3EEE      		ldi r19,lo8(-18)
 1496 0320 46E3      		ldi r20,lo8(54)
 1497 0322 50E0      		ldi r21,0
 1498 0324 0E94 0000 		call __udivmodsi4
 331:rn42/rn42_task.c **** #if 0
 1499               		.loc 1 331 13 view .LVU322
 1500 0328 1F92      		push __zero_reg__
 1501               	.LCFI101:
 1502               		.cfi_def_cfa_offset 30
 1503 032a 2F93      		push r18
 1504               	.LCFI102:
 1505               		.cfi_def_cfa_offset 31
 327:rn42/rn42_task.c ****             uint8_t h = t/3600;
 1506               		.loc 1 327 31 view .LVU323
 1507 032c C701      		movw r24,r14
 1508 032e B601      		movw r22,r12
 1509 0330 20E0      		ldi r18,0
 1510 0332 3CE5      		ldi r19,lo8(92)
 1511 0334 46E2      		ldi r20,lo8(38)
 1512 0336 55E0      		ldi r21,lo8(5)
 1513 0338 0E94 0000 		call __udivmodsi4
 331:rn42/rn42_task.c **** #if 0
 1514               		.loc 1 331 13 view .LVU324
 1515 033c 3F93      		push r19
 1516               	.LCFI103:
 1517               		.cfi_def_cfa_offset 32
 1518 033e 2F93      		push r18
 1519               	.LCFI104:
 1520               		.cfi_def_cfa_offset 33
 1521 0340 80E0      		ldi r24,lo8(__c.5088)
 1522 0342 90E0      		ldi r25,hi8(__c.5088)
 1523 0344 9F93      		push r25
 1524               	.LCFI105:
 1525               		.cfi_def_cfa_offset 34
 1526 0346 8F93      		push r24
 1527               	.LCFI106:
 1528               		.cfi_def_cfa_offset 35
 1529 0348 0E94 0000 		call __xprintf
 338:rn42/rn42_task.c ****         case KC_B:
 1530               		.loc 1 338 13 is_stmt 1 view .LVU325
 338:rn42/rn42_task.c ****         case KC_B:
 1531               		.loc 1 338 20 is_stmt 0 view .LVU326
 1532 034c 8DB7      		in r24,__SP_L__
 1533 034e 9EB7      		in r25,__SP_H__
 1534 0350 4496      		adiw r24,20
 1535 0352 0FB6      		in __tmp_reg__,__SREG__
 1536 0354 F894      		cli
 1537 0356 9EBF      		out __SP_H__,r25
 1538 0358 0FBE      		out __SREG__,__tmp_reg__
 1539 035a 8DBF      		out __SP_L__,r24
 1540               	.LCFI107:
 1541               		.cfi_def_cfa_offset 15
 1542 035c 00C0      		rjmp .L97
 1543               	.L68:
 318:rn42/rn42_task.c ****                 case DISCHARGING:   xprintf("DISCHG"); break;
 1544               		.loc 1 318 37 is_stmt 1 view .LVU327
 1545               	.LBB119:
 318:rn42/rn42_task.c ****                 case DISCHARGING:   xprintf("DISCHG"); break;
 1546               		.loc 1 318 37 view .LVU328
 318:rn42/rn42_task.c ****                 case DISCHARGING:   xprintf("DISCHG"); break;
 1547               		.loc 1 318 37 view .LVU329
 1548               	.LBE119:
 1549 035e 80E0      		ldi r24,lo8(__c.5067)
 1550 0360 90E0      		ldi r25,hi8(__c.5067)
 1551 0362 00C0      		rjmp .L96
 1552               	.L70:
 319:rn42/rn42_task.c ****                 case LOW_VOLTAGE:   xprintf("LOW"); break;
 1553               		.loc 1 319 37 view .LVU330
 1554               	.LBB120:
 319:rn42/rn42_task.c ****                 case LOW_VOLTAGE:   xprintf("LOW"); break;
 1555               		.loc 1 319 37 view .LVU331
 319:rn42/rn42_task.c ****                 case LOW_VOLTAGE:   xprintf("LOW"); break;
 1556               		.loc 1 319 37 view .LVU332
 1557               	.LBE120:
 1558 0364 80E0      		ldi r24,lo8(__c.5070)
 1559 0366 90E0      		ldi r25,hi8(__c.5070)
 1560 0368 00C0      		rjmp .L96
 1561               	.L71:
 320:rn42/rn42_task.c ****                 default:            xprintf("?"); break;
 1562               		.loc 1 320 37 view .LVU333
 1563               	.LBB121:
 320:rn42/rn42_task.c ****                 default:            xprintf("?"); break;
 1564               		.loc 1 320 37 view .LVU334
 320:rn42/rn42_task.c ****                 default:            xprintf("?"); break;
 1565               		.loc 1 320 37 view .LVU335
 1566               	.LBE121:
 1567 036a 80E0      		ldi r24,lo8(__c.5073)
 1568 036c 90E0      		ldi r25,hi8(__c.5073)
 1569 036e 00C0      		rjmp .L96
 1570               	.L55:
 341:rn42/rn42_task.c ****             b = battery_voltage();
 1571               		.loc 1 341 13 view .LVU336
 341:rn42/rn42_task.c ****             b = battery_voltage();
 1572               		.loc 1 341 17 is_stmt 0 view .LVU337
 1573 0370 0E94 0000 		call timer_read32
 1574 0374 6B01      		movw r12,r22
 1575 0376 7C01      		movw r14,r24
 341:rn42/rn42_task.c ****             b = battery_voltage();
 1576               		.loc 1 341 15 view .LVU338
 1577 0378 28EE      		ldi r18,lo8(-24)
 1578 037a 33E0      		ldi r19,lo8(3)
 1579 037c 40E0      		ldi r20,0
 1580 037e 50E0      		ldi r21,0
 1581 0380 0E94 0000 		call __udivmodsi4
 1582 0384 4901      		movw r8,r18
 1583 0386 5A01      		movw r10,r20
 342:rn42/rn42_task.c ****             xprintf("BAT: %umV\t", b);
 1584               		.loc 1 342 13 is_stmt 1 view .LVU339
 342:rn42/rn42_task.c ****             xprintf("BAT: %umV\t", b);
 1585               		.loc 1 342 17 is_stmt 0 view .LVU340
 1586 0388 0E94 0000 		call battery_voltage
 343:rn42/rn42_task.c ****             xprintf("%02u:",   t/3600);
 1587               		.loc 1 343 13 is_stmt 1 view .LVU341
 1588               	.LBB122:
 343:rn42/rn42_task.c ****             xprintf("%02u:",   t/3600);
 1589               		.loc 1 343 13 view .LVU342
 343:rn42/rn42_task.c ****             xprintf("%02u:",   t/3600);
 1590               		.loc 1 343 13 view .LVU343
 1591               	.LBE122:
 1592 038c 9F93      		push r25
 1593               	.LCFI108:
 1594               		.cfi_def_cfa_offset 16
 1595 038e 8F93      		push r24
 1596               	.LCFI109:
 1597               		.cfi_def_cfa_offset 17
 1598 0390 80E0      		ldi r24,lo8(__c.5091)
 1599 0392 90E0      		ldi r25,hi8(__c.5091)
 1600 0394 9F93      		push r25
 1601               	.LCFI110:
 1602               		.cfi_def_cfa_offset 18
 1603 0396 8F93      		push r24
 1604               	.LCFI111:
 1605               		.cfi_def_cfa_offset 19
 1606 0398 0E94 0000 		call __xprintf
 344:rn42/rn42_task.c ****             xprintf("%02u:",   t%3600/60);
 1607               		.loc 1 344 13 view .LVU344
 1608               	.LBB123:
 344:rn42/rn42_task.c ****             xprintf("%02u:",   t%3600/60);
 1609               		.loc 1 344 13 view .LVU345
 344:rn42/rn42_task.c ****             xprintf("%02u:",   t%3600/60);
 1610               		.loc 1 344 13 view .LVU346
 1611               	.LBE123:
 1612 039c C701      		movw r24,r14
 1613 039e B601      		movw r22,r12
 1614 03a0 20E8      		ldi r18,lo8(-128)
 1615 03a2 3EEE      		ldi r19,lo8(-18)
 1616 03a4 46E3      		ldi r20,lo8(54)
 1617 03a6 50E0      		ldi r21,0
 1618 03a8 0E94 0000 		call __udivmodsi4
 1619 03ac 5F93      		push r21
 1620               	.LCFI112:
 1621               		.cfi_def_cfa_offset 20
 1622 03ae 4F93      		push r20
 1623               	.LCFI113:
 1624               		.cfi_def_cfa_offset 21
 1625 03b0 3F93      		push r19
 1626               	.LCFI114:
 1627               		.cfi_def_cfa_offset 22
 1628 03b2 2F93      		push r18
 1629               	.LCFI115:
 1630               		.cfi_def_cfa_offset 23
 1631 03b4 80E0      		ldi r24,lo8(__c.5093)
 1632 03b6 90E0      		ldi r25,hi8(__c.5093)
 1633 03b8 9F93      		push r25
 1634               	.LCFI116:
 1635               		.cfi_def_cfa_offset 24
 1636 03ba 8F93      		push r24
 1637               	.LCFI117:
 1638               		.cfi_def_cfa_offset 25
 1639 03bc 0E94 0000 		call __xprintf
 345:rn42/rn42_task.c ****             xprintf("%02u\n",  t%60);
 1640               		.loc 1 345 13 view .LVU347
 1641               	.LBB124:
 345:rn42/rn42_task.c ****             xprintf("%02u\n",  t%60);
 1642               		.loc 1 345 13 view .LVU348
 345:rn42/rn42_task.c ****             xprintf("%02u\n",  t%60);
 1643               		.loc 1 345 13 view .LVU349
 1644               	.LBE124:
 1645 03c0 C501      		movw r24,r10
 1646 03c2 B401      		movw r22,r8
 1647 03c4 20E1      		ldi r18,lo8(16)
 1648 03c6 3EE0      		ldi r19,lo8(14)
 1649 03c8 40E0      		ldi r20,0
 1650 03ca 50E0      		ldi r21,0
 1651 03cc 0E94 0000 		call __udivmodsi4
 1652 03d0 2CE3      		ldi r18,lo8(60)
 1653 03d2 C22E      		mov r12,r18
 1654 03d4 D12C      		mov r13,__zero_reg__
 1655 03d6 E12C      		mov r14,__zero_reg__
 1656 03d8 F12C      		mov r15,__zero_reg__
 1657 03da A701      		movw r20,r14
 1658 03dc 9601      		movw r18,r12
 1659 03de 0E94 0000 		call __udivmodsi4
 1660 03e2 5F93      		push r21
 1661               	.LCFI118:
 1662               		.cfi_def_cfa_offset 26
 1663 03e4 4F93      		push r20
 1664               	.LCFI119:
 1665               		.cfi_def_cfa_offset 27
 1666 03e6 3F93      		push r19
 1667               	.LCFI120:
 1668               		.cfi_def_cfa_offset 28
 1669 03e8 2F93      		push r18
 1670               	.LCFI121:
 1671               		.cfi_def_cfa_offset 29
 1672 03ea 80E0      		ldi r24,lo8(__c.5095)
 1673 03ec 90E0      		ldi r25,hi8(__c.5095)
 1674 03ee 9F93      		push r25
 1675               	.LCFI122:
 1676               		.cfi_def_cfa_offset 30
 1677 03f0 8F93      		push r24
 1678               	.LCFI123:
 1679               		.cfi_def_cfa_offset 31
 1680 03f2 0E94 0000 		call __xprintf
 346:rn42/rn42_task.c ****             return true;
 1681               		.loc 1 346 13 view .LVU350
 1682               	.LBB125:
 346:rn42/rn42_task.c ****             return true;
 1683               		.loc 1 346 13 view .LVU351
 346:rn42/rn42_task.c ****             return true;
 1684               		.loc 1 346 13 view .LVU352
 1685               	.LBE125:
 1686 03f6 C501      		movw r24,r10
 1687 03f8 B401      		movw r22,r8
 1688 03fa A701      		movw r20,r14
 1689 03fc 9601      		movw r18,r12
 1690 03fe 0E94 0000 		call __udivmodsi4
 1691 0402 9F93      		push r25
 1692               	.LCFI124:
 1693               		.cfi_def_cfa_offset 32
 1694 0404 8F93      		push r24
 1695               	.LCFI125:
 1696               		.cfi_def_cfa_offset 33
 1697 0406 7F93      		push r23
 1698               	.LCFI126:
 1699               		.cfi_def_cfa_offset 34
 1700 0408 6F93      		push r22
 1701               	.LCFI127:
 1702               		.cfi_def_cfa_offset 35
 1703 040a 80E0      		ldi r24,lo8(__c.5097)
 1704 040c 90E0      		ldi r25,hi8(__c.5097)
 1705 040e 9F93      		push r25
 1706               	.LCFI128:
 1707               		.cfi_def_cfa_offset 36
 1708 0410 8F93      		push r24
 1709               	.LCFI129:
 1710               		.cfi_def_cfa_offset 37
 1711 0412 0E94 0000 		call __xprintf
 347:rn42/rn42_task.c ****         case KC_U:
 1712               		.loc 1 347 13 view .LVU353
 347:rn42/rn42_task.c ****         case KC_U:
 1713               		.loc 1 347 20 is_stmt 0 view .LVU354
 1714 0416 2DB7      		in r18,__SP_L__
 1715 0418 3EB7      		in r19,__SP_H__
 1716 041a 2A5E      		subi r18,-22
 1717 041c 3F4F      		sbci r19,-1
 1718 041e 0FB6      		in __tmp_reg__,__SREG__
 1719 0420 F894      		cli
 1720 0422 3EBF      		out __SP_H__,r19
 1721 0424 0FBE      		out __SREG__,__tmp_reg__
 1722 0426 2DBF      		out __SP_L__,r18
 1723               	.LCFI130:
 1724               		.cfi_def_cfa_offset 15
 1725 0428 00C0      		rjmp .L97
 1726               	.L74:
 354:rn42/rn42_task.c ****                 force_usb = true;
 1727               		.loc 1 354 17 is_stmt 1 view .LVU355
 1728               	.LBB126:
 354:rn42/rn42_task.c ****                 force_usb = true;
 1729               		.loc 1 354 17 view .LVU356
 354:rn42/rn42_task.c ****                 force_usb = true;
 1730               		.loc 1 354 17 view .LVU357
 1731               	.LBE126:
 1732 042a 80E0      		ldi r24,lo8(__c.5102)
 1733 042c 90E0      		ldi r25,hi8(__c.5102)
 1734 042e 0E94 0000 		call xputs
 355:rn42/rn42_task.c ****             }
 1735               		.loc 1 355 17 view .LVU358
 355:rn42/rn42_task.c ****             }
 1736               		.loc 1 355 27 is_stmt 0 view .LVU359
 1737 0432 81E0      		ldi r24,lo8(1)
 1738 0434 8093 0000 		sts force_usb,r24
 1739 0438 00C0      		rjmp .L97
 1740               	.L75:
 366:rn42/rn42_task.c **** 
 1741               		.loc 1 366 17 is_stmt 1 view .LVU360
 1742 043a 0E94 0000 		call exit_command_mode
 368:rn42/rn42_task.c ****                 config_mode = false;
 1743               		.loc 1 368 17 view .LVU361
 368:rn42/rn42_task.c ****                 config_mode = false;
 1744               		.loc 1 368 31 is_stmt 0 view .LVU362
 1745 043e 1092 0000 		sts command_state,__zero_reg__
 369:rn42/rn42_task.c ****             }
 1746               		.loc 1 369 17 is_stmt 1 view .LVU363
 369:rn42/rn42_task.c ****             }
 1747               		.loc 1 369 29 is_stmt 0 view .LVU364
 1748 0442 1092 0000 		sts config_mode,__zero_reg__
 1749 0446 00C0      		rjmp .L97
 1750               	.L61:
 373:rn42/rn42_task.c ****             return true;
 1751               		.loc 1 373 13 is_stmt 1 view .LVU365
 1752               	.LBB127:
 1753               	.LBI127:
 169:rn42/rn42_task.c **** {
 1754               		.loc 1 169 13 view .LVU366
 1755               	.LBB128:
 172:rn42/rn42_task.c ****     SEND_COMMAND("SF,1\r\n");  // factory defaults
 1756               		.loc 1 172 5 view .LVU367
 172:rn42/rn42_task.c ****     SEND_COMMAND("SF,1\r\n");  // factory defaults
 1757               		.loc 1 172 8 is_stmt 0 view .LVU368
 1758 0448 8091 0000 		lds r24,config_mode
 1759 044c 8111      		cpse r24,__zero_reg__
 1760 044e 00C0      		rjmp .L76
 172:rn42/rn42_task.c ****     SEND_COMMAND("SF,1\r\n");  // factory defaults
 1761               		.loc 1 172 23 is_stmt 1 view .LVU369
 1762 0450 0E94 0000 		call enter_command_mode
 1763               	.L76:
 173:rn42/rn42_task.c ****     SEND_COMMAND("S-,TmkBT\r\n");
 1764               		.loc 1 173 5 view .LVU370
 1765               	.LBE128:
 1766               	.LBE127:
 1767               	.LBE149:
 173:rn42/rn42_task.c ****     SEND_COMMAND("S-,TmkBT\r\n");
 1768               		.loc 1 173 5 view .LVU371
 173:rn42/rn42_task.c ****     SEND_COMMAND("S-,TmkBT\r\n");
 1769               		.loc 1 173 5 view .LVU372
 1770               	.LBB150:
 1771               	.LBB138:
 1772               	.LBB129:
 1773 0454 80E0      		ldi r24,lo8(__c.4998)
 1774 0456 90E0      		ldi r25,hi8(__c.4998)
 1775 0458 0E94 0000 		call rn42_send_command
 174:rn42/rn42_task.c ****     SEND_COMMAND("SS,Keyboard/Mouse\r\n");
 1776               		.loc 1 174 5 view .LVU373
 1777               	.LBE129:
 1778               	.LBE138:
 1779               	.LBE150:
 174:rn42/rn42_task.c ****     SEND_COMMAND("SS,Keyboard/Mouse\r\n");
 1780               		.loc 1 174 5 view .LVU374
 174:rn42/rn42_task.c ****     SEND_COMMAND("SS,Keyboard/Mouse\r\n");
 1781               		.loc 1 174 5 view .LVU375
 1782               	.LBB151:
 1783               	.LBB139:
 1784               	.LBB130:
 1785 045c 80E0      		ldi r24,lo8(__c.5000)
 1786 045e 90E0      		ldi r25,hi8(__c.5000)
 1787 0460 0E94 0000 		call rn42_send_command
 175:rn42/rn42_task.c ****     SEND_COMMAND("SM,4\r\n");  // auto connect(DTR)
 1788               		.loc 1 175 5 view .LVU376
 1789               	.LBE130:
 1790               	.LBE139:
 1791               	.LBE151:
 175:rn42/rn42_task.c ****     SEND_COMMAND("SM,4\r\n");  // auto connect(DTR)
 1792               		.loc 1 175 5 view .LVU377
 175:rn42/rn42_task.c ****     SEND_COMMAND("SM,4\r\n");  // auto connect(DTR)
 1793               		.loc 1 175 5 view .LVU378
 1794               	.LBB152:
 1795               	.LBB140:
 1796               	.LBB131:
 1797 0464 80E0      		ldi r24,lo8(__c.5002)
 1798 0466 90E0      		ldi r25,hi8(__c.5002)
 1799 0468 0E94 0000 		call rn42_send_command
 176:rn42/rn42_task.c ****     SEND_COMMAND("SW,8000\r\n");   // Sniff disable
 1800               		.loc 1 176 5 view .LVU379
 1801               	.LBE131:
 1802               	.LBE140:
 1803               	.LBE152:
 176:rn42/rn42_task.c ****     SEND_COMMAND("SW,8000\r\n");   // Sniff disable
 1804               		.loc 1 176 5 view .LVU380
 176:rn42/rn42_task.c ****     SEND_COMMAND("SW,8000\r\n");   // Sniff disable
 1805               		.loc 1 176 5 view .LVU381
 1806               	.LBB153:
 1807               	.LBB141:
 1808               	.LBB132:
 1809 046c 80E0      		ldi r24,lo8(__c.5004)
 1810 046e 90E0      		ldi r25,hi8(__c.5004)
 1811 0470 0E94 0000 		call rn42_send_command
 177:rn42/rn42_task.c ****     SEND_COMMAND("S~,6\r\n");   // HID profile
 1812               		.loc 1 177 5 view .LVU382
 1813               	.LBE132:
 1814               	.LBE141:
 1815               	.LBE153:
 177:rn42/rn42_task.c ****     SEND_COMMAND("S~,6\r\n");   // HID profile
 1816               		.loc 1 177 5 view .LVU383
 177:rn42/rn42_task.c ****     SEND_COMMAND("S~,6\r\n");   // HID profile
 1817               		.loc 1 177 5 view .LVU384
 1818               	.LBB154:
 1819               	.LBB142:
 1820               	.LBB133:
 1821 0474 80E0      		ldi r24,lo8(__c.5006)
 1822 0476 90E0      		ldi r25,hi8(__c.5006)
 1823 0478 0E94 0000 		call rn42_send_command
 178:rn42/rn42_task.c ****     SEND_COMMAND("SH,003C\r\n");   // combo device, out-report, 4-reconnect
 1824               		.loc 1 178 5 view .LVU385
 1825               	.LBE133:
 1826               	.LBE142:
 1827               	.LBE154:
 178:rn42/rn42_task.c ****     SEND_COMMAND("SH,003C\r\n");   // combo device, out-report, 4-reconnect
 1828               		.loc 1 178 5 view .LVU386
 178:rn42/rn42_task.c ****     SEND_COMMAND("SH,003C\r\n");   // combo device, out-report, 4-reconnect
 1829               		.loc 1 178 5 view .LVU387
 1830               	.LBB155:
 1831               	.LBB143:
 1832               	.LBB134:
 1833 047c 80E0      		ldi r24,lo8(__c.5008)
 1834 047e 90E0      		ldi r25,hi8(__c.5008)
 1835 0480 0E94 0000 		call rn42_send_command
 179:rn42/rn42_task.c ****     SEND_COMMAND("SY,FFF4\r\n");   // transmit power -12
 1836               		.loc 1 179 5 view .LVU388
 1837               	.LBE134:
 1838               	.LBE143:
 1839               	.LBE155:
 179:rn42/rn42_task.c ****     SEND_COMMAND("SY,FFF4\r\n");   // transmit power -12
 1840               		.loc 1 179 5 view .LVU389
 179:rn42/rn42_task.c ****     SEND_COMMAND("SY,FFF4\r\n");   // transmit power -12
 1841               		.loc 1 179 5 view .LVU390
 1842               	.LBB156:
 1843               	.LBB144:
 1844               	.LBB135:
 1845 0484 80E0      		ldi r24,lo8(__c.5010)
 1846 0486 90E0      		ldi r25,hi8(__c.5010)
 1847 0488 0E94 0000 		call rn42_send_command
 180:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");
 1848               		.loc 1 180 5 view .LVU391
 1849               	.LBE135:
 1850               	.LBE144:
 1851               	.LBE156:
 180:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");
 1852               		.loc 1 180 5 view .LVU392
 180:rn42/rn42_task.c ****     SEND_COMMAND("R,1\r\n");
 1853               		.loc 1 180 5 view .LVU393
 1854               	.LBB157:
 1855               	.LBB145:
 1856               	.LBB136:
 1857 048c 80E0      		ldi r24,lo8(__c.5012)
 1858 048e 90E0      		ldi r25,hi8(__c.5012)
 1859 0490 0E94 0000 		call rn42_send_command
 181:rn42/rn42_task.c ****     if (!config_mode) exit_command_mode();
 1860               		.loc 1 181 5 view .LVU394
 1861               	.LBE136:
 1862               	.LBE145:
 1863               	.LBE157:
 181:rn42/rn42_task.c ****     if (!config_mode) exit_command_mode();
 1864               		.loc 1 181 5 view .LVU395
 181:rn42/rn42_task.c ****     if (!config_mode) exit_command_mode();
 1865               		.loc 1 181 5 view .LVU396
 1866               	.LBB158:
 1867               	.LBB146:
 1868               	.LBB137:
 1869 0494 80E0      		ldi r24,lo8(__c.5014)
 1870 0496 90E0      		ldi r25,hi8(__c.5014)
 1871 0498 0E94 0000 		call rn42_send_command
 182:rn42/rn42_task.c **** }
 1872               		.loc 1 182 5 view .LVU397
 182:rn42/rn42_task.c **** }
 1873               		.loc 1 182 8 is_stmt 0 view .LVU398
 1874 049c 8091 0000 		lds r24,config_mode
 1875 04a0 8111      		cpse r24,__zero_reg__
 1876 04a2 00C0      		rjmp .L97
 1877 04a4 00C0      		rjmp .L98
 1878               	.LBE137:
 1879               	.LBE146:
 1880               	.LBE158:
 1881               		.cfi_endproc
 1882               	.LFE115:
 1884               		.section	.text.command_console_extra,"ax",@progbits
 1885               	.global	command_console_extra
 1887               	command_console_extra:
 1888               	.LVL19:
 1889               	.LFB116:
 391:rn42/rn42_task.c **** 
 392:rn42/rn42_task.c **** /*
 393:rn42/rn42_task.c ****  * RN-42 Command mode
 394:rn42/rn42_task.c ****  * sends charactors to the module
 395:rn42/rn42_task.c ****  */
 396:rn42/rn42_task.c **** static uint8_t code2asc(uint8_t code);
 397:rn42/rn42_task.c **** bool command_console_extra(uint8_t code)
 398:rn42/rn42_task.c **** {
 1890               		.loc 1 398 1 is_stmt 1 view -0
 1891               		.cfi_startproc
 1892               		.loc 1 398 1 is_stmt 0 view .LVU400
 1893 0000 CF93      		push r28
 1894               	.LCFI131:
 1895               		.cfi_def_cfa_offset 3
 1896               		.cfi_offset 28, -2
 1897               	/* prologue: function */
 1898               	/* frame size = 0 */
 1899               	/* stack size = 1 */
 1900               	.L__stack_usage = 1
 1901 0002 C82F      		mov r28,r24
 399:rn42/rn42_task.c ****     rn42_putc(code2asc(code));
 1902               		.loc 1 399 5 is_stmt 1 view .LVU401
 1903               	.LVL20:
 1904               	.LBB161:
 1905               	.LBI161:
 400:rn42/rn42_task.c ****     return true;
 401:rn42/rn42_task.c **** }
 402:rn42/rn42_task.c **** 
 403:rn42/rn42_task.c **** // convert keycode into ascii charactor
 404:rn42/rn42_task.c **** static uint8_t code2asc(uint8_t code)
 1906               		.loc 1 404 16 view .LVU402
 1907               	.LBB162:
 405:rn42/rn42_task.c **** {
 406:rn42/rn42_task.c ****     bool shifted = (get_mods() & (MOD_BIT(KC_LSHIFT)|MOD_BIT(KC_RSHIFT))) ? true : false;
 1908               		.loc 1 406 5 view .LVU403
 1909               		.loc 1 406 21 is_stmt 0 view .LVU404
 1910 0004 0E94 0000 		call get_mods
 1911               	.LVL21:
 1912               		.loc 1 406 21 view .LVU405
 1913 0008 8272      		andi r24,lo8(34)
 1914               	.LVL22:
 407:rn42/rn42_task.c ****     switch (code) {
 1915               		.loc 1 407 5 is_stmt 1 view .LVU406
 1916 000a ECEF      		ldi r30,lo8(-4)
 1917 000c EC0F      		add r30,r28
 1918 000e E934      		cpi r30,lo8(73)
 1919 0010 00F0      		brlo .+2
 1920 0012 00C0      		rjmp .L100
 1921 0014 F0E0      		ldi r31,0
 1922 0016 E050      		subi r30,lo8(-(gs(.L102)))
 1923 0018 F040      		sbci r31,hi8(-(gs(.L102)))
 1924 001a 0C94 0000 		jmp __tablejump2__
 1925               		.section	.jumptables.gcc.command_console_extra,"a",@progbits
 1926               		.p2align	1
 1927               	.L102:
 1928 0000 0000      		.word gs(.L153)
 1929 0002 0000      		.word gs(.L152)
 1930 0004 0000      		.word gs(.L151)
 1931 0006 0000      		.word gs(.L150)
 1932 0008 0000      		.word gs(.L149)
 1933 000a 0000      		.word gs(.L148)
 1934 000c 0000      		.word gs(.L147)
 1935 000e 0000      		.word gs(.L146)
 1936 0010 0000      		.word gs(.L145)
 1937 0012 0000      		.word gs(.L144)
 1938 0014 0000      		.word gs(.L143)
 1939 0016 0000      		.word gs(.L142)
 1940 0018 0000      		.word gs(.L141)
 1941 001a 0000      		.word gs(.L140)
 1942 001c 0000      		.word gs(.L139)
 1943 001e 0000      		.word gs(.L138)
 1944 0020 0000      		.word gs(.L137)
 1945 0022 0000      		.word gs(.L136)
 1946 0024 0000      		.word gs(.L135)
 1947 0026 0000      		.word gs(.L134)
 1948 0028 0000      		.word gs(.L133)
 1949 002a 0000      		.word gs(.L132)
 1950 002c 0000      		.word gs(.L131)
 1951 002e 0000      		.word gs(.L130)
 1952 0030 0000      		.word gs(.L129)
 1953 0032 0000      		.word gs(.L128)
 1954 0034 0000      		.word gs(.L127)
 1955 0036 0000      		.word gs(.L126)
 1956 0038 0000      		.word gs(.L125)
 1957 003a 0000      		.word gs(.L124)
 1958 003c 0000      		.word gs(.L123)
 1959 003e 0000      		.word gs(.L122)
 1960 0040 0000      		.word gs(.L121)
 1961 0042 0000      		.word gs(.L120)
 1962 0044 0000      		.word gs(.L119)
 1963 0046 0000      		.word gs(.L118)
 1964 0048 0000      		.word gs(.L154)
 1965 004a 0000      		.word gs(.L116)
 1966 004c 0000      		.word gs(.L115)
 1967 004e 0000      		.word gs(.L114)
 1968 0050 0000      		.word gs(.L100)
 1969 0052 0000      		.word gs(.L113)
 1970 0054 0000      		.word gs(.L112)
 1971 0056 0000      		.word gs(.L111)
 1972 0058 0000      		.word gs(.L110)
 1973 005a 0000      		.word gs(.L109)
 1974 005c 0000      		.word gs(.L109)
 1975 005e 0000      		.word gs(.L108)
 1976 0060 0000      		.word gs(.L107)
 1977 0062 0000      		.word gs(.L106)
 1978 0064 0000      		.word gs(.L105)
 1979 0066 0000      		.word gs(.L104)
 1980 0068 0000      		.word gs(.L103)
 1981 006a 0000      		.word gs(.L100)
 1982 006c 0000      		.word gs(.L100)
 1983 006e 0000      		.word gs(.L100)
 1984 0070 0000      		.word gs(.L100)
 1985 0072 0000      		.word gs(.L100)
 1986 0074 0000      		.word gs(.L100)
 1987 0076 0000      		.word gs(.L100)
 1988 0078 0000      		.word gs(.L100)
 1989 007a 0000      		.word gs(.L100)
 1990 007c 0000      		.word gs(.L100)
 1991 007e 0000      		.word gs(.L100)
 1992 0080 0000      		.word gs(.L100)
 1993 0082 0000      		.word gs(.L100)
 1994 0084 0000      		.word gs(.L100)
 1995 0086 0000      		.word gs(.L100)
 1996 0088 0000      		.word gs(.L100)
 1997 008a 0000      		.word gs(.L100)
 1998 008c 0000      		.word gs(.L100)
 1999 008e 0000      		.word gs(.L100)
 2000 0090 0000      		.word gs(.L101)
 2001               		.section	.text.command_console_extra
 2002               	.L116:
 408:rn42/rn42_task.c ****         case KC_A: return (shifted ? 'A' : 'a');
 409:rn42/rn42_task.c ****         case KC_B: return (shifted ? 'B' : 'b');
 410:rn42/rn42_task.c ****         case KC_C: return (shifted ? 'C' : 'c');
 411:rn42/rn42_task.c ****         case KC_D: return (shifted ? 'D' : 'd');
 412:rn42/rn42_task.c ****         case KC_E: return (shifted ? 'E' : 'e');
 413:rn42/rn42_task.c ****         case KC_F: return (shifted ? 'F' : 'f');
 414:rn42/rn42_task.c ****         case KC_G: return (shifted ? 'G' : 'g');
 415:rn42/rn42_task.c ****         case KC_H: return (shifted ? 'H' : 'h');
 416:rn42/rn42_task.c ****         case KC_I: return (shifted ? 'I' : 'i');
 417:rn42/rn42_task.c ****         case KC_J: return (shifted ? 'J' : 'j');
 418:rn42/rn42_task.c ****         case KC_K: return (shifted ? 'K' : 'k');
 419:rn42/rn42_task.c ****         case KC_L: return (shifted ? 'L' : 'l');
 420:rn42/rn42_task.c ****         case KC_M: return (shifted ? 'M' : 'm');
 421:rn42/rn42_task.c ****         case KC_N: return (shifted ? 'N' : 'n');
 422:rn42/rn42_task.c ****         case KC_O: return (shifted ? 'O' : 'o');
 423:rn42/rn42_task.c ****         case KC_P: return (shifted ? 'P' : 'p');
 424:rn42/rn42_task.c ****         case KC_Q: return (shifted ? 'Q' : 'q');
 425:rn42/rn42_task.c ****         case KC_R: return (shifted ? 'R' : 'r');
 426:rn42/rn42_task.c ****         case KC_S: return (shifted ? 'S' : 's');
 427:rn42/rn42_task.c ****         case KC_T: return (shifted ? 'T' : 't');
 428:rn42/rn42_task.c ****         case KC_U: return (shifted ? 'U' : 'u');
 429:rn42/rn42_task.c ****         case KC_V: return (shifted ? 'V' : 'v');
 430:rn42/rn42_task.c ****         case KC_W: return (shifted ? 'W' : 'w');
 431:rn42/rn42_task.c ****         case KC_X: return (shifted ? 'X' : 'x');
 432:rn42/rn42_task.c ****         case KC_Y: return (shifted ? 'Y' : 'y');
 433:rn42/rn42_task.c ****         case KC_Z: return (shifted ? 'Z' : 'z');
 434:rn42/rn42_task.c ****         case KC_1: return (shifted ? '!' : '1');
 435:rn42/rn42_task.c ****         case KC_2: return (shifted ? '@' : '2');
 436:rn42/rn42_task.c ****         case KC_3: return (shifted ? '#' : '3');
 437:rn42/rn42_task.c ****         case KC_4: return (shifted ? '$' : '4');
 438:rn42/rn42_task.c ****         case KC_5: return (shifted ? '%' : '5');
 439:rn42/rn42_task.c ****         case KC_6: return (shifted ? '^' : '6');
 440:rn42/rn42_task.c ****         case KC_7: return (shifted ? '&' : '7');
 441:rn42/rn42_task.c ****         case KC_8: return (shifted ? '*' : '8');
 442:rn42/rn42_task.c ****         case KC_9: return (shifted ? '(' : '9');
 443:rn42/rn42_task.c ****         case KC_0: return (shifted ? ')' : '0');
 444:rn42/rn42_task.c ****         case KC_ENTER: return '\n';
 445:rn42/rn42_task.c ****         case KC_ESCAPE: return 0x1B;
 2003               		.loc 1 445 32 is_stmt 0 view .LVU407
 2004 001e CBE1      		ldi r28,lo8(27)
 2005               	.LVL23:
 2006               	.L117:
 2007               		.loc 1 445 32 view .LVU408
 2008               	.LBE162:
 2009               	.LBE161:
 399:rn42/rn42_task.c ****     return true;
 2010               		.loc 1 399 5 view .LVU409
 2011 0020 8C2F      		mov r24,r28
 2012               	.LVL24:
 399:rn42/rn42_task.c ****     return true;
 2013               		.loc 1 399 5 view .LVU410
 2014 0022 0E94 0000 		call rn42_putc
 2015               	.LVL25:
 400:rn42/rn42_task.c **** }
 2016               		.loc 1 400 5 is_stmt 1 view .LVU411
 401:rn42/rn42_task.c **** 
 2017               		.loc 1 401 1 is_stmt 0 view .LVU412
 2018 0026 81E0      		ldi r24,lo8(1)
 2019               	/* epilogue start */
 2020 0028 CF91      		pop r28
 2021 002a 0895      		ret
 2022               	.LVL26:
 2023               	.L153:
 2024               	.LBB164:
 2025               	.LBB163:
 408:rn42/rn42_task.c ****         case KC_B: return (shifted ? 'B' : 'b');
 2026               		.loc 1 408 20 is_stmt 1 view .LVU413
 408:rn42/rn42_task.c ****         case KC_B: return (shifted ? 'B' : 'b');
 2027               		.loc 1 408 42 is_stmt 0 view .LVU414
 2028 002c C1E6      		ldi r28,lo8(97)
 2029               	.LVL27:
 408:rn42/rn42_task.c ****         case KC_B: return (shifted ? 'B' : 'b');
 2030               		.loc 1 408 42 view .LVU415
 2031 002e 8823      		tst r24
 2032 0030 01F0      		breq .L117
 2033 0032 C1E4      		ldi r28,lo8(65)
 2034 0034 00C0      		rjmp .L117
 2035               	.LVL28:
 2036               	.L152:
 409:rn42/rn42_task.c ****         case KC_C: return (shifted ? 'C' : 'c');
 2037               		.loc 1 409 20 is_stmt 1 view .LVU416
 409:rn42/rn42_task.c ****         case KC_C: return (shifted ? 'C' : 'c');
 2038               		.loc 1 409 42 is_stmt 0 view .LVU417
 2039 0036 C2E6      		ldi r28,lo8(98)
 2040               	.LVL29:
 409:rn42/rn42_task.c ****         case KC_C: return (shifted ? 'C' : 'c');
 2041               		.loc 1 409 42 view .LVU418
 2042 0038 8823      		tst r24
 2043 003a 01F0      		breq .L117
 2044 003c C2E4      		ldi r28,lo8(66)
 2045 003e 00C0      		rjmp .L117
 2046               	.LVL30:
 2047               	.L151:
 410:rn42/rn42_task.c ****         case KC_D: return (shifted ? 'D' : 'd');
 2048               		.loc 1 410 20 is_stmt 1 view .LVU419
 410:rn42/rn42_task.c ****         case KC_D: return (shifted ? 'D' : 'd');
 2049               		.loc 1 410 42 is_stmt 0 view .LVU420
 2050 0040 C3E6      		ldi r28,lo8(99)
 2051               	.LVL31:
 410:rn42/rn42_task.c ****         case KC_D: return (shifted ? 'D' : 'd');
 2052               		.loc 1 410 42 view .LVU421
 2053 0042 8823      		tst r24
 2054 0044 01F0      		breq .L117
 2055 0046 C3E4      		ldi r28,lo8(67)
 2056 0048 00C0      		rjmp .L117
 2057               	.LVL32:
 2058               	.L150:
 411:rn42/rn42_task.c ****         case KC_E: return (shifted ? 'E' : 'e');
 2059               		.loc 1 411 20 is_stmt 1 view .LVU422
 411:rn42/rn42_task.c ****         case KC_E: return (shifted ? 'E' : 'e');
 2060               		.loc 1 411 42 is_stmt 0 view .LVU423
 2061 004a C4E6      		ldi r28,lo8(100)
 2062               	.LVL33:
 411:rn42/rn42_task.c ****         case KC_E: return (shifted ? 'E' : 'e');
 2063               		.loc 1 411 42 view .LVU424
 2064 004c 8823      		tst r24
 2065 004e 01F0      		breq .L117
 2066 0050 C4E4      		ldi r28,lo8(68)
 2067 0052 00C0      		rjmp .L117
 2068               	.LVL34:
 2069               	.L149:
 412:rn42/rn42_task.c ****         case KC_F: return (shifted ? 'F' : 'f');
 2070               		.loc 1 412 20 is_stmt 1 view .LVU425
 412:rn42/rn42_task.c ****         case KC_F: return (shifted ? 'F' : 'f');
 2071               		.loc 1 412 42 is_stmt 0 view .LVU426
 2072 0054 C5E6      		ldi r28,lo8(101)
 2073               	.LVL35:
 412:rn42/rn42_task.c ****         case KC_F: return (shifted ? 'F' : 'f');
 2074               		.loc 1 412 42 view .LVU427
 2075 0056 8823      		tst r24
 2076 0058 01F0      		breq .L117
 2077 005a C5E4      		ldi r28,lo8(69)
 2078 005c 00C0      		rjmp .L117
 2079               	.LVL36:
 2080               	.L148:
 413:rn42/rn42_task.c ****         case KC_G: return (shifted ? 'G' : 'g');
 2081               		.loc 1 413 20 is_stmt 1 view .LVU428
 413:rn42/rn42_task.c ****         case KC_G: return (shifted ? 'G' : 'g');
 2082               		.loc 1 413 42 is_stmt 0 view .LVU429
 2083 005e C6E6      		ldi r28,lo8(102)
 2084               	.LVL37:
 413:rn42/rn42_task.c ****         case KC_G: return (shifted ? 'G' : 'g');
 2085               		.loc 1 413 42 view .LVU430
 2086 0060 8823      		tst r24
 2087 0062 01F0      		breq .L117
 2088 0064 C6E4      		ldi r28,lo8(70)
 2089 0066 00C0      		rjmp .L117
 2090               	.LVL38:
 2091               	.L147:
 414:rn42/rn42_task.c ****         case KC_H: return (shifted ? 'H' : 'h');
 2092               		.loc 1 414 20 is_stmt 1 view .LVU431
 414:rn42/rn42_task.c ****         case KC_H: return (shifted ? 'H' : 'h');
 2093               		.loc 1 414 42 is_stmt 0 view .LVU432
 2094 0068 C7E6      		ldi r28,lo8(103)
 2095               	.LVL39:
 414:rn42/rn42_task.c ****         case KC_H: return (shifted ? 'H' : 'h');
 2096               		.loc 1 414 42 view .LVU433
 2097 006a 8823      		tst r24
 2098 006c 01F0      		breq .L117
 2099 006e C7E4      		ldi r28,lo8(71)
 2100 0070 00C0      		rjmp .L117
 2101               	.LVL40:
 2102               	.L146:
 415:rn42/rn42_task.c ****         case KC_I: return (shifted ? 'I' : 'i');
 2103               		.loc 1 415 20 is_stmt 1 view .LVU434
 415:rn42/rn42_task.c ****         case KC_I: return (shifted ? 'I' : 'i');
 2104               		.loc 1 415 42 is_stmt 0 view .LVU435
 2105 0072 C8E6      		ldi r28,lo8(104)
 2106               	.LVL41:
 415:rn42/rn42_task.c ****         case KC_I: return (shifted ? 'I' : 'i');
 2107               		.loc 1 415 42 view .LVU436
 2108 0074 8823      		tst r24
 2109 0076 01F0      		breq .L117
 2110 0078 C8E4      		ldi r28,lo8(72)
 2111 007a 00C0      		rjmp .L117
 2112               	.LVL42:
 2113               	.L145:
 416:rn42/rn42_task.c ****         case KC_J: return (shifted ? 'J' : 'j');
 2114               		.loc 1 416 20 is_stmt 1 view .LVU437
 416:rn42/rn42_task.c ****         case KC_J: return (shifted ? 'J' : 'j');
 2115               		.loc 1 416 42 is_stmt 0 view .LVU438
 2116 007c C9E6      		ldi r28,lo8(105)
 2117               	.LVL43:
 416:rn42/rn42_task.c ****         case KC_J: return (shifted ? 'J' : 'j');
 2118               		.loc 1 416 42 view .LVU439
 2119 007e 8823      		tst r24
 2120 0080 01F0      		breq .L117
 2121 0082 C9E4      		ldi r28,lo8(73)
 2122 0084 00C0      		rjmp .L117
 2123               	.LVL44:
 2124               	.L144:
 417:rn42/rn42_task.c ****         case KC_K: return (shifted ? 'K' : 'k');
 2125               		.loc 1 417 20 is_stmt 1 view .LVU440
 417:rn42/rn42_task.c ****         case KC_K: return (shifted ? 'K' : 'k');
 2126               		.loc 1 417 42 is_stmt 0 view .LVU441
 2127 0086 CAE6      		ldi r28,lo8(106)
 2128               	.LVL45:
 417:rn42/rn42_task.c ****         case KC_K: return (shifted ? 'K' : 'k');
 2129               		.loc 1 417 42 view .LVU442
 2130 0088 8823      		tst r24
 2131 008a 01F0      		breq .L117
 2132 008c CAE4      		ldi r28,lo8(74)
 2133 008e 00C0      		rjmp .L117
 2134               	.LVL46:
 2135               	.L143:
 418:rn42/rn42_task.c ****         case KC_L: return (shifted ? 'L' : 'l');
 2136               		.loc 1 418 20 is_stmt 1 view .LVU443
 418:rn42/rn42_task.c ****         case KC_L: return (shifted ? 'L' : 'l');
 2137               		.loc 1 418 42 is_stmt 0 view .LVU444
 2138 0090 CBE6      		ldi r28,lo8(107)
 2139               	.LVL47:
 418:rn42/rn42_task.c ****         case KC_L: return (shifted ? 'L' : 'l');
 2140               		.loc 1 418 42 view .LVU445
 2141 0092 8823      		tst r24
 2142 0094 01F0      		breq .L117
 2143 0096 CBE4      		ldi r28,lo8(75)
 2144 0098 00C0      		rjmp .L117
 2145               	.LVL48:
 2146               	.L142:
 419:rn42/rn42_task.c ****         case KC_M: return (shifted ? 'M' : 'm');
 2147               		.loc 1 419 20 is_stmt 1 view .LVU446
 419:rn42/rn42_task.c ****         case KC_M: return (shifted ? 'M' : 'm');
 2148               		.loc 1 419 42 is_stmt 0 view .LVU447
 2149 009a CCE6      		ldi r28,lo8(108)
 2150               	.LVL49:
 419:rn42/rn42_task.c ****         case KC_M: return (shifted ? 'M' : 'm');
 2151               		.loc 1 419 42 view .LVU448
 2152 009c 8823      		tst r24
 2153 009e 01F4      		brne .+2
 2154 00a0 00C0      		rjmp .L117
 2155 00a2 CCE4      		ldi r28,lo8(76)
 2156 00a4 00C0      		rjmp .L117
 2157               	.LVL50:
 2158               	.L141:
 420:rn42/rn42_task.c ****         case KC_N: return (shifted ? 'N' : 'n');
 2159               		.loc 1 420 20 is_stmt 1 view .LVU449
 420:rn42/rn42_task.c ****         case KC_N: return (shifted ? 'N' : 'n');
 2160               		.loc 1 420 42 is_stmt 0 view .LVU450
 2161 00a6 CDE6      		ldi r28,lo8(109)
 2162               	.LVL51:
 420:rn42/rn42_task.c ****         case KC_N: return (shifted ? 'N' : 'n');
 2163               		.loc 1 420 42 view .LVU451
 2164 00a8 8823      		tst r24
 2165 00aa 01F4      		brne .+2
 2166 00ac 00C0      		rjmp .L117
 2167 00ae CDE4      		ldi r28,lo8(77)
 2168 00b0 00C0      		rjmp .L117
 2169               	.LVL52:
 2170               	.L140:
 421:rn42/rn42_task.c ****         case KC_O: return (shifted ? 'O' : 'o');
 2171               		.loc 1 421 20 is_stmt 1 view .LVU452
 421:rn42/rn42_task.c ****         case KC_O: return (shifted ? 'O' : 'o');
 2172               		.loc 1 421 42 is_stmt 0 view .LVU453
 2173 00b2 CEE6      		ldi r28,lo8(110)
 2174               	.LVL53:
 421:rn42/rn42_task.c ****         case KC_O: return (shifted ? 'O' : 'o');
 2175               		.loc 1 421 42 view .LVU454
 2176 00b4 8823      		tst r24
 2177 00b6 01F4      		brne .+2
 2178 00b8 00C0      		rjmp .L117
 2179 00ba CEE4      		ldi r28,lo8(78)
 2180 00bc 00C0      		rjmp .L117
 2181               	.LVL54:
 2182               	.L139:
 422:rn42/rn42_task.c ****         case KC_P: return (shifted ? 'P' : 'p');
 2183               		.loc 1 422 20 is_stmt 1 view .LVU455
 422:rn42/rn42_task.c ****         case KC_P: return (shifted ? 'P' : 'p');
 2184               		.loc 1 422 42 is_stmt 0 view .LVU456
 2185 00be CFE6      		ldi r28,lo8(111)
 2186               	.LVL55:
 422:rn42/rn42_task.c ****         case KC_P: return (shifted ? 'P' : 'p');
 2187               		.loc 1 422 42 view .LVU457
 2188 00c0 8823      		tst r24
 2189 00c2 01F4      		brne .+2
 2190 00c4 00C0      		rjmp .L117
 2191 00c6 CFE4      		ldi r28,lo8(79)
 2192 00c8 00C0      		rjmp .L117
 2193               	.LVL56:
 2194               	.L138:
 423:rn42/rn42_task.c ****         case KC_Q: return (shifted ? 'Q' : 'q');
 2195               		.loc 1 423 20 is_stmt 1 view .LVU458
 423:rn42/rn42_task.c ****         case KC_Q: return (shifted ? 'Q' : 'q');
 2196               		.loc 1 423 42 is_stmt 0 view .LVU459
 2197 00ca C0E7      		ldi r28,lo8(112)
 2198               	.LVL57:
 423:rn42/rn42_task.c ****         case KC_Q: return (shifted ? 'Q' : 'q');
 2199               		.loc 1 423 42 view .LVU460
 2200 00cc 8823      		tst r24
 2201 00ce 01F4      		brne .+2
 2202 00d0 00C0      		rjmp .L117
 2203 00d2 C0E5      		ldi r28,lo8(80)
 2204 00d4 00C0      		rjmp .L117
 2205               	.LVL58:
 2206               	.L137:
 424:rn42/rn42_task.c ****         case KC_R: return (shifted ? 'R' : 'r');
 2207               		.loc 1 424 20 is_stmt 1 view .LVU461
 424:rn42/rn42_task.c ****         case KC_R: return (shifted ? 'R' : 'r');
 2208               		.loc 1 424 42 is_stmt 0 view .LVU462
 2209 00d6 C1E7      		ldi r28,lo8(113)
 2210               	.LVL59:
 424:rn42/rn42_task.c ****         case KC_R: return (shifted ? 'R' : 'r');
 2211               		.loc 1 424 42 view .LVU463
 2212 00d8 8823      		tst r24
 2213 00da 01F4      		brne .+2
 2214 00dc 00C0      		rjmp .L117
 2215 00de C1E5      		ldi r28,lo8(81)
 2216 00e0 00C0      		rjmp .L117
 2217               	.LVL60:
 2218               	.L136:
 425:rn42/rn42_task.c ****         case KC_S: return (shifted ? 'S' : 's');
 2219               		.loc 1 425 20 is_stmt 1 view .LVU464
 425:rn42/rn42_task.c ****         case KC_S: return (shifted ? 'S' : 's');
 2220               		.loc 1 425 42 is_stmt 0 view .LVU465
 2221 00e2 C2E7      		ldi r28,lo8(114)
 2222               	.LVL61:
 425:rn42/rn42_task.c ****         case KC_S: return (shifted ? 'S' : 's');
 2223               		.loc 1 425 42 view .LVU466
 2224 00e4 8823      		tst r24
 2225 00e6 01F4      		brne .+2
 2226 00e8 00C0      		rjmp .L117
 2227 00ea C2E5      		ldi r28,lo8(82)
 2228 00ec 00C0      		rjmp .L117
 2229               	.LVL62:
 2230               	.L135:
 426:rn42/rn42_task.c ****         case KC_T: return (shifted ? 'T' : 't');
 2231               		.loc 1 426 20 is_stmt 1 view .LVU467
 426:rn42/rn42_task.c ****         case KC_T: return (shifted ? 'T' : 't');
 2232               		.loc 1 426 42 is_stmt 0 view .LVU468
 2233 00ee C3E7      		ldi r28,lo8(115)
 2234               	.LVL63:
 426:rn42/rn42_task.c ****         case KC_T: return (shifted ? 'T' : 't');
 2235               		.loc 1 426 42 view .LVU469
 2236 00f0 8823      		tst r24
 2237 00f2 01F4      		brne .+2
 2238 00f4 00C0      		rjmp .L117
 2239 00f6 C3E5      		ldi r28,lo8(83)
 2240 00f8 00C0      		rjmp .L117
 2241               	.LVL64:
 2242               	.L134:
 427:rn42/rn42_task.c ****         case KC_U: return (shifted ? 'U' : 'u');
 2243               		.loc 1 427 20 is_stmt 1 view .LVU470
 427:rn42/rn42_task.c ****         case KC_U: return (shifted ? 'U' : 'u');
 2244               		.loc 1 427 42 is_stmt 0 view .LVU471
 2245 00fa C4E7      		ldi r28,lo8(116)
 2246               	.LVL65:
 427:rn42/rn42_task.c ****         case KC_U: return (shifted ? 'U' : 'u');
 2247               		.loc 1 427 42 view .LVU472
 2248 00fc 8823      		tst r24
 2249 00fe 01F4      		brne .+2
 2250 0100 00C0      		rjmp .L117
 2251 0102 C4E5      		ldi r28,lo8(84)
 2252 0104 00C0      		rjmp .L117
 2253               	.LVL66:
 2254               	.L133:
 428:rn42/rn42_task.c ****         case KC_V: return (shifted ? 'V' : 'v');
 2255               		.loc 1 428 20 is_stmt 1 view .LVU473
 428:rn42/rn42_task.c ****         case KC_V: return (shifted ? 'V' : 'v');
 2256               		.loc 1 428 42 is_stmt 0 view .LVU474
 2257 0106 C5E7      		ldi r28,lo8(117)
 2258               	.LVL67:
 428:rn42/rn42_task.c ****         case KC_V: return (shifted ? 'V' : 'v');
 2259               		.loc 1 428 42 view .LVU475
 2260 0108 8823      		tst r24
 2261 010a 01F4      		brne .+2
 2262 010c 00C0      		rjmp .L117
 2263 010e C5E5      		ldi r28,lo8(85)
 2264 0110 00C0      		rjmp .L117
 2265               	.LVL68:
 2266               	.L132:
 429:rn42/rn42_task.c ****         case KC_W: return (shifted ? 'W' : 'w');
 2267               		.loc 1 429 20 is_stmt 1 view .LVU476
 429:rn42/rn42_task.c ****         case KC_W: return (shifted ? 'W' : 'w');
 2268               		.loc 1 429 42 is_stmt 0 view .LVU477
 2269 0112 C6E7      		ldi r28,lo8(118)
 2270               	.LVL69:
 429:rn42/rn42_task.c ****         case KC_W: return (shifted ? 'W' : 'w');
 2271               		.loc 1 429 42 view .LVU478
 2272 0114 8823      		tst r24
 2273 0116 01F4      		brne .+2
 2274 0118 00C0      		rjmp .L117
 2275 011a C6E5      		ldi r28,lo8(86)
 2276 011c 00C0      		rjmp .L117
 2277               	.LVL70:
 2278               	.L131:
 430:rn42/rn42_task.c ****         case KC_X: return (shifted ? 'X' : 'x');
 2279               		.loc 1 430 20 is_stmt 1 view .LVU479
 430:rn42/rn42_task.c ****         case KC_X: return (shifted ? 'X' : 'x');
 2280               		.loc 1 430 42 is_stmt 0 view .LVU480
 2281 011e C7E7      		ldi r28,lo8(119)
 2282               	.LVL71:
 430:rn42/rn42_task.c ****         case KC_X: return (shifted ? 'X' : 'x');
 2283               		.loc 1 430 42 view .LVU481
 2284 0120 8823      		tst r24
 2285 0122 01F4      		brne .+2
 2286 0124 00C0      		rjmp .L117
 2287 0126 C7E5      		ldi r28,lo8(87)
 2288 0128 00C0      		rjmp .L117
 2289               	.LVL72:
 2290               	.L130:
 431:rn42/rn42_task.c ****         case KC_Y: return (shifted ? 'Y' : 'y');
 2291               		.loc 1 431 20 is_stmt 1 view .LVU482
 431:rn42/rn42_task.c ****         case KC_Y: return (shifted ? 'Y' : 'y');
 2292               		.loc 1 431 42 is_stmt 0 view .LVU483
 2293 012a C8E7      		ldi r28,lo8(120)
 2294               	.LVL73:
 431:rn42/rn42_task.c ****         case KC_Y: return (shifted ? 'Y' : 'y');
 2295               		.loc 1 431 42 view .LVU484
 2296 012c 8823      		tst r24
 2297 012e 01F4      		brne .+2
 2298 0130 00C0      		rjmp .L117
 2299 0132 C8E5      		ldi r28,lo8(88)
 2300 0134 00C0      		rjmp .L117
 2301               	.LVL74:
 2302               	.L129:
 432:rn42/rn42_task.c ****         case KC_Z: return (shifted ? 'Z' : 'z');
 2303               		.loc 1 432 20 is_stmt 1 view .LVU485
 432:rn42/rn42_task.c ****         case KC_Z: return (shifted ? 'Z' : 'z');
 2304               		.loc 1 432 42 is_stmt 0 view .LVU486
 2305 0136 C9E7      		ldi r28,lo8(121)
 2306               	.LVL75:
 432:rn42/rn42_task.c ****         case KC_Z: return (shifted ? 'Z' : 'z');
 2307               		.loc 1 432 42 view .LVU487
 2308 0138 8823      		tst r24
 2309 013a 01F4      		brne .+2
 2310 013c 00C0      		rjmp .L117
 2311 013e C9E5      		ldi r28,lo8(89)
 2312 0140 00C0      		rjmp .L117
 2313               	.LVL76:
 2314               	.L128:
 433:rn42/rn42_task.c ****         case KC_1: return (shifted ? '!' : '1');
 2315               		.loc 1 433 20 is_stmt 1 view .LVU488
 433:rn42/rn42_task.c ****         case KC_1: return (shifted ? '!' : '1');
 2316               		.loc 1 433 42 is_stmt 0 view .LVU489
 2317 0142 CAE7      		ldi r28,lo8(122)
 2318               	.LVL77:
 433:rn42/rn42_task.c ****         case KC_1: return (shifted ? '!' : '1');
 2319               		.loc 1 433 42 view .LVU490
 2320 0144 8823      		tst r24
 2321 0146 01F4      		brne .+2
 2322 0148 00C0      		rjmp .L117
 2323 014a CAE5      		ldi r28,lo8(90)
 2324 014c 00C0      		rjmp .L117
 2325               	.LVL78:
 2326               	.L127:
 434:rn42/rn42_task.c ****         case KC_2: return (shifted ? '@' : '2');
 2327               		.loc 1 434 20 is_stmt 1 view .LVU491
 434:rn42/rn42_task.c ****         case KC_2: return (shifted ? '@' : '2');
 2328               		.loc 1 434 42 is_stmt 0 view .LVU492
 2329 014e C1E3      		ldi r28,lo8(49)
 2330               	.LVL79:
 434:rn42/rn42_task.c ****         case KC_2: return (shifted ? '@' : '2');
 2331               		.loc 1 434 42 view .LVU493
 2332 0150 8823      		tst r24
 2333 0152 01F4      		brne .+2
 2334 0154 00C0      		rjmp .L117
 2335 0156 C1E2      		ldi r28,lo8(33)
 2336 0158 00C0      		rjmp .L117
 2337               	.LVL80:
 2338               	.L126:
 435:rn42/rn42_task.c ****         case KC_3: return (shifted ? '#' : '3');
 2339               		.loc 1 435 20 is_stmt 1 view .LVU494
 435:rn42/rn42_task.c ****         case KC_3: return (shifted ? '#' : '3');
 2340               		.loc 1 435 42 is_stmt 0 view .LVU495
 2341 015a C2E3      		ldi r28,lo8(50)
 2342               	.LVL81:
 435:rn42/rn42_task.c ****         case KC_3: return (shifted ? '#' : '3');
 2343               		.loc 1 435 42 view .LVU496
 2344 015c 8823      		tst r24
 2345 015e 01F4      		brne .+2
 2346 0160 00C0      		rjmp .L117
 2347 0162 C0E4      		ldi r28,lo8(64)
 2348 0164 00C0      		rjmp .L117
 2349               	.LVL82:
 2350               	.L125:
 436:rn42/rn42_task.c ****         case KC_4: return (shifted ? '$' : '4');
 2351               		.loc 1 436 20 is_stmt 1 view .LVU497
 436:rn42/rn42_task.c ****         case KC_4: return (shifted ? '$' : '4');
 2352               		.loc 1 436 42 is_stmt 0 view .LVU498
 2353 0166 C3E3      		ldi r28,lo8(51)
 2354               	.LVL83:
 436:rn42/rn42_task.c ****         case KC_4: return (shifted ? '$' : '4');
 2355               		.loc 1 436 42 view .LVU499
 2356 0168 8823      		tst r24
 2357 016a 01F4      		brne .+2
 2358 016c 00C0      		rjmp .L117
 2359 016e C3E2      		ldi r28,lo8(35)
 2360 0170 00C0      		rjmp .L117
 2361               	.LVL84:
 2362               	.L124:
 437:rn42/rn42_task.c ****         case KC_5: return (shifted ? '%' : '5');
 2363               		.loc 1 437 20 is_stmt 1 view .LVU500
 437:rn42/rn42_task.c ****         case KC_5: return (shifted ? '%' : '5');
 2364               		.loc 1 437 42 is_stmt 0 view .LVU501
 2365 0172 C4E3      		ldi r28,lo8(52)
 2366               	.LVL85:
 437:rn42/rn42_task.c ****         case KC_5: return (shifted ? '%' : '5');
 2367               		.loc 1 437 42 view .LVU502
 2368 0174 8823      		tst r24
 2369 0176 01F4      		brne .+2
 2370 0178 00C0      		rjmp .L117
 2371 017a C4E2      		ldi r28,lo8(36)
 2372 017c 00C0      		rjmp .L117
 2373               	.LVL86:
 2374               	.L123:
 438:rn42/rn42_task.c ****         case KC_6: return (shifted ? '^' : '6');
 2375               		.loc 1 438 20 is_stmt 1 view .LVU503
 438:rn42/rn42_task.c ****         case KC_6: return (shifted ? '^' : '6');
 2376               		.loc 1 438 42 is_stmt 0 view .LVU504
 2377 017e C5E3      		ldi r28,lo8(53)
 2378               	.LVL87:
 438:rn42/rn42_task.c ****         case KC_6: return (shifted ? '^' : '6');
 2379               		.loc 1 438 42 view .LVU505
 2380 0180 8823      		tst r24
 2381 0182 01F4      		brne .+2
 2382 0184 00C0      		rjmp .L117
 2383 0186 C5E2      		ldi r28,lo8(37)
 2384 0188 00C0      		rjmp .L117
 2385               	.LVL88:
 2386               	.L122:
 439:rn42/rn42_task.c ****         case KC_7: return (shifted ? '&' : '7');
 2387               		.loc 1 439 20 is_stmt 1 view .LVU506
 439:rn42/rn42_task.c ****         case KC_7: return (shifted ? '&' : '7');
 2388               		.loc 1 439 42 is_stmt 0 view .LVU507
 2389 018a C6E3      		ldi r28,lo8(54)
 2390               	.LVL89:
 439:rn42/rn42_task.c ****         case KC_7: return (shifted ? '&' : '7');
 2391               		.loc 1 439 42 view .LVU508
 2392 018c 8823      		tst r24
 2393 018e 01F4      		brne .+2
 2394 0190 00C0      		rjmp .L117
 2395 0192 CEE5      		ldi r28,lo8(94)
 2396 0194 00C0      		rjmp .L117
 2397               	.LVL90:
 2398               	.L121:
 440:rn42/rn42_task.c ****         case KC_8: return (shifted ? '*' : '8');
 2399               		.loc 1 440 20 is_stmt 1 view .LVU509
 440:rn42/rn42_task.c ****         case KC_8: return (shifted ? '*' : '8');
 2400               		.loc 1 440 42 is_stmt 0 view .LVU510
 2401 0196 C7E3      		ldi r28,lo8(55)
 2402               	.LVL91:
 440:rn42/rn42_task.c ****         case KC_8: return (shifted ? '*' : '8');
 2403               		.loc 1 440 42 view .LVU511
 2404 0198 8823      		tst r24
 2405 019a 01F4      		brne .+2
 2406 019c 00C0      		rjmp .L117
 2407 019e C6E2      		ldi r28,lo8(38)
 2408 01a0 00C0      		rjmp .L117
 2409               	.LVL92:
 2410               	.L120:
 441:rn42/rn42_task.c ****         case KC_9: return (shifted ? '(' : '9');
 2411               		.loc 1 441 20 is_stmt 1 view .LVU512
 441:rn42/rn42_task.c ****         case KC_9: return (shifted ? '(' : '9');
 2412               		.loc 1 441 42 is_stmt 0 view .LVU513
 2413 01a2 C8E3      		ldi r28,lo8(56)
 2414               	.LVL93:
 441:rn42/rn42_task.c ****         case KC_9: return (shifted ? '(' : '9');
 2415               		.loc 1 441 42 view .LVU514
 2416 01a4 8823      		tst r24
 2417 01a6 01F4      		brne .+2
 2418 01a8 00C0      		rjmp .L117
 2419 01aa CAE2      		ldi r28,lo8(42)
 2420 01ac 00C0      		rjmp .L117
 2421               	.LVL94:
 2422               	.L119:
 442:rn42/rn42_task.c ****         case KC_0: return (shifted ? ')' : '0');
 2423               		.loc 1 442 20 is_stmt 1 view .LVU515
 442:rn42/rn42_task.c ****         case KC_0: return (shifted ? ')' : '0');
 2424               		.loc 1 442 42 is_stmt 0 view .LVU516
 2425 01ae C9E3      		ldi r28,lo8(57)
 2426               	.LVL95:
 442:rn42/rn42_task.c ****         case KC_0: return (shifted ? ')' : '0');
 2427               		.loc 1 442 42 view .LVU517
 2428 01b0 8823      		tst r24
 2429 01b2 01F4      		brne .+2
 2430 01b4 00C0      		rjmp .L117
 2431 01b6 C8E2      		ldi r28,lo8(40)
 2432 01b8 00C0      		rjmp .L117
 2433               	.LVL96:
 2434               	.L118:
 443:rn42/rn42_task.c ****         case KC_ENTER: return '\n';
 2435               		.loc 1 443 20 is_stmt 1 view .LVU518
 443:rn42/rn42_task.c ****         case KC_ENTER: return '\n';
 2436               		.loc 1 443 42 is_stmt 0 view .LVU519
 2437 01ba C0E3      		ldi r28,lo8(48)
 2438               	.LVL97:
 443:rn42/rn42_task.c ****         case KC_ENTER: return '\n';
 2439               		.loc 1 443 42 view .LVU520
 2440 01bc 8823      		tst r24
 2441 01be 01F4      		brne .+2
 2442 01c0 00C0      		rjmp .L117
 2443 01c2 C9E2      		ldi r28,lo8(41)
 2444 01c4 00C0      		rjmp .L117
 2445               	.LVL98:
 2446               	.L115:
 446:rn42/rn42_task.c ****         case KC_BSPACE: return '\b';
 2447               		.loc 1 446 25 is_stmt 1 view .LVU521
 2448               		.loc 1 446 32 is_stmt 0 view .LVU522
 2449 01c6 C8E0      		ldi r28,lo8(8)
 2450               	.LVL99:
 2451               		.loc 1 446 32 view .LVU523
 2452 01c8 00C0      		rjmp .L117
 2453               	.LVL100:
 2454               	.L114:
 447:rn42/rn42_task.c ****         case KC_TAB: return '\t';
 2455               		.loc 1 447 22 is_stmt 1 view .LVU524
 2456               		.loc 1 447 29 is_stmt 0 view .LVU525
 2457 01ca C9E0      		ldi r28,lo8(9)
 2458               	.LVL101:
 2459               		.loc 1 447 29 view .LVU526
 2460 01cc 00C0      		rjmp .L117
 2461               	.LVL102:
 2462               	.L100:
 448:rn42/rn42_task.c ****         case KC_SPACE: return ' ';
 2463               		.loc 1 448 24 is_stmt 1 view .LVU527
 2464               		.loc 1 448 31 is_stmt 0 view .LVU528
 2465 01ce C0E2      		ldi r28,lo8(32)
 2466               	.LVL103:
 2467               		.loc 1 448 31 view .LVU529
 2468 01d0 00C0      		rjmp .L117
 2469               	.LVL104:
 2470               	.L113:
 449:rn42/rn42_task.c ****         case KC_MINUS: return (shifted ? '_' : '-');
 2471               		.loc 1 449 24 is_stmt 1 view .LVU530
 2472               		.loc 1 449 46 is_stmt 0 view .LVU531
 2473 01d2 8823      		tst r24
 2474 01d4 01F4      		brne .+2
 2475 01d6 00C0      		rjmp .L117
 2476 01d8 CFE5      		ldi r28,lo8(95)
 2477               	.LVL105:
 2478               		.loc 1 449 46 view .LVU532
 2479 01da 00C0      		rjmp .L117
 2480               	.LVL106:
 2481               	.L112:
 450:rn42/rn42_task.c ****         case KC_EQUAL: return (shifted ? '+' : '=');
 2482               		.loc 1 450 24 is_stmt 1 view .LVU533
 2483               		.loc 1 450 46 is_stmt 0 view .LVU534
 2484 01dc CDE3      		ldi r28,lo8(61)
 2485               	.LVL107:
 2486               		.loc 1 450 46 view .LVU535
 2487 01de 8823      		tst r24
 2488 01e0 01F4      		brne .+2
 2489 01e2 00C0      		rjmp .L117
 2490 01e4 CBE2      		ldi r28,lo8(43)
 2491 01e6 00C0      		rjmp .L117
 2492               	.LVL108:
 2493               	.L111:
 451:rn42/rn42_task.c ****         case KC_LBRACKET: return (shifted ? '{' : '[');
 2494               		.loc 1 451 27 is_stmt 1 view .LVU536
 2495               		.loc 1 451 49 is_stmt 0 view .LVU537
 2496 01e8 CBE5      		ldi r28,lo8(91)
 2497               	.LVL109:
 2498               		.loc 1 451 49 view .LVU538
 2499 01ea 8823      		tst r24
 2500 01ec 01F4      		brne .+2
 2501 01ee 00C0      		rjmp .L117
 2502 01f0 CBE7      		ldi r28,lo8(123)
 2503 01f2 00C0      		rjmp .L117
 2504               	.LVL110:
 2505               	.L110:
 452:rn42/rn42_task.c ****         case KC_RBRACKET: return (shifted ? '}' : ']');
 2506               		.loc 1 452 27 is_stmt 1 view .LVU539
 2507               		.loc 1 452 49 is_stmt 0 view .LVU540
 2508 01f4 CDE5      		ldi r28,lo8(93)
 2509               	.LVL111:
 2510               		.loc 1 452 49 view .LVU541
 2511 01f6 8823      		tst r24
 2512 01f8 01F4      		brne .+2
 2513 01fa 00C0      		rjmp .L117
 2514 01fc CDE7      		ldi r28,lo8(125)
 2515 01fe 00C0      		rjmp .L117
 2516               	.LVL112:
 2517               	.L109:
 453:rn42/rn42_task.c ****         case KC_BSLASH: return (shifted ? '|' : '\\');
 454:rn42/rn42_task.c ****         case KC_NONUS_HASH: return (shifted ? '|' : '\\');
 2518               		.loc 1 454 29 is_stmt 1 view .LVU542
 453:rn42/rn42_task.c ****         case KC_BSLASH: return (shifted ? '|' : '\\');
 2519               		.loc 1 453 47 is_stmt 0 view .LVU543
 2520 0200 CCE5      		ldi r28,lo8(92)
 2521               	.LVL113:
 2522               		.loc 1 454 51 view .LVU544
 2523 0202 8823      		tst r24
 2524 0204 01F4      		brne .+2
 2525 0206 00C0      		rjmp .L117
 453:rn42/rn42_task.c ****         case KC_BSLASH: return (shifted ? '|' : '\\');
 2526               		.loc 1 453 47 view .LVU545
 2527 0208 CCE7      		ldi r28,lo8(124)
 2528 020a 00C0      		rjmp .L117
 2529               	.LVL114:
 2530               	.L108:
 455:rn42/rn42_task.c ****         case KC_SCOLON: return (shifted ? ':' : ';');
 2531               		.loc 1 455 25 is_stmt 1 view .LVU546
 2532               		.loc 1 455 47 is_stmt 0 view .LVU547
 2533 020c CBE3      		ldi r28,lo8(59)
 2534               	.LVL115:
 2535               		.loc 1 455 47 view .LVU548
 2536 020e 8823      		tst r24
 2537 0210 01F4      		brne .+2
 2538 0212 00C0      		rjmp .L117
 2539 0214 CAE3      		ldi r28,lo8(58)
 2540 0216 00C0      		rjmp .L117
 2541               	.LVL116:
 2542               	.L107:
 456:rn42/rn42_task.c ****         case KC_QUOTE: return (shifted ? '"' : '\'');
 2543               		.loc 1 456 24 is_stmt 1 view .LVU549
 2544               		.loc 1 456 46 is_stmt 0 view .LVU550
 2545 0218 C7E2      		ldi r28,lo8(39)
 2546               	.LVL117:
 2547               		.loc 1 456 46 view .LVU551
 2548 021a 8823      		tst r24
 2549 021c 01F4      		brne .+2
 2550 021e 00C0      		rjmp .L117
 2551 0220 C2E2      		ldi r28,lo8(34)
 2552 0222 00C0      		rjmp .L117
 2553               	.LVL118:
 2554               	.L106:
 457:rn42/rn42_task.c ****         case KC_GRAVE: return (shifted ? '~' : '`');
 2555               		.loc 1 457 24 is_stmt 1 view .LVU552
 2556               		.loc 1 457 46 is_stmt 0 view .LVU553
 2557 0224 C0E6      		ldi r28,lo8(96)
 2558               	.LVL119:
 2559               		.loc 1 457 46 view .LVU554
 2560 0226 8823      		tst r24
 2561 0228 01F4      		brne .+2
 2562 022a 00C0      		rjmp .L117
 2563 022c CEE7      		ldi r28,lo8(126)
 2564 022e 00C0      		rjmp .L117
 2565               	.LVL120:
 2566               	.L105:
 458:rn42/rn42_task.c ****         case KC_COMMA: return (shifted ? '<' : ',');
 2567               		.loc 1 458 24 is_stmt 1 view .LVU555
 2568               		.loc 1 458 46 is_stmt 0 view .LVU556
 2569 0230 CCE2      		ldi r28,lo8(44)
 2570               	.LVL121:
 2571               		.loc 1 458 46 view .LVU557
 2572 0232 8823      		tst r24
 2573 0234 01F4      		brne .+2
 2574 0236 00C0      		rjmp .L117
 2575 0238 CCE3      		ldi r28,lo8(60)
 2576 023a 00C0      		rjmp .L117
 2577               	.LVL122:
 2578               	.L104:
 459:rn42/rn42_task.c ****         case KC_DOT: return (shifted ? '>' : '.');
 2579               		.loc 1 459 22 is_stmt 1 view .LVU558
 2580               		.loc 1 459 44 is_stmt 0 view .LVU559
 2581 023c CEE2      		ldi r28,lo8(46)
 2582               	.LVL123:
 2583               		.loc 1 459 44 view .LVU560
 2584 023e 8823      		tst r24
 2585 0240 01F4      		brne .+2
 2586 0242 00C0      		rjmp .L117
 2587 0244 CEE3      		ldi r28,lo8(62)
 2588 0246 00C0      		rjmp .L117
 2589               	.LVL124:
 2590               	.L103:
 460:rn42/rn42_task.c ****         case KC_SLASH: return (shifted ? '?' : '/');
 2591               		.loc 1 460 24 is_stmt 1 view .LVU561
 2592               		.loc 1 460 46 is_stmt 0 view .LVU562
 2593 0248 CFE2      		ldi r28,lo8(47)
 2594               	.LVL125:
 2595               		.loc 1 460 46 view .LVU563
 2596 024a 8823      		tst r24
 2597 024c 01F4      		brne .+2
 2598 024e 00C0      		rjmp .L117
 2599 0250 CFE3      		ldi r28,lo8(63)
 2600 0252 00C0      		rjmp .L117
 2601               	.LVL126:
 2602               	.L101:
 461:rn42/rn42_task.c ****         case KC_DELETE: return '\0';    // Delete to disconnect
 2603               		.loc 1 461 25 is_stmt 1 view .LVU564
 2604               		.loc 1 461 32 is_stmt 0 view .LVU565
 2605 0254 C0E0      		ldi r28,0
 2606               	.LVL127:
 2607               		.loc 1 461 32 view .LVU566
 2608 0256 00C0      		rjmp .L117
 2609               	.LVL128:
 2610               	.L154:
 444:rn42/rn42_task.c ****         case KC_ESCAPE: return 0x1B;
 2611               		.loc 1 444 31 view .LVU567
 2612 0258 CAE0      		ldi r28,lo8(10)
 2613               	.LVL129:
 444:rn42/rn42_task.c ****         case KC_ESCAPE: return 0x1B;
 2614               		.loc 1 444 31 view .LVU568
 2615 025a 00C0      		rjmp .L117
 2616               	.LBE163:
 2617               	.LBE164:
 2618               		.cfi_endproc
 2619               	.LFE116:
 2621               		.section	.progmem.data.__c.5014,"a"
 2624               	__c.5014:
 2625 0000 522C 310D 		.string	"R,1\r\n"
 2625      0A00 
 2626               		.section	.progmem.data.__c.5012,"a"
 2629               	__c.5012:
 2630 0000 5359 2C46 		.string	"SY,FFF4\r\n"
 2630      4646 340D 
 2630      0A00 
 2631               		.section	.progmem.data.__c.5010,"a"
 2634               	__c.5010:
 2635 0000 5348 2C30 		.string	"SH,003C\r\n"
 2635      3033 430D 
 2635      0A00 
 2636               		.section	.progmem.data.__c.5008,"a"
 2639               	__c.5008:
 2640 0000 537E 2C36 		.string	"S~,6\r\n"
 2640      0D0A 00
 2641               		.section	.progmem.data.__c.5006,"a"
 2644               	__c.5006:
 2645 0000 5357 2C38 		.string	"SW,8000\r\n"
 2645      3030 300D 
 2645      0A00 
 2646               		.section	.progmem.data.__c.5004,"a"
 2649               	__c.5004:
 2650 0000 534D 2C34 		.string	"SM,4\r\n"
 2650      0D0A 00
 2651               		.section	.progmem.data.__c.5002,"a"
 2654               	__c.5002:
 2655 0000 5353 2C4B 		.string	"SS,Keyboard/Mouse\r\n"
 2655      6579 626F 
 2655      6172 642F 
 2655      4D6F 7573 
 2655      650D 0A00 
 2656               		.section	.progmem.data.__c.5000,"a"
 2659               	__c.5000:
 2660 0000 532D 2C54 		.string	"S-,TmkBT\r\n"
 2660      6D6B 4254 
 2660      0D0A 00
 2661               		.section	.progmem.data.__c.4998,"a"
 2664               	__c.4998:
 2665 0000 5346 2C31 		.string	"SF,1\r\n"
 2665      0D0A 00
 2666               		.section	.progmem.data.__c.4993,"a"
 2669               	__c.4993:
 2670 0000 2D2D 2D0D 		.string	"---\r\n"
 2670      0A00 
 2671               		.section	.progmem.data.__c.4991,"a"
 2674               	__c.4991:
 2675 0000 4578 6974 		.string	"Exiting config mode ...\n"
 2675      696E 6720 
 2675      636F 6E66 
 2675      6967 206D 
 2675      6F64 6520 
 2676               		.section	.progmem.data.__c.4986,"a"
 2679               	__c.4986:
 2680 0000 2B0D 0A00 		.string	"+\r\n"
 2681               		.section	.progmem.data.__c.4984,"a"
 2684               	__c.4984:
 2685 0000 760D 0A00 		.string	"v\r\n"
 2686               		.section	.progmem.data.__c.4981,"a"
 2689               	__c.4981:
 2690 0000 2424 2400 		.string	"$$$"
 2691               		.section	.progmem.data.__c.4979,"a"
 2694               	__c.4979:
 2695 0000 456E 7465 		.string	"Entering config mode ...\n"
 2695      7269 6E67 
 2695      2063 6F6E 
 2695      6669 6720 
 2695      6D6F 6465 
 2696               		.section	.progmem.data.__c.5021,"a"
 2699               	__c.5021:
 2700 0000 522C 310D 		.string	"R,1\r\n"
 2700      0A00 
 2701               		.section	.progmem.data.__c.5019,"a"
 2704               	__c.5019:
 2705 0000 5352 2C5A 		.string	"SR,Z\r\n"
 2705      0D0A 00
 2706               		.section	.progmem.data.__c.5102,"a"
 2709               	__c.5102:
 2710 0000 5553 4220 		.string	"USB mode\n"
 2710      6D6F 6465 
 2710      0A00 
 2711               		.section	.progmem.data.__c.5100,"a"
 2714               	__c.5100:
 2715 0000 4175 746F 		.string	"Auto mode\n"
 2715      206D 6F64 
 2715      650A 00
 2716               		.section	.progmem.data.__c.5097,"a"
 2719               	__c.5097:
 2720 0000 2530 3275 		.string	"%02u\n"
 2720      0A00 
 2721               		.section	.progmem.data.__c.5095,"a"
 2724               	__c.5095:
 2725 0000 2530 3275 		.string	"%02u:"
 2725      3A00 
 2726               		.section	.progmem.data.__c.5093,"a"
 2729               	__c.5093:
 2730 0000 2530 3275 		.string	"%02u:"
 2730      3A00 
 2731               		.section	.progmem.data.__c.5091,"a"
 2734               	__c.5091:
 2735 0000 4241 543A 		.string	"BAT: %umV\t"
 2735      2025 756D 
 2735      5609 00
 2736               		.section	.progmem.data.__c.5088,"a"
 2739               	__c.5088:
 2740 0000 7570 7469 		.string	"uptime: %02u %02u:%02u:%02u\n"
 2740      6D65 3A20 
 2740      2530 3275 
 2740      2025 3032 
 2740      753A 2530 
 2741               		.section	.progmem.data.__c.5082,"a"
 2744               	__c.5082:
 2745 0000 5642 5553 		.string	"VBUS: %X\n"
 2745      3A20 2558 
 2745      0A00 
 2746               		.section	.progmem.data.__c.5080,"a"
 2749               	__c.5080:
 2750 0000 5265 6D6F 		.string	"RemoteWakeupEnabled: %X\n"
 2750      7465 5761 
 2750      6B65 7570 
 2750      456E 6162 
 2750      6C65 643A 
 2751               		.section	.progmem.data.__c.5078,"a"
 2754               	__c.5078:
 2755 0000 0A00      		.string	"\n"
 2756               		.section	.progmem.data.__c.5076,"a"
 2759               	__c.5076:
 2760 0000 3F00      		.string	"?"
 2761               		.section	.progmem.data.__c.5073,"a"
 2764               	__c.5073:
 2765 0000 4C4F 5700 		.string	"LOW"
 2766               		.section	.progmem.data.__c.5070,"a"
 2769               	__c.5070:
 2770 0000 4449 5343 		.string	"DISCHG"
 2770      4847 00
 2771               		.section	.progmem.data.__c.5067,"a"
 2774               	__c.5067:
 2775 0000 4348 4152 		.string	"CHARG"
 2775      4700 
 2776               		.section	.progmem.data.__c.5063,"a"
 2779               	__c.5063:
 2780 0000 4655 4C4C 		.string	"FULL"
 2780      00
 2781               		.section	.progmem.data.__c.5060,"a"
 2784               	__c.5060:
 2785 0000 6261 7474 		.string	"battery: "
 2785      6572 793A 
 2785      2000 
 2786               		.section	.progmem.data.__c.5058,"a"
 2789               	__c.5058:
 2790 0000 5553 4220 		.string	"USB State: %s\n"
 2790      5374 6174 
 2790      653A 2025 
 2790      730A 00
 2791               		.section	.progmem.data.__c.5056,"a"
 2794               	__c.5056:
 2795 0000 636F 6E66 		.string	"config_mode: %X\n"
 2795      6967 5F6D 
 2795      6F64 653A 
 2795      2025 580A 
 2795      00
 2796               		.section	.progmem.data.__c.5054,"a"
 2799               	__c.5054:
 2800 0000 726E 3432 		.string	"rn42_autoconnecting(): %X\n"
 2800      5F61 7574 
 2800      6F63 6F6E 
 2800      6E65 6374 
 2800      696E 6728 
 2801               		.section	.progmem.data.__c.5052,"a"
 2804               	__c.5052:
 2805 0000 726E 3432 		.string	"rn42: %s\n"
 2805      3A20 2573 
 2805      0A00 
 2806               		.section	.progmem.data.__c.5050,"a"
 2809               	__c.5050:
 2810 0000 666F 7263 		.string	"force_usb: %X\n"
 2810      655F 7573 
 2810      623A 2025 
 2810      580A 00
 2811               		.section	.progmem.data.__c.5048,"a"
 2814               	__c.5048:
 2815 0000 7072 6F74 		.string	"protocol: %s\n"
 2815      6F63 6F6C 
 2815      3A20 2573 
 2815      0A00 
 2816               		.section	.progmem.data.__c.5046,"a"
 2819               	__c.5046:
 2820 0000 0A2D 2D2D 		.string	"\n----- RN-42 info -----\n"
 2820      2D2D 2052 
 2820      4E2D 3432 
 2820      2069 6E66 
 2820      6F20 2D2D 
 2821               		.section	.progmem.data.__c.5042,"a"
 2824               	__c.5042:
 2825 0000 753A 2020 		.string	"u:       toggle Force USB mode\n"
 2825      2020 2020 
 2825      2074 6F67 
 2825      676C 6520 
 2825      466F 7263 
 2826               		.section	.progmem.data.__c.5040,"a"
 2829               	__c.5040:
 2830 0000 703A 2020 		.string	"p:       pairing\n"
 2830      2020 2020 
 2830      2070 6169 
 2830      7269 6E67 
 2830      0A00 
 2831               		.section	.progmem.data.__c.5038,"a"
 2834               	__c.5038:
 2835 0000 536C 636B 		.string	"Slck:    RN-42 initialize\n"
 2835      3A20 2020 
 2835      2052 4E2D 
 2835      3432 2069 
 2835      6E69 7469 
 2836               		.section	.progmem.data.__c.5036,"a"
 2839               	__c.5036:
 2840 0000 4465 6C3A 		.string	"Del:     enter/exit RN-42 config mode\n"
 2840      2020 2020 
 2840      2065 6E74 
 2840      6572 2F65 
 2840      7869 7420 
 2841               		.section	.progmem.data.__c.5034,"a"
 2844               	__c.5034:
 2845 0000 623A 2020 		.string	"b:       battery voltage\n"
 2845      2020 2020 
 2845      2062 6174 
 2845      7465 7279 
 2845      2076 6F6C 
 2846               		.section	.progmem.data.__c.5032,"a"
 2849               	__c.5032:
 2850 0000 693A 2020 		.string	"i:       RN-42 info\n"
 2850      2020 2020 
 2850      2052 4E2D 
 2850      3432 2069 
 2850      6E66 6F0A 
 2851               		.section	.progmem.data.__c.5030,"a"
 2854               	__c.5030:
 2855 0000 0A0A 2D2D 		.string	"\n\n----- Bluetooth RN-42 Help -----\n"
 2855      2D2D 2D20 
 2855      426C 7565 
 2855      746F 6F74 
 2855      6820 524E 
 2856               		.section	.progmem.data.__c.4970,"a"
 2859               	__c.4970:
 2860 0000 2530 3275 		.string	"%02u:%02u:%02u\t%umV\n"
 2860      3A25 3032 
 2860      753A 2530 
 2860      3275 0925 
 2860      756D 560A 
 2861               		.section	.bss.prev_timer.4962,"aw",@nobits
 2864               	prev_timer.4962:
 2865 0000 0000      		.zero	2
 2866               		.section	.progmem.data.__c.4956,"a"
 2869               	__c.4956:
 2870 0000 4C45 4420 		.string	"LED status: %02X\n"
 2870      7374 6174 
 2870      7573 3A20 
 2870      2530 3258 
 2870      0A00 
 2871               		.section	.progmem.data.__c.4950,"a"
 2874               	__c.4950:
 2875 0000 2025 3032 		.string	" %02X"
 2875      5800 
 2876               		.section	.progmem.data.__c.4948,"a"
 2879               	__c.4948:
 2880 0000 2563 00   		.string	"%c"
 2881               		.section	.bss.state.4946,"aw",@nobits
 2884               	state.4946:
 2885 0000 00        		.zero	1
 2886               		.section	.data.prev_driver,"aw"
 2889               	prev_driver:
 2890 0000 0000      		.word	rn42_driver
 2891               		.section	.bss.force_usb,"aw",@nobits
 2894               	force_usb:
 2895 0000 00        		.zero	1
 2896               		.section	.bss.config_mode,"aw",@nobits
 2899               	config_mode:
 2900 0000 00        		.zero	1
 2901               		.comm	rn42_nkro_last,1,1
 2902               		.comm	rn42_config_driver,10,1
 2903               		.comm	rn42_driver,10,1
 2904               		.text
 2905               	.Letext0:
 2906               		.file 3 "/usr/avr/include/stdint.h"
 2907               		.file 4 "../../tmk_core/common/keycode.h"
 2908               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../Device.h"
 2909               		.file 6 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 2910               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 2911               		.file 8 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 2912               		.file 9 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 2913               		.file 10 "/usr/avr/include/stdio.h"
 2914               		.file 11 "../../tmk_core/common/report.h"
 2915               		.file 12 "../../tmk_core/common/host_driver.h"
 2916               		.file 13 "../../tmk_core/common/host.h"
 2917               		.file 14 "../../tmk_core/common/action_util.h"
 2918               		.file 15 "../../tmk_core/protocol/lufa/lufa.h"
 2919               		.file 16 "rn42/rn42.h"
 2920               		.file 17 "rn42/rn42_task.h"
 2921               		.file 18 "../../tmk_core/common/avr/xprintf.h"
 2922               		.file 19 "../../tmk_core/common/debug.h"
 2923               		.file 20 "../../tmk_core/common/timer.h"
 2924               		.file 21 "../../tmk_core/common/command.h"
 2925               		.file 22 "rn42/battery.h"
 2926               		.file 23 "../../tmk_core/common/action.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rn42_task.c
     /tmp/cc8Von8l.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc8Von8l.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc8Von8l.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc8Von8l.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc8Von8l.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc8Von8l.s:12     .text.enter_command_mode:0000000000000000 enter_command_mode
     /tmp/cc8Von8l.s:2889   .data.prev_driver:0000000000000000 prev_driver
                            *COM*:000000000000000a rn42_config_driver
     /tmp/cc8Von8l.s:2694   .progmem.data.__c.4979:0000000000000000 __c.4979
     /tmp/cc8Von8l.s:2689   .progmem.data.__c.4981:0000000000000000 __c.4981
     /tmp/cc8Von8l.s:2684   .progmem.data.__c.4984:0000000000000000 __c.4984
     /tmp/cc8Von8l.s:2679   .progmem.data.__c.4986:0000000000000000 __c.4986
     /tmp/cc8Von8l.s:153    .text.exit_command_mode:0000000000000000 exit_command_mode
     /tmp/cc8Von8l.s:2674   .progmem.data.__c.4991:0000000000000000 __c.4991
     /tmp/cc8Von8l.s:2669   .progmem.data.__c.4993:0000000000000000 __c.4993
     /tmp/cc8Von8l.s:196    .text.rn42_task_init:0000000000000000 rn42_task_init
                            *COM*:0000000000000001 rn42_nkro_last
     /tmp/cc8Von8l.s:220    .text.rn42_task:0000000000000000 rn42_task
     /tmp/cc8Von8l.s:2874   .progmem.data.__c.4950:0000000000000000 __c.4950
     /tmp/cc8Von8l.s:2879   .progmem.data.__c.4948:0000000000000000 __c.4948
     /tmp/cc8Von8l.s:2869   .progmem.data.__c.4956:0000000000000000 __c.4956
     /tmp/cc8Von8l.s:2899   .bss.config_mode:0000000000000000 config_mode
     /tmp/cc8Von8l.s:2894   .bss.force_usb:0000000000000000 force_usb
                            *COM*:000000000000000a rn42_driver
     /tmp/cc8Von8l.s:2864   .bss.prev_timer.4962:0000000000000000 prev_timer.4962
     /tmp/cc8Von8l.s:2859   .progmem.data.__c.4970:0000000000000000 __c.4970
     /tmp/cc8Von8l.s:2884   .bss.state.4946:0000000000000000 state.4946
     /tmp/cc8Von8l.s:784    .text.command_extra:0000000000000000 command_extra
     /tmp/cc8Von8l.s:2714   .progmem.data.__c.5100:0000000000000000 __c.5100
     /tmp/cc8Von8l.s:2854   .progmem.data.__c.5030:0000000000000000 __c.5030
     /tmp/cc8Von8l.s:2849   .progmem.data.__c.5032:0000000000000000 __c.5032
     /tmp/cc8Von8l.s:2844   .progmem.data.__c.5034:0000000000000000 __c.5034
     /tmp/cc8Von8l.s:2839   .progmem.data.__c.5036:0000000000000000 __c.5036
     /tmp/cc8Von8l.s:2834   .progmem.data.__c.5038:0000000000000000 __c.5038
     /tmp/cc8Von8l.s:2829   .progmem.data.__c.5040:0000000000000000 __c.5040
     /tmp/cc8Von8l.s:2824   .progmem.data.__c.5042:0000000000000000 __c.5042
     /tmp/cc8Von8l.s:2704   .progmem.data.__c.5019:0000000000000000 __c.5019
     /tmp/cc8Von8l.s:2699   .progmem.data.__c.5021:0000000000000000 __c.5021
     /tmp/cc8Von8l.s:2819   .progmem.data.__c.5046:0000000000000000 __c.5046
     /tmp/cc8Von8l.s:2814   .progmem.data.__c.5048:0000000000000000 __c.5048
     /tmp/cc8Von8l.s:2809   .progmem.data.__c.5050:0000000000000000 __c.5050
     /tmp/cc8Von8l.s:2804   .progmem.data.__c.5052:0000000000000000 __c.5052
     /tmp/cc8Von8l.s:2799   .progmem.data.__c.5054:0000000000000000 __c.5054
     /tmp/cc8Von8l.s:2794   .progmem.data.__c.5056:0000000000000000 __c.5056
     /tmp/cc8Von8l.s:2789   .progmem.data.__c.5058:0000000000000000 __c.5058
     /tmp/cc8Von8l.s:2784   .progmem.data.__c.5060:0000000000000000 __c.5060
     /tmp/cc8Von8l.s:2759   .progmem.data.__c.5076:0000000000000000 __c.5076
     /tmp/cc8Von8l.s:2779   .progmem.data.__c.5063:0000000000000000 __c.5063
     /tmp/cc8Von8l.s:2754   .progmem.data.__c.5078:0000000000000000 __c.5078
     /tmp/cc8Von8l.s:2749   .progmem.data.__c.5080:0000000000000000 __c.5080
     /tmp/cc8Von8l.s:2744   .progmem.data.__c.5082:0000000000000000 __c.5082
     /tmp/cc8Von8l.s:2739   .progmem.data.__c.5088:0000000000000000 __c.5088
     /tmp/cc8Von8l.s:2774   .progmem.data.__c.5067:0000000000000000 __c.5067
     /tmp/cc8Von8l.s:2769   .progmem.data.__c.5070:0000000000000000 __c.5070
     /tmp/cc8Von8l.s:2764   .progmem.data.__c.5073:0000000000000000 __c.5073
     /tmp/cc8Von8l.s:2734   .progmem.data.__c.5091:0000000000000000 __c.5091
     /tmp/cc8Von8l.s:2729   .progmem.data.__c.5093:0000000000000000 __c.5093
     /tmp/cc8Von8l.s:2724   .progmem.data.__c.5095:0000000000000000 __c.5095
     /tmp/cc8Von8l.s:2719   .progmem.data.__c.5097:0000000000000000 __c.5097
     /tmp/cc8Von8l.s:2709   .progmem.data.__c.5102:0000000000000000 __c.5102
     /tmp/cc8Von8l.s:2664   .progmem.data.__c.4998:0000000000000000 __c.4998
     /tmp/cc8Von8l.s:2659   .progmem.data.__c.5000:0000000000000000 __c.5000
     /tmp/cc8Von8l.s:2654   .progmem.data.__c.5002:0000000000000000 __c.5002
     /tmp/cc8Von8l.s:2649   .progmem.data.__c.5004:0000000000000000 __c.5004
     /tmp/cc8Von8l.s:2644   .progmem.data.__c.5006:0000000000000000 __c.5006
     /tmp/cc8Von8l.s:2639   .progmem.data.__c.5008:0000000000000000 __c.5008
     /tmp/cc8Von8l.s:2634   .progmem.data.__c.5010:0000000000000000 __c.5010
     /tmp/cc8Von8l.s:2629   .progmem.data.__c.5012:0000000000000000 __c.5012
     /tmp/cc8Von8l.s:2624   .progmem.data.__c.5014:0000000000000000 __c.5014
     /tmp/cc8Von8l.s:1887   .text.command_console_extra:0000000000000000 command_console_extra

UNDEFINED SYMBOLS
host_get_driver
clear_keyboard
host_set_driver
rn42_disconnect
rn42_linked
xputs
rn42_send_command
rn42_print_response
rn42_autoconnect
battery_init
keyboard_nkro
rn42_getc
rn42_rts
timer_elapsed
__udivmodhi4
battery_status
battery_led
timer_read32
__udivmodsi4
battery_voltage
debug_config
__xprintf
rn42_set_leds
lufa_driver
rn42_autoconnecting
command_state
USB_DeviceState
USB_Device_RemoteWakeupEnabled
get_mods
__tablejump2__
rn42_putc
__do_copy_data
__do_clear_bss
