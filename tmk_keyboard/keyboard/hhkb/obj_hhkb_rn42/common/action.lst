   1               		.file	"action.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_exec,"ax",@progbits
  11               	.global	action_exec
  13               	action_exec:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/action.c"
   1:../../tmk_core/common/action.c **** /*
   2:../../tmk_core/common/action.c **** Copyright 2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/action.c **** 
   4:../../tmk_core/common/action.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/action.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/action.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/action.c **** (at your option) any later version.
   8:../../tmk_core/common/action.c **** 
   9:../../tmk_core/common/action.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/action.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/action.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/action.c **** GNU General Public License for more details.
  13:../../tmk_core/common/action.c **** 
  14:../../tmk_core/common/action.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/action.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/action.c **** */
  17:../../tmk_core/common/action.c **** #include "host.h"
  18:../../tmk_core/common/action.c **** #include "keycode.h"
  19:../../tmk_core/common/action.c **** #include "keyboard.h"
  20:../../tmk_core/common/action.c **** #include "mousekey.h"
  21:../../tmk_core/common/action.c **** #include "command.h"
  22:../../tmk_core/common/action.c **** #include "led.h"
  23:../../tmk_core/common/action.c **** #include "backlight.h"
  24:../../tmk_core/common/action.c **** #include "action_layer.h"
  25:../../tmk_core/common/action.c **** #include "action_tapping.h"
  26:../../tmk_core/common/action.c **** #include "action_macro.h"
  27:../../tmk_core/common/action.c **** #include "action_util.h"
  28:../../tmk_core/common/action.c **** #include "action.h"
  29:../../tmk_core/common/action.c **** #include "hook.h"
  30:../../tmk_core/common/action.c **** #include "wait.h"
  31:../../tmk_core/common/action.c **** 
  32:../../tmk_core/common/action.c **** #ifdef DEBUG_ACTION
  33:../../tmk_core/common/action.c **** #include "debug.h"
  34:../../tmk_core/common/action.c **** #else
  35:../../tmk_core/common/action.c **** #include "nodebug.h"
  36:../../tmk_core/common/action.c **** #endif
  37:../../tmk_core/common/action.c **** 
  38:../../tmk_core/common/action.c **** 
  39:../../tmk_core/common/action.c **** void action_exec(keyevent_t event)
  40:../../tmk_core/common/action.c **** {
  16               		.loc 1 40 1 view -0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 CDB7      		in r28,__SP_L__
  27 0006 DEB7      		in r29,__SP_H__
  28               	.LCFI2:
  29               		.cfi_def_cfa_register 28
  30 0008 2B97      		sbiw r28,11
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 15
  33 000a 0FB6      		in __tmp_reg__,__SREG__
  34 000c F894      		cli
  35 000e DEBF      		out __SP_H__,r29
  36 0010 0FBE      		out __SREG__,__tmp_reg__
  37 0012 CDBF      		out __SP_L__,r28
  38               	/* prologue: function */
  39               	/* frame size = 11 */
  40               	/* stack size = 13 */
  41               	.L__stack_usage = 13
  42 0014 4F83      		std Y+7,r20
  43 0016 5887      		std Y+8,r21
  44 0018 6987      		std Y+9,r22
  45 001a 7A87      		std Y+10,r23
  46 001c 8B87      		std Y+11,r24
  47               	.LVL0:
  41:../../tmk_core/common/action.c ****     if (!IS_NOEVENT(event)) {
  48               		.loc 1 41 5 view .LVU1
  49               	.LBB4:
  50               	.LBI4:
  51               		.file 2 "../../tmk_core/common/keyboard.h"
   1:../../tmk_core/common/keyboard.h **** /*
   2:../../tmk_core/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.h **** 
   4:../../tmk_core/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.h **** 
   9:../../tmk_core/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.h **** 
  14:../../tmk_core/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.h **** */
  17:../../tmk_core/common/keyboard.h **** 
  18:../../tmk_core/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core/common/keyboard.h **** 
  21:../../tmk_core/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core/common/keyboard.h **** 
  24:../../tmk_core/common/keyboard.h **** 
  25:../../tmk_core/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core/common/keyboard.h **** extern "C" {
  27:../../tmk_core/common/keyboard.h **** #endif
  28:../../tmk_core/common/keyboard.h **** 
  29:../../tmk_core/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core/common/keyboard.h **** typedef struct {
  31:../../tmk_core/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core/common/keyboard.h **** } keypos_t;
  34:../../tmk_core/common/keyboard.h **** 
  35:../../tmk_core/common/keyboard.h **** /* key event */
  36:../../tmk_core/common/keyboard.h **** typedef struct {
  37:../../tmk_core/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core/common/keyboard.h **** 
  42:../../tmk_core/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core/common/keyboard.h **** 
  45:../../tmk_core/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core/common/keyboard.h ****  */
  49:../../tmk_core/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  52               		.loc 2 49 20 view .LVU2
  53               	.LBB5:
  54               		.loc 2 49 51 view .LVU3
  55               		.loc 2 49 74 is_stmt 0 view .LVU4
  56 001e 8A85      		ldd r24,Y+10
  57 0020 9B85      		ldd r25,Y+11
  58 0022 892B      		or r24,r25
  59 0024 01F0      		breq .L2
  60 0026 852F      		mov r24,r21
  61 0028 8423      		and r24,r20
  62 002a 8F3F      		cpi r24,lo8(-1)
  63 002c 01F4      		brne .L3
  64               	.LVL1:
  65               	.L2:
  66               		.loc 2 49 74 view .LVU5
  67               	.LBE5:
  68               	.LBE4:
  42:../../tmk_core/common/action.c ****         dprint("\n---- action_exec: start -----\n");
  43:../../tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
  44:../../tmk_core/common/action.c ****         hook_matrix_change(event);
  45:../../tmk_core/common/action.c ****     }
  46:../../tmk_core/common/action.c **** 
  47:../../tmk_core/common/action.c ****     keyrecord_t record = { .event = event };
  69               		.loc 1 47 5 is_stmt 1 view .LVU6
  70               		.loc 1 47 17 is_stmt 0 view .LVU7
  71 002e 1E82      		std Y+6,__zero_reg__
  72 0030 1D82      		std Y+5,__zero_reg__
  73 0032 85E0      		ldi r24,lo8(5)
  74 0034 FE01      		movw r30,r28
  75 0036 3796      		adiw r30,7
  76 0038 DE01      		movw r26,r28
  77 003a 1196      		adiw r26,1
  78               		0:
  79 003c 0190      		ld r0,Z+
  80 003e 0D92      		st X+,r0
  81 0040 8A95      		dec r24
  82 0042 01F4      		brne 0b
  48:../../tmk_core/common/action.c **** 
  49:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  50:../../tmk_core/common/action.c ****     action_tapping_process(record);
  83               		.loc 1 50 5 is_stmt 1 view .LVU8
  84 0044 4981      		ldd r20,Y+1
  85 0046 5A81      		ldd r21,Y+2
  86 0048 6B81      		ldd r22,Y+3
  87 004a 7C81      		ldd r23,Y+4
  88 004c 8D81      		ldd r24,Y+5
  89 004e 9E81      		ldd r25,Y+6
  90               	/* epilogue start */
  51:../../tmk_core/common/action.c **** #else
  52:../../tmk_core/common/action.c ****     process_action(&record);
  53:../../tmk_core/common/action.c ****     if (!IS_NOEVENT(record.event)) {
  54:../../tmk_core/common/action.c ****         dprint("processed: "); debug_record(record); dprintln();
  55:../../tmk_core/common/action.c ****     }
  56:../../tmk_core/common/action.c **** #endif
  57:../../tmk_core/common/action.c **** }
  91               		.loc 1 57 1 is_stmt 0 view .LVU9
  92 0050 2B96      		adiw r28,11
  93 0052 0FB6      		in __tmp_reg__,__SREG__
  94 0054 F894      		cli
  95 0056 DEBF      		out __SP_H__,r29
  96 0058 0FBE      		out __SREG__,__tmp_reg__
  97 005a CDBF      		out __SP_L__,r28
  98 005c DF91      		pop r29
  99 005e CF91      		pop r28
  50:../../tmk_core/common/action.c **** #else
 100               		.loc 1 50 5 view .LVU10
 101 0060 0C94 0000 		jmp action_tapping_process
 102               	.LVL2:
 103               	.L3:
  42:../../tmk_core/common/action.c ****         dprint("EVENT: "); debug_event(event); dprintln();
 104               		.loc 1 42 9 is_stmt 1 view .LVU11
  43:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 105               		.loc 1 43 9 view .LVU12
  43:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 106               		.loc 1 43 28 view .LVU13
  43:../../tmk_core/common/action.c ****         hook_matrix_change(event);
 107               		.loc 1 43 48 view .LVU14
  44:../../tmk_core/common/action.c ****     }
 108               		.loc 1 44 9 view .LVU15
 109 0064 6985      		ldd r22,Y+9
 110 0066 7A85      		ldd r23,Y+10
 111 0068 8B85      		ldd r24,Y+11
 112 006a 0E94 0000 		call hook_matrix_change
 113               	.LVL3:
  44:../../tmk_core/common/action.c ****     }
 114               		.loc 1 44 9 is_stmt 0 view .LVU16
 115 006e 00C0      		rjmp .L2
 116               		.cfi_endproc
 117               	.LFE103:
 119               		.section	.text.register_code,"ax",@progbits
 120               	.global	register_code
 122               	register_code:
 123               	.LVL4:
 124               	.LFB105:
  58:../../tmk_core/common/action.c **** 
  59:../../tmk_core/common/action.c **** void process_action(keyrecord_t *record)
  60:../../tmk_core/common/action.c **** {
  61:../../tmk_core/common/action.c ****     keyevent_t event = record->event;
  62:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  63:../../tmk_core/common/action.c ****     uint8_t tap_count = record->tap.count;
  64:../../tmk_core/common/action.c **** #endif
  65:../../tmk_core/common/action.c **** 
  66:../../tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return; }
  67:../../tmk_core/common/action.c **** 
  68:../../tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event);
  69:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
  70:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
  71:../../tmk_core/common/action.c ****     dprint(" layer_state: "); layer_debug();
  72:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
  73:../../tmk_core/common/action.c **** #endif
  74:../../tmk_core/common/action.c ****     dprintln();
  75:../../tmk_core/common/action.c **** 
  76:../../tmk_core/common/action.c ****     switch (action.kind.id) {
  77:../../tmk_core/common/action.c ****         /* Key and Mods */
  78:../../tmk_core/common/action.c ****         case ACT_LMODS:
  79:../../tmk_core/common/action.c ****         case ACT_RMODS:
  80:../../tmk_core/common/action.c ****             {
  81:../../tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS) ?  action.key.mods :
  82:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
  83:../../tmk_core/common/action.c ****                 if (event.pressed) {
  84:../../tmk_core/common/action.c ****                     if (mods) {
  85:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
  86:../../tmk_core/common/action.c ****                         send_keyboard_report();
  87:../../tmk_core/common/action.c ****                     }
  88:../../tmk_core/common/action.c ****                     register_code(action.key.code);
  89:../../tmk_core/common/action.c ****                 } else {
  90:../../tmk_core/common/action.c ****                     unregister_code(action.key.code);
  91:../../tmk_core/common/action.c ****                     if (mods) {
  92:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
  93:../../tmk_core/common/action.c ****                         send_keyboard_report();
  94:../../tmk_core/common/action.c ****                     }
  95:../../tmk_core/common/action.c ****                 }
  96:../../tmk_core/common/action.c ****             }
  97:../../tmk_core/common/action.c ****             break;
  98:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
  99:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 100:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 101:../../tmk_core/common/action.c ****             {
 102:../../tmk_core/common/action.c ****                 uint8_t mods = (action.kind.id == ACT_LMODS_TAP) ?  action.key.mods :
 103:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 104:../../tmk_core/common/action.c ****                 switch (action.key.code) {
 105:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 106:../../tmk_core/common/action.c ****                     case MODS_ONESHOT:
 107:../../tmk_core/common/action.c ****                         // Oneshot modifier
 108:../../tmk_core/common/action.c ****                         if (event.pressed) {
 109:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 110:../../tmk_core/common/action.c ****                                 register_mods(mods);
 111:../../tmk_core/common/action.c ****                             }
 112:../../tmk_core/common/action.c ****                             else if (tap_count == 1) {
 113:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 114:../../tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 115:../../tmk_core/common/action.c ****                             }
 116:../../tmk_core/common/action.c ****                             else {
 117:../../tmk_core/common/action.c ****                                 register_mods(mods);
 118:../../tmk_core/common/action.c ****                             }
 119:../../tmk_core/common/action.c ****                         } else {
 120:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 121:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 122:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 123:../../tmk_core/common/action.c ****                             }
 124:../../tmk_core/common/action.c ****                             else if (tap_count == 1) {
 125:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 126:../../tmk_core/common/action.c ****                             }
 127:../../tmk_core/common/action.c ****                             else {
 128:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 129:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 130:../../tmk_core/common/action.c ****                             }
 131:../../tmk_core/common/action.c ****                         }
 132:../../tmk_core/common/action.c ****                         break;
 133:../../tmk_core/common/action.c ****     #endif
 134:../../tmk_core/common/action.c ****                     case MODS_TAP_TOGGLE:
 135:../../tmk_core/common/action.c ****                         if (event.pressed) {
 136:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 137:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 138:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 139:../../tmk_core/common/action.c ****                                     unregister_mods(mods);
 140:../../tmk_core/common/action.c ****                                 } else {
 141:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods on\n");
 142:../../tmk_core/common/action.c ****                                     register_mods(mods);
 143:../../tmk_core/common/action.c ****                                 }
 144:../../tmk_core/common/action.c ****                             }
 145:../../tmk_core/common/action.c ****                         } else {
 146:../../tmk_core/common/action.c ****                             if (tap_count < TAPPING_TOGGLE) {
 147:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 148:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 149:../../tmk_core/common/action.c ****                             }
 150:../../tmk_core/common/action.c ****                         }
 151:../../tmk_core/common/action.c ****                         break;
 152:../../tmk_core/common/action.c ****                     default:
 153:../../tmk_core/common/action.c ****                         if (event.pressed) {
 154:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 155:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 156:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 157:../../tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 158:../../tmk_core/common/action.c ****                                     record->tap.count = 0;
 159:../../tmk_core/common/action.c ****                                     register_mods(mods);
 160:../../tmk_core/common/action.c ****                                 } else {
 161:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: register_code\n");
 162:../../tmk_core/common/action.c ****                                     register_code(action.key.code);
 163:../../tmk_core/common/action.c ****                                 }
 164:../../tmk_core/common/action.c ****                             } else {
 165:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 166:../../tmk_core/common/action.c ****                                 register_mods(mods);
 167:../../tmk_core/common/action.c ****                             }
 168:../../tmk_core/common/action.c ****                         } else {
 169:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 170:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 171:../../tmk_core/common/action.c ****                                 unregister_code(action.key.code);
 172:../../tmk_core/common/action.c ****                             } else {
 173:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: No tap: add_mods\n");
 174:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 175:../../tmk_core/common/action.c ****                             }
 176:../../tmk_core/common/action.c ****                         }
 177:../../tmk_core/common/action.c ****                         break;
 178:../../tmk_core/common/action.c ****                 }
 179:../../tmk_core/common/action.c ****             }
 180:../../tmk_core/common/action.c ****             break;
 181:../../tmk_core/common/action.c **** #endif
 182:../../tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 183:../../tmk_core/common/action.c ****         /* other HID usage */
 184:../../tmk_core/common/action.c ****         case ACT_USAGE:
 185:../../tmk_core/common/action.c ****             switch (action.usage.page) {
 186:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 187:../../tmk_core/common/action.c ****                     if (event.pressed) {
 188:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 189:../../tmk_core/common/action.c ****                     } else {
 190:../../tmk_core/common/action.c ****                         host_system_send(0);
 191:../../tmk_core/common/action.c ****                     }
 192:../../tmk_core/common/action.c ****                     break;
 193:../../tmk_core/common/action.c ****                 case PAGE_CONSUMER:
 194:../../tmk_core/common/action.c ****                     if (event.pressed) {
 195:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 196:../../tmk_core/common/action.c ****                     } else {
 197:../../tmk_core/common/action.c ****                         host_consumer_send(0);
 198:../../tmk_core/common/action.c ****                     }
 199:../../tmk_core/common/action.c ****                     break;
 200:../../tmk_core/common/action.c ****             }
 201:../../tmk_core/common/action.c ****             break;
 202:../../tmk_core/common/action.c **** #endif
 203:../../tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 204:../../tmk_core/common/action.c ****         /* Mouse key */
 205:../../tmk_core/common/action.c ****         case ACT_MOUSEKEY:
 206:../../tmk_core/common/action.c ****             if (event.pressed) {
 207:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 208:../../tmk_core/common/action.c ****                 mousekey_send();
 209:../../tmk_core/common/action.c ****             } else {
 210:../../tmk_core/common/action.c ****                 mousekey_off(action.key.code);
 211:../../tmk_core/common/action.c ****                 mousekey_send();
 212:../../tmk_core/common/action.c ****             }
 213:../../tmk_core/common/action.c ****             break;
 214:../../tmk_core/common/action.c **** #endif
 215:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 216:../../tmk_core/common/action.c ****         case ACT_LAYER:
 217:../../tmk_core/common/action.c ****             if (action.layer_bitop.on == 0) {
 218:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 219:../../tmk_core/common/action.c ****                 if (!event.pressed) {
 220:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 221:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 222:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 223:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 224:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 225:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 226:../../tmk_core/common/action.c ****                         case OP_BIT_XOR: default_layer_xor(bits | mask); break;
 227:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 228:../../tmk_core/common/action.c ****                     }
 229:../../tmk_core/common/action.c ****                 }
 230:../../tmk_core/common/action.c ****             } else {
 231:../../tmk_core/common/action.c ****                 /* Layer Bitwise Operation */
 232:../../tmk_core/common/action.c ****                 if (event.pressed ? (action.layer_bitop.on & ON_PRESS) :
 233:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 234:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 235:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 236:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 237:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 238:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 239:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 240:../../tmk_core/common/action.c ****                         case OP_BIT_XOR: layer_xor(bits | mask); break;
 241:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 242:../../tmk_core/common/action.c ****                     }
 243:../../tmk_core/common/action.c ****                 }
 244:../../tmk_core/common/action.c ****             }
 245:../../tmk_core/common/action.c ****             break;
 246:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_TAPPING
 247:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 248:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 249:../../tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 250:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 251:../../tmk_core/common/action.c ****                     /* layer On/Off with modifiers */
 252:../../tmk_core/common/action.c ****                     if (event.pressed) {
 253:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 254:../../tmk_core/common/action.c ****                         register_mods((action.layer_tap.code & 0x10) ?
 255:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 256:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f));
 257:../../tmk_core/common/action.c ****                     } else {
 258:../../tmk_core/common/action.c ****                         layer_off(action.layer_tap.val);
 259:../../tmk_core/common/action.c ****                         unregister_mods((action.layer_tap.code & 0x10) ?
 260:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 261:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f));
 262:../../tmk_core/common/action.c ****                     }
 263:../../tmk_core/common/action.c ****                     break;
 264:../../tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 265:../../tmk_core/common/action.c ****                     /* tap toggle */
 266:../../tmk_core/common/action.c ****                     if (event.pressed) {
 267:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 268:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 269:../../tmk_core/common/action.c ****                         }
 270:../../tmk_core/common/action.c ****                     } else {
 271:../../tmk_core/common/action.c ****                         if (tap_count <= TAPPING_TOGGLE) {
 272:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 273:../../tmk_core/common/action.c ****                         }
 274:../../tmk_core/common/action.c ****                     }
 275:../../tmk_core/common/action.c ****                     break;
 276:../../tmk_core/common/action.c ****                 case OP_ON_OFF:
 277:../../tmk_core/common/action.c ****                     event.pressed ? layer_on(action.layer_tap.val) :
 278:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 279:../../tmk_core/common/action.c ****                     break;
 280:../../tmk_core/common/action.c ****                 case OP_OFF_ON:
 281:../../tmk_core/common/action.c ****                     event.pressed ? layer_off(action.layer_tap.val) :
 282:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 283:../../tmk_core/common/action.c ****                     break;
 284:../../tmk_core/common/action.c ****                 case OP_SET_CLEAR:
 285:../../tmk_core/common/action.c ****                     event.pressed ? layer_move(action.layer_tap.val) :
 286:../../tmk_core/common/action.c ****                                     layer_clear();
 287:../../tmk_core/common/action.c ****                     break;
 288:../../tmk_core/common/action.c ****                 default:
 289:../../tmk_core/common/action.c ****                     /* tap key */
 290:../../tmk_core/common/action.c ****                     if (event.pressed) {
 291:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 292:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 293:../../tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 294:../../tmk_core/common/action.c ****                         } else {
 295:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: On on press\n");
 296:../../tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 297:../../tmk_core/common/action.c ****                         }
 298:../../tmk_core/common/action.c ****                     } else {
 299:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 300:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 301:../../tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 302:../../tmk_core/common/action.c ****                         } else {
 303:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: No tap: Off on release\n");
 304:../../tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 305:../../tmk_core/common/action.c ****                         }
 306:../../tmk_core/common/action.c ****                     }
 307:../../tmk_core/common/action.c ****                     break;
 308:../../tmk_core/common/action.c ****             }
 309:../../tmk_core/common/action.c ****             break;
 310:../../tmk_core/common/action.c ****     #endif
 311:../../tmk_core/common/action.c **** #endif
 312:../../tmk_core/common/action.c ****         /* Extentions */
 313:../../tmk_core/common/action.c **** #ifndef NO_ACTION_MACRO
 314:../../tmk_core/common/action.c ****         case ACT_MACRO:
 315:../../tmk_core/common/action.c ****             action_macro_play(action_get_macro(record, action.func.id, action.func.opt));
 316:../../tmk_core/common/action.c ****             break;
 317:../../tmk_core/common/action.c **** #endif
 318:../../tmk_core/common/action.c **** #ifdef BACKLIGHT_ENABLE
 319:../../tmk_core/common/action.c ****         case ACT_BACKLIGHT:
 320:../../tmk_core/common/action.c ****             if (!event.pressed) {
 321:../../tmk_core/common/action.c ****                 switch (action.backlight.opt) {
 322:../../tmk_core/common/action.c ****                     case BACKLIGHT_INCREASE:
 323:../../tmk_core/common/action.c ****                         backlight_increase();
 324:../../tmk_core/common/action.c ****                         break;
 325:../../tmk_core/common/action.c ****                     case BACKLIGHT_DECREASE:
 326:../../tmk_core/common/action.c ****                         backlight_decrease();
 327:../../tmk_core/common/action.c ****                         break;
 328:../../tmk_core/common/action.c ****                     case BACKLIGHT_TOGGLE:
 329:../../tmk_core/common/action.c ****                         backlight_toggle();
 330:../../tmk_core/common/action.c ****                         break;
 331:../../tmk_core/common/action.c ****                     case BACKLIGHT_STEP:
 332:../../tmk_core/common/action.c ****                         backlight_step();
 333:../../tmk_core/common/action.c ****                         break;
 334:../../tmk_core/common/action.c ****                     case BACKLIGHT_LEVEL:
 335:../../tmk_core/common/action.c ****                         backlight_level(action.backlight.level);
 336:../../tmk_core/common/action.c ****                         break;
 337:../../tmk_core/common/action.c ****                 }
 338:../../tmk_core/common/action.c ****             }
 339:../../tmk_core/common/action.c ****             break;
 340:../../tmk_core/common/action.c **** #endif
 341:../../tmk_core/common/action.c ****         case ACT_COMMAND:
 342:../../tmk_core/common/action.c ****             break;
 343:../../tmk_core/common/action.c **** #ifndef NO_ACTION_FUNCTION
 344:../../tmk_core/common/action.c ****         case ACT_FUNCTION:
 345:../../tmk_core/common/action.c ****             action_function(record, action.func.id, action.func.opt);
 346:../../tmk_core/common/action.c ****             break;
 347:../../tmk_core/common/action.c **** #endif
 348:../../tmk_core/common/action.c ****         default:
 349:../../tmk_core/common/action.c ****             break;
 350:../../tmk_core/common/action.c ****     }
 351:../../tmk_core/common/action.c **** }
 352:../../tmk_core/common/action.c **** 
 353:../../tmk_core/common/action.c **** 
 354:../../tmk_core/common/action.c **** 
 355:../../tmk_core/common/action.c **** 
 356:../../tmk_core/common/action.c **** /*
 357:../../tmk_core/common/action.c ****  * Utilities for actions.
 358:../../tmk_core/common/action.c ****  */
 359:../../tmk_core/common/action.c **** void register_code(uint8_t code)
 360:../../tmk_core/common/action.c **** {
 125               		.loc 1 360 1 is_stmt 1 view -0
 126               		.cfi_startproc
 127               		.loc 1 360 1 is_stmt 0 view .LVU18
 128 0000 CF93      		push r28
 129               	.LCFI4:
 130               		.cfi_def_cfa_offset 3
 131               		.cfi_offset 28, -2
 132               	/* prologue: function */
 133               	/* frame size = 0 */
 134               	/* stack size = 1 */
 135               	.L__stack_usage = 1
 136 0002 C82F      		mov r28,r24
 361:../../tmk_core/common/action.c ****     if (code == KC_NO) {
 137               		.loc 1 361 5 is_stmt 1 view .LVU19
 138               		.loc 1 361 8 is_stmt 0 view .LVU20
 139 0004 8823      		tst r24
 140 0006 01F4      		brne .+2
 141 0008 00C0      		rjmp .L7
 362:../../tmk_core/common/action.c ****         return;
 363:../../tmk_core/common/action.c ****     }
 364:../../tmk_core/common/action.c **** 
 365:../../tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 366:../../tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 367:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 368:../../tmk_core/common/action.c ****         // Resync: ignore if caps lock already is on
 369:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK)) return;
 370:../../tmk_core/common/action.c **** #endif
 371:../../tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 372:../../tmk_core/common/action.c ****         send_keyboard_report();
 373:../../tmk_core/common/action.c ****         wait_ms(100);
 374:../../tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 375:../../tmk_core/common/action.c ****         send_keyboard_report();
 376:../../tmk_core/common/action.c ****     }
 377:../../tmk_core/common/action.c **** 
 378:../../tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 379:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 380:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_NUM_LOCK)) return;
 381:../../tmk_core/common/action.c **** #endif
 382:../../tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 383:../../tmk_core/common/action.c ****         send_keyboard_report();
 384:../../tmk_core/common/action.c ****         wait_ms(100);
 385:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 386:../../tmk_core/common/action.c ****         send_keyboard_report();
 387:../../tmk_core/common/action.c ****     }
 388:../../tmk_core/common/action.c **** 
 389:../../tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 390:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 391:../../tmk_core/common/action.c ****         if (host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK)) return;
 392:../../tmk_core/common/action.c **** #endif
 393:../../tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 394:../../tmk_core/common/action.c ****         send_keyboard_report();
 395:../../tmk_core/common/action.c ****         wait_ms(100);
 396:../../tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 397:../../tmk_core/common/action.c ****         send_keyboard_report();
 398:../../tmk_core/common/action.c ****     }
 399:../../tmk_core/common/action.c **** #endif
 400:../../tmk_core/common/action.c **** 
 401:../../tmk_core/common/action.c ****     else if IS_KEY(code) {
 142               		.loc 1 401 10 is_stmt 1 view .LVU21
 143               		.loc 1 401 13 is_stmt 0 view .LVU22
 144 000a 8CEF      		ldi r24,lo8(-4)
 145               	.LVL5:
 146               		.loc 1 401 13 view .LVU23
 147 000c 8C0F      		add r24,r28
 148 000e 813A      		cpi r24,lo8(-95)
 149 0010 00F4      		brsh .L10
 402:../../tmk_core/common/action.c ****         // TODO: should push command_proc out of this block?
 403:../../tmk_core/common/action.c ****         if (command_proc(code)) return;
 150               		.loc 1 403 9 is_stmt 1 view .LVU24
 151               		.loc 1 403 13 is_stmt 0 view .LVU25
 152 0012 8C2F      		mov r24,r28
 153 0014 0E94 0000 		call command_proc
 154               	.LVL6:
 155               		.loc 1 403 12 view .LVU26
 156 0018 8111      		cpse r24,__zero_reg__
 157 001a 00C0      		rjmp .L7
 404:../../tmk_core/common/action.c **** 
 405:../../tmk_core/common/action.c **** #ifndef NO_ACTION_ONESHOT
 406:../../tmk_core/common/action.c **** /* TODO: remove
 407:../../tmk_core/common/action.c ****         if (oneshot_state.mods && !oneshot_state.disabled) {
 408:../../tmk_core/common/action.c ****             uint8_t tmp_mods = get_mods();
 409:../../tmk_core/common/action.c ****             add_mods(oneshot_state.mods);
 410:../../tmk_core/common/action.c **** 
 411:../../tmk_core/common/action.c ****             add_key(code);
 412:../../tmk_core/common/action.c ****             send_keyboard_report();
 413:../../tmk_core/common/action.c **** 
 414:../../tmk_core/common/action.c ****             set_mods(tmp_mods);
 415:../../tmk_core/common/action.c ****             send_keyboard_report();
 416:../../tmk_core/common/action.c ****             oneshot_cancel();
 417:../../tmk_core/common/action.c ****         } else 
 418:../../tmk_core/common/action.c **** */
 419:../../tmk_core/common/action.c **** #endif
 420:../../tmk_core/common/action.c ****         {
 421:../../tmk_core/common/action.c ****             add_key(code);
 158               		.loc 1 421 13 is_stmt 1 view .LVU27
 159 001c 8C2F      		mov r24,r28
 160 001e 0E94 0000 		call add_key
 161               	.LVL7:
 422:../../tmk_core/common/action.c ****             send_keyboard_report();
 162               		.loc 1 422 13 view .LVU28
 163               	.L39:
 423:../../tmk_core/common/action.c ****         }
 424:../../tmk_core/common/action.c ****     }
 425:../../tmk_core/common/action.c ****     else if IS_MOD(code) {
 426:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 427:../../tmk_core/common/action.c ****         send_keyboard_report();
 164               		.loc 1 427 9 view .LVU29
 165               	/* epilogue start */
 428:../../tmk_core/common/action.c ****     }
 429:../../tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 430:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 431:../../tmk_core/common/action.c ****     }
 432:../../tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 433:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 434:../../tmk_core/common/action.c ****     }
 435:../../tmk_core/common/action.c **** }
 166               		.loc 1 435 1 is_stmt 0 view .LVU30
 167 0022 CF91      		pop r28
 427:../../tmk_core/common/action.c ****     }
 168               		.loc 1 427 9 view .LVU31
 169 0024 0C94 0000 		jmp send_keyboard_report
 170               	.LVL8:
 171               	.L10:
 425:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 172               		.loc 1 425 10 is_stmt 1 view .LVU32
 425:../../tmk_core/common/action.c ****         add_mods(MOD_BIT(code));
 173               		.loc 1 425 13 is_stmt 0 view .LVU33
 174 0028 80E2      		ldi r24,lo8(32)
 175 002a 8C0F      		add r24,r28
 176 002c 8830      		cpi r24,lo8(8)
 177 002e 00F4      		brsh .L12
 426:../../tmk_core/common/action.c ****         send_keyboard_report();
 178               		.loc 1 426 9 is_stmt 1 view .LVU34
 426:../../tmk_core/common/action.c ****         send_keyboard_report();
 179               		.loc 1 426 18 is_stmt 0 view .LVU35
 180 0030 C770      		andi r28,lo8(7)
 181               	.LVL9:
 426:../../tmk_core/common/action.c ****         send_keyboard_report();
 182               		.loc 1 426 9 view .LVU36
 183 0032 81E0      		ldi r24,lo8(1)
 184 0034 00C0      		rjmp 2f
 185               		1:
 186 0036 880F      		lsl r24
 187               		2:
 188 0038 CA95      		dec r28
 189 003a 02F4      		brpl 1b
 190 003c 0E94 0000 		call add_mods
 191               	.LVL10:
 192 0040 00C0      		rjmp .L39
 193               	.LVL11:
 194               	.L12:
 429:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 195               		.loc 1 429 10 is_stmt 1 view .LVU37
 429:../../tmk_core/common/action.c ****         host_system_send(KEYCODE2SYSTEM(code));
 196               		.loc 1 429 13 is_stmt 0 view .LVU38
 197 0042 8BE5      		ldi r24,lo8(91)
 198 0044 8C0F      		add r24,r28
 199 0046 8330      		cpi r24,lo8(3)
 200 0048 00F4      		brsh .L13
 430:../../tmk_core/common/action.c ****     }
 201               		.loc 1 430 9 is_stmt 1 view .LVU39
 202 004a 81E8      		ldi r24,lo8(-127)
 203 004c 90E0      		ldi r25,0
 204 004e C53A      		cpi r28,lo8(-91)
 205 0050 01F0      		breq .L14
 430:../../tmk_core/common/action.c ****     }
 206               		.loc 1 430 26 is_stmt 0 discriminator 1 view .LVU40
 207 0052 83E8      		ldi r24,lo8(-125)
 208 0054 90E0      		ldi r25,0
 209 0056 C63A      		cpi r28,lo8(-90)
 210 0058 01F4      		brne .L14
 430:../../tmk_core/common/action.c ****     }
 211               		.loc 1 430 26 view .LVU41
 212 005a 82E8      		ldi r24,lo8(-126)
 213 005c 90E0      		ldi r25,0
 214               	.L14:
 215               	/* epilogue start */
 216               		.loc 1 435 1 discriminator 12 view .LVU42
 217 005e CF91      		pop r28
 218               	.LVL12:
 430:../../tmk_core/common/action.c ****     }
 219               		.loc 1 430 9 discriminator 12 view .LVU43
 220 0060 0C94 0000 		jmp host_system_send
 221               	.LVL13:
 222               	.L13:
 432:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 223               		.loc 1 432 10 is_stmt 1 view .LVU44
 432:../../tmk_core/common/action.c ****         host_consumer_send(KEYCODE2CONSUMER(code));
 224               		.loc 1 432 13 is_stmt 0 view .LVU45
 225 0064 88E5      		ldi r24,lo8(88)
 226 0066 8C0F      		add r24,r28
 227 0068 8531      		cpi r24,lo8(21)
 228 006a 00F0      		brlo .+2
 229 006c 00C0      		rjmp .L7
 433:../../tmk_core/common/action.c ****     }
 230               		.loc 1 433 9 is_stmt 1 view .LVU46
 231 006e 82EE      		ldi r24,lo8(-30)
 232 0070 90E0      		ldi r25,0
 233 0072 C83A      		cpi r28,lo8(-88)
 234 0074 01F4      		brne .+2
 235 0076 00C0      		rjmp .L15
 433:../../tmk_core/common/action.c ****     }
 236               		.loc 1 433 28 is_stmt 0 discriminator 1 view .LVU47
 237 0078 89EE      		ldi r24,lo8(-23)
 238 007a 90E0      		ldi r25,0
 239 007c C93A      		cpi r28,lo8(-87)
 240 007e 01F4      		brne .+2
 241 0080 00C0      		rjmp .L15
 433:../../tmk_core/common/action.c ****     }
 242               		.loc 1 433 28 discriminator 3 view .LVU48
 243 0082 8AEE      		ldi r24,lo8(-22)
 244 0084 90E0      		ldi r25,0
 245 0086 CA3A      		cpi r28,lo8(-86)
 246 0088 01F4      		brne .+2
 247 008a 00C0      		rjmp .L15
 433:../../tmk_core/common/action.c ****     }
 248               		.loc 1 433 28 discriminator 5 view .LVU49
 249 008c 85EB      		ldi r24,lo8(-75)
 250 008e 90E0      		ldi r25,0
 251 0090 CB3A      		cpi r28,lo8(-85)
 252 0092 01F4      		brne .+2
 253 0094 00C0      		rjmp .L15
 433:../../tmk_core/common/action.c ****     }
 254               		.loc 1 433 28 discriminator 7 view .LVU50
 255 0096 86EB      		ldi r24,lo8(-74)
 256 0098 90E0      		ldi r25,0
 257 009a CC3A      		cpi r28,lo8(-84)
 258 009c 01F4      		brne .+2
 259 009e 00C0      		rjmp .L15
 433:../../tmk_core/common/action.c ****     }
 260               		.loc 1 433 28 discriminator 9 view .LVU51
 261 00a0 83EB      		ldi r24,lo8(-77)
 262 00a2 90E0      		ldi r25,0
 263 00a4 CD3A      		cpi r28,lo8(-83)
 264 00a6 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 265               		.loc 1 433 28 discriminator 11 view .LVU52
 266 00a8 84EB      		ldi r24,lo8(-76)
 267 00aa 90E0      		ldi r25,0
 268 00ac CE3A      		cpi r28,lo8(-82)
 269 00ae 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 270               		.loc 1 433 28 discriminator 13 view .LVU53
 271 00b0 87EB      		ldi r24,lo8(-73)
 272 00b2 90E0      		ldi r25,0
 273 00b4 CF3A      		cpi r28,lo8(-81)
 274 00b6 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 275               		.loc 1 433 28 discriminator 15 view .LVU54
 276 00b8 8CEC      		ldi r24,lo8(-52)
 277 00ba 90E0      		ldi r25,0
 278 00bc C13B      		cpi r28,lo8(-79)
 279 00be 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 280               		.loc 1 433 28 discriminator 17 view .LVU55
 281 00c0 8DEC      		ldi r24,lo8(-51)
 282 00c2 90E0      		ldi r25,0
 283 00c4 C03B      		cpi r28,lo8(-80)
 284 00c6 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 285               		.loc 1 433 28 discriminator 19 view .LVU56
 286 00c8 83E8      		ldi r24,lo8(-125)
 287 00ca 91E0      		ldi r25,lo8(1)
 288 00cc C23B      		cpi r28,lo8(-78)
 289 00ce 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 290               		.loc 1 433 28 discriminator 21 view .LVU57
 291 00d0 8AE8      		ldi r24,lo8(-118)
 292 00d2 91E0      		ldi r25,lo8(1)
 293 00d4 C33B      		cpi r28,lo8(-77)
 294 00d6 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 295               		.loc 1 433 28 discriminator 23 view .LVU58
 296 00d8 82E9      		ldi r24,lo8(-110)
 297 00da 91E0      		ldi r25,lo8(1)
 298 00dc C43B      		cpi r28,lo8(-76)
 299 00de 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 300               		.loc 1 433 28 discriminator 25 view .LVU59
 301 00e0 84E9      		ldi r24,lo8(-108)
 302 00e2 91E0      		ldi r25,lo8(1)
 303 00e4 C53B      		cpi r28,lo8(-75)
 304 00e6 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 305               		.loc 1 433 28 discriminator 27 view .LVU60
 306 00e8 81E2      		ldi r24,lo8(33)
 307 00ea 92E0      		ldi r25,lo8(2)
 308 00ec C63B      		cpi r28,lo8(-74)
 309 00ee 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 310               		.loc 1 433 28 discriminator 29 view .LVU61
 311 00f0 83E2      		ldi r24,lo8(35)
 312 00f2 92E0      		ldi r25,lo8(2)
 313 00f4 C73B      		cpi r28,lo8(-73)
 314 00f6 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 315               		.loc 1 433 28 discriminator 31 view .LVU62
 316 00f8 84E2      		ldi r24,lo8(36)
 317 00fa 92E0      		ldi r25,lo8(2)
 318 00fc C83B      		cpi r28,lo8(-72)
 319 00fe 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 320               		.loc 1 433 28 discriminator 33 view .LVU63
 321 0100 85E2      		ldi r24,lo8(37)
 322 0102 92E0      		ldi r25,lo8(2)
 323 0104 C93B      		cpi r28,lo8(-71)
 324 0106 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 325               		.loc 1 433 28 discriminator 35 view .LVU64
 326 0108 86E2      		ldi r24,lo8(38)
 327 010a 92E0      		ldi r25,lo8(2)
 328 010c CA3B      		cpi r28,lo8(-70)
 329 010e 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 330               		.loc 1 433 28 discriminator 37 view .LVU65
 331 0110 87E2      		ldi r24,lo8(39)
 332 0112 92E0      		ldi r25,lo8(2)
 333 0114 CB3B      		cpi r28,lo8(-69)
 334 0116 01F0      		breq .L15
 433:../../tmk_core/common/action.c ****     }
 335               		.loc 1 433 28 discriminator 39 view .LVU66
 336 0118 90E0      		ldi r25,0
 337 011a 80E0      		ldi r24,0
 338 011c CC3B      		cpi r28,lo8(-68)
 339 011e 01F4      		brne .L15
 433:../../tmk_core/common/action.c ****     }
 340               		.loc 1 433 28 view .LVU67
 341 0120 8AE2      		ldi r24,lo8(42)
 342 0122 92E0      		ldi r25,lo8(2)
 343               	.L15:
 344               	/* epilogue start */
 345               		.loc 1 435 1 discriminator 84 view .LVU68
 346 0124 CF91      		pop r28
 347               	.LVL14:
 433:../../tmk_core/common/action.c ****     }
 348               		.loc 1 433 9 discriminator 84 view .LVU69
 349 0126 0C94 0000 		jmp host_consumer_send
 350               	.LVL15:
 351               	.L7:
 352               	/* epilogue start */
 353               		.loc 1 435 1 view .LVU70
 354 012a CF91      		pop r28
 355               	.LVL16:
 356               		.loc 1 435 1 view .LVU71
 357 012c 0895      		ret
 358               		.cfi_endproc
 359               	.LFE105:
 361               		.section	.text.unregister_code,"ax",@progbits
 362               	.global	unregister_code
 364               	unregister_code:
 365               	.LVL17:
 366               	.LFB106:
 436:../../tmk_core/common/action.c **** 
 437:../../tmk_core/common/action.c **** void unregister_code(uint8_t code)
 438:../../tmk_core/common/action.c **** {
 367               		.loc 1 438 1 is_stmt 1 view -0
 368               		.cfi_startproc
 369               	/* prologue: function */
 370               	/* frame size = 0 */
 371               	/* stack size = 0 */
 372               	.L__stack_usage = 0
 439:../../tmk_core/common/action.c ****     if (code == KC_NO) {
 373               		.loc 1 439 5 view .LVU73
 374               		.loc 1 439 8 is_stmt 0 view .LVU74
 375 0000 8823      		tst r24
 376 0002 01F0      		breq .L40
 440:../../tmk_core/common/action.c ****         return;
 441:../../tmk_core/common/action.c ****     }
 442:../../tmk_core/common/action.c **** 
 443:../../tmk_core/common/action.c **** #ifdef LOCKING_SUPPORT_ENABLE
 444:../../tmk_core/common/action.c ****     else if (KC_LOCKING_CAPS == code) {
 445:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 446:../../tmk_core/common/action.c ****         // Resync: ignore if caps lock already is off
 447:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_CAPS_LOCK))) return;
 448:../../tmk_core/common/action.c **** #endif
 449:../../tmk_core/common/action.c ****         add_key(KC_CAPSLOCK);
 450:../../tmk_core/common/action.c ****         send_keyboard_report();
 451:../../tmk_core/common/action.c ****         wait_ms(100);
 452:../../tmk_core/common/action.c ****         del_key(KC_CAPSLOCK);
 453:../../tmk_core/common/action.c ****         send_keyboard_report();
 454:../../tmk_core/common/action.c ****     }
 455:../../tmk_core/common/action.c **** 
 456:../../tmk_core/common/action.c ****     else if (KC_LOCKING_NUM == code) {
 457:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 458:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_NUM_LOCK))) return;
 459:../../tmk_core/common/action.c **** #endif
 460:../../tmk_core/common/action.c ****         add_key(KC_NUMLOCK);
 461:../../tmk_core/common/action.c ****         send_keyboard_report();
 462:../../tmk_core/common/action.c ****         wait_ms(100);
 463:../../tmk_core/common/action.c ****         del_key(KC_NUMLOCK);
 464:../../tmk_core/common/action.c ****         send_keyboard_report();
 465:../../tmk_core/common/action.c ****     }
 466:../../tmk_core/common/action.c **** 
 467:../../tmk_core/common/action.c ****     else if (KC_LOCKING_SCROLL == code) {
 468:../../tmk_core/common/action.c **** #ifdef LOCKING_RESYNC_ENABLE
 469:../../tmk_core/common/action.c ****         if (!(host_keyboard_leds() & (1<<USB_LED_SCROLL_LOCK))) return;
 470:../../tmk_core/common/action.c **** #endif
 471:../../tmk_core/common/action.c ****         add_key(KC_SCROLLLOCK);
 472:../../tmk_core/common/action.c ****         send_keyboard_report();
 473:../../tmk_core/common/action.c ****         wait_ms(100);
 474:../../tmk_core/common/action.c ****         del_key(KC_SCROLLLOCK);
 475:../../tmk_core/common/action.c ****         send_keyboard_report();
 476:../../tmk_core/common/action.c ****     }
 477:../../tmk_core/common/action.c **** #endif
 478:../../tmk_core/common/action.c **** 
 479:../../tmk_core/common/action.c ****     else if IS_KEY(code) {
 377               		.loc 1 479 10 is_stmt 1 view .LVU75
 378               		.loc 1 479 13 is_stmt 0 view .LVU76
 379 0004 9CEF      		ldi r25,lo8(-4)
 380 0006 980F      		add r25,r24
 381 0008 913A      		cpi r25,lo8(-95)
 382 000a 00F4      		brsh .L42
 480:../../tmk_core/common/action.c ****         del_key(code);
 383               		.loc 1 480 9 is_stmt 1 view .LVU77
 384 000c 0E94 0000 		call del_key
 385               	.LVL18:
 481:../../tmk_core/common/action.c ****         send_keyboard_report();
 386               		.loc 1 481 9 view .LVU78
 387               	.L48:
 482:../../tmk_core/common/action.c ****     }
 483:../../tmk_core/common/action.c ****     else if IS_MOD(code) {
 484:../../tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 485:../../tmk_core/common/action.c ****         send_keyboard_report();
 388               		.loc 1 485 9 view .LVU79
 389 0010 0C94 0000 		jmp send_keyboard_report
 390               	.LVL19:
 391               	.L42:
 483:../../tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 392               		.loc 1 483 10 view .LVU80
 483:../../tmk_core/common/action.c ****         del_mods(MOD_BIT(code));
 393               		.loc 1 483 13 is_stmt 0 view .LVU81
 394 0014 90E2      		ldi r25,lo8(32)
 395 0016 980F      		add r25,r24
 396 0018 9830      		cpi r25,lo8(8)
 397 001a 00F4      		brsh .L43
 484:../../tmk_core/common/action.c ****         send_keyboard_report();
 398               		.loc 1 484 9 is_stmt 1 view .LVU82
 484:../../tmk_core/common/action.c ****         send_keyboard_report();
 399               		.loc 1 484 18 is_stmt 0 view .LVU83
 400 001c 8770      		andi r24,lo8(7)
 401               	.LVL20:
 484:../../tmk_core/common/action.c ****         send_keyboard_report();
 402               		.loc 1 484 9 view .LVU84
 403 001e 91E0      		ldi r25,lo8(1)
 404 0020 00C0      		rjmp 2f
 405               		1:
 406 0022 990F      		lsl r25
 407               		2:
 408 0024 8A95      		dec r24
 409 0026 02F4      		brpl 1b
 410 0028 892F      		mov r24,r25
 411 002a 0E94 0000 		call del_mods
 412               	.LVL21:
 413 002e 00C0      		rjmp .L48
 414               	.LVL22:
 415               	.L43:
 486:../../tmk_core/common/action.c ****     }
 487:../../tmk_core/common/action.c ****     else if IS_SYSTEM(code) {
 416               		.loc 1 487 10 is_stmt 1 view .LVU85
 417               		.loc 1 487 13 is_stmt 0 view .LVU86
 418 0030 9BE5      		ldi r25,lo8(91)
 419 0032 980F      		add r25,r24
 420 0034 9330      		cpi r25,lo8(3)
 421 0036 00F4      		brsh .L44
 488:../../tmk_core/common/action.c ****         host_system_send(0);
 422               		.loc 1 488 9 is_stmt 1 view .LVU87
 423 0038 90E0      		ldi r25,0
 424 003a 80E0      		ldi r24,0
 425               	.LVL23:
 426               		.loc 1 488 9 is_stmt 0 view .LVU88
 427 003c 0C94 0000 		jmp host_system_send
 428               	.LVL24:
 429               	.L44:
 489:../../tmk_core/common/action.c ****     }
 490:../../tmk_core/common/action.c ****     else if IS_CONSUMER(code) {
 430               		.loc 1 490 10 is_stmt 1 view .LVU89
 431               		.loc 1 490 13 is_stmt 0 view .LVU90
 432 0040 885A      		subi r24,lo8(-(88))
 433               	.LVL25:
 434               		.loc 1 490 13 view .LVU91
 435 0042 8531      		cpi r24,lo8(21)
 436 0044 00F4      		brsh .L40
 491:../../tmk_core/common/action.c ****         host_consumer_send(0);
 437               		.loc 1 491 9 is_stmt 1 view .LVU92
 438 0046 90E0      		ldi r25,0
 439 0048 80E0      		ldi r24,0
 440               	.LVL26:
 441               		.loc 1 491 9 is_stmt 0 view .LVU93
 442 004a 0C94 0000 		jmp host_consumer_send
 443               	.LVL27:
 444               	.L40:
 445               	/* epilogue start */
 492:../../tmk_core/common/action.c ****     }
 493:../../tmk_core/common/action.c **** }
 446               		.loc 1 493 1 view .LVU94
 447 004e 0895      		ret
 448               		.cfi_endproc
 449               	.LFE106:
 451               		.section	.text.type_code,"ax",@progbits
 452               	.global	type_code
 454               	type_code:
 455               	.LVL28:
 456               	.LFB107:
 494:../../tmk_core/common/action.c **** 
 495:../../tmk_core/common/action.c **** void type_code(uint8_t code)
 496:../../tmk_core/common/action.c **** {
 457               		.loc 1 496 1 is_stmt 1 view -0
 458               		.cfi_startproc
 459               		.loc 1 496 1 is_stmt 0 view .LVU96
 460 0000 CF93      		push r28
 461               	.LCFI5:
 462               		.cfi_def_cfa_offset 3
 463               		.cfi_offset 28, -2
 464               	/* prologue: function */
 465               	/* frame size = 0 */
 466               	/* stack size = 1 */
 467               	.L__stack_usage = 1
 468 0002 C82F      		mov r28,r24
 497:../../tmk_core/common/action.c ****     register_code(code);
 469               		.loc 1 497 5 is_stmt 1 view .LVU97
 470 0004 0E94 0000 		call register_code
 471               	.LVL29:
 498:../../tmk_core/common/action.c ****     unregister_code(code);
 472               		.loc 1 498 5 view .LVU98
 473 0008 8C2F      		mov r24,r28
 474               	/* epilogue start */
 499:../../tmk_core/common/action.c **** }
 475               		.loc 1 499 1 is_stmt 0 view .LVU99
 476 000a CF91      		pop r28
 477               	.LVL30:
 498:../../tmk_core/common/action.c ****     unregister_code(code);
 478               		.loc 1 498 5 view .LVU100
 479 000c 0C94 0000 		jmp unregister_code
 480               	.LVL31:
 498:../../tmk_core/common/action.c ****     unregister_code(code);
 481               		.loc 1 498 5 view .LVU101
 482               		.cfi_endproc
 483               	.LFE107:
 485               		.section	.text.register_mods,"ax",@progbits
 486               	.global	register_mods
 488               	register_mods:
 489               	.LVL32:
 490               	.LFB108:
 500:../../tmk_core/common/action.c **** 
 501:../../tmk_core/common/action.c **** void register_mods(uint8_t mods)
 502:../../tmk_core/common/action.c **** {
 491               		.loc 1 502 1 is_stmt 1 view -0
 492               		.cfi_startproc
 493               	/* prologue: function */
 494               	/* frame size = 0 */
 495               	/* stack size = 0 */
 496               	.L__stack_usage = 0
 503:../../tmk_core/common/action.c ****     if (mods) {
 497               		.loc 1 503 5 view .LVU103
 498               		.loc 1 503 8 is_stmt 0 view .LVU104
 499 0000 8823      		tst r24
 500 0002 01F0      		breq .L50
 504:../../tmk_core/common/action.c ****         add_mods(mods);
 501               		.loc 1 504 9 is_stmt 1 view .LVU105
 502 0004 0E94 0000 		call add_mods
 503               	.LVL33:
 505:../../tmk_core/common/action.c ****         send_keyboard_report();
 504               		.loc 1 505 9 view .LVU106
 505 0008 0C94 0000 		jmp send_keyboard_report
 506               	.LVL34:
 507               	.L50:
 508               	/* epilogue start */
 506:../../tmk_core/common/action.c ****     }
 507:../../tmk_core/common/action.c **** }
 509               		.loc 1 507 1 is_stmt 0 view .LVU107
 510 000c 0895      		ret
 511               		.cfi_endproc
 512               	.LFE108:
 514               		.section	.text.unregister_mods,"ax",@progbits
 515               	.global	unregister_mods
 517               	unregister_mods:
 518               	.LVL35:
 519               	.LFB109:
 508:../../tmk_core/common/action.c **** 
 509:../../tmk_core/common/action.c **** void unregister_mods(uint8_t mods)
 510:../../tmk_core/common/action.c **** {
 520               		.loc 1 510 1 is_stmt 1 view -0
 521               		.cfi_startproc
 522               	/* prologue: function */
 523               	/* frame size = 0 */
 524               	/* stack size = 0 */
 525               	.L__stack_usage = 0
 511:../../tmk_core/common/action.c ****     if (mods) {
 526               		.loc 1 511 5 view .LVU109
 527               		.loc 1 511 8 is_stmt 0 view .LVU110
 528 0000 8823      		tst r24
 529 0002 01F0      		breq .L52
 512:../../tmk_core/common/action.c ****         del_mods(mods);
 530               		.loc 1 512 9 is_stmt 1 view .LVU111
 531 0004 0E94 0000 		call del_mods
 532               	.LVL36:
 513:../../tmk_core/common/action.c ****         send_keyboard_report();
 533               		.loc 1 513 9 view .LVU112
 534 0008 0C94 0000 		jmp send_keyboard_report
 535               	.LVL37:
 536               	.L52:
 537               	/* epilogue start */
 514:../../tmk_core/common/action.c ****     }
 515:../../tmk_core/common/action.c **** }
 538               		.loc 1 515 1 is_stmt 0 view .LVU113
 539 000c 0895      		ret
 540               		.cfi_endproc
 541               	.LFE109:
 543               		.section	.text.process_action,"ax",@progbits
 544               	.global	process_action
 546               	process_action:
 547               	.LVL38:
 548               	.LFB104:
  60:../../tmk_core/common/action.c ****     keyevent_t event = record->event;
 549               		.loc 1 60 1 is_stmt 1 view -0
 550               		.cfi_startproc
  60:../../tmk_core/common/action.c ****     keyevent_t event = record->event;
 551               		.loc 1 60 1 is_stmt 0 view .LVU115
 552 0000 AF92      		push r10
 553               	.LCFI6:
 554               		.cfi_def_cfa_offset 3
 555               		.cfi_offset 10, -2
 556 0002 BF92      		push r11
 557               	.LCFI7:
 558               		.cfi_def_cfa_offset 4
 559               		.cfi_offset 11, -3
 560 0004 CF92      		push r12
 561               	.LCFI8:
 562               		.cfi_def_cfa_offset 5
 563               		.cfi_offset 12, -4
 564 0006 DF92      		push r13
 565               	.LCFI9:
 566               		.cfi_def_cfa_offset 6
 567               		.cfi_offset 13, -5
 568 0008 EF92      		push r14
 569               	.LCFI10:
 570               		.cfi_def_cfa_offset 7
 571               		.cfi_offset 14, -6
 572 000a FF92      		push r15
 573               	.LCFI11:
 574               		.cfi_def_cfa_offset 8
 575               		.cfi_offset 15, -7
 576 000c 0F93      		push r16
 577               	.LCFI12:
 578               		.cfi_def_cfa_offset 9
 579               		.cfi_offset 16, -8
 580 000e 1F93      		push r17
 581               	.LCFI13:
 582               		.cfi_def_cfa_offset 10
 583               		.cfi_offset 17, -9
 584 0010 CF93      		push r28
 585               	.LCFI14:
 586               		.cfi_def_cfa_offset 11
 587               		.cfi_offset 28, -10
 588 0012 DF93      		push r29
 589               	.LCFI15:
 590               		.cfi_def_cfa_offset 12
 591               		.cfi_offset 29, -11
 592 0014 00D0      		rcall .
 593 0016 00D0      		rcall .
 594 0018 0F92      		push __tmp_reg__
 595               	.LCFI16:
 596               		.cfi_def_cfa_offset 17
 597 001a CDB7      		in r28,__SP_L__
 598 001c DEB7      		in r29,__SP_H__
 599               	.LCFI17:
 600               		.cfi_def_cfa_register 28
 601               	/* prologue: function */
 602               	/* frame size = 5 */
 603               	/* stack size = 15 */
 604               	.L__stack_usage = 15
 605 001e 5C01      		movw r10,r24
  61:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 606               		.loc 1 61 5 is_stmt 1 view .LVU116
  61:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 607               		.loc 1 61 16 is_stmt 0 view .LVU117
 608 0020 85E0      		ldi r24,lo8(5)
 609               	.LVL39:
  61:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 610               		.loc 1 61 16 view .LVU118
 611 0022 F501      		movw r30,r10
 612 0024 DE01      		movw r26,r28
 613 0026 1196      		adiw r26,1
 614               		0:
 615 0028 0190      		ld r0,Z+
 616 002a 0D92      		st X+,r0
 617 002c 8A95      		dec r24
 618 002e 01F4      		brne 0b
 619               	.LVL40:
  61:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 620               		.loc 1 61 16 view .LVU119
 621 0030 F501      		movw r30,r10
 622 0032 8381      		ldd r24,Z+3
 623 0034 9481      		ldd r25,Z+4
 624               	.LVL41:
  63:../../tmk_core/common/action.c **** #endif
 625               		.loc 1 63 5 is_stmt 1 view .LVU120
  66:../../tmk_core/common/action.c **** 
 626               		.loc 1 66 5 view .LVU121
 627               	.LBB12:
 628               	.LBI12:
 629               		.loc 2 49 20 view .LVU122
 630               	.LBB13:
 631               		.loc 2 49 51 view .LVU123
 632               		.loc 2 49 74 is_stmt 0 view .LVU124
 633 0036 0097      		sbiw r24,0
 634 0038 01F0      		breq .L54
 635               	.LBE13:
 636               	.LBE12:
  61:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 637               		.loc 1 61 16 view .LVU125
 638 003a 4081      		ld r20,Z
 639 003c 5181      		ldd r21,Z+1
 640               	.LBB15:
 641               	.LBB14:
 642               		.loc 2 49 74 view .LVU126
 643 003e 252F      		mov r18,r21
 644 0040 2423      		and r18,r20
 645 0042 2F3F      		cpi r18,lo8(-1)
 646 0044 01F0      		breq .+2
 647 0046 00C0      		rjmp .L146
 648               	.LVL42:
 649               	.L54:
 650               	/* epilogue start */
 651               		.loc 2 49 74 view .LVU127
 652               	.LBE14:
 653               	.LBE15:
 351:../../tmk_core/common/action.c **** 
 654               		.loc 1 351 1 view .LVU128
 655 0048 0F90      		pop __tmp_reg__
 656 004a 0F90      		pop __tmp_reg__
 657 004c 0F90      		pop __tmp_reg__
 658 004e 0F90      		pop __tmp_reg__
 659 0050 0F90      		pop __tmp_reg__
 660 0052 DF91      		pop r29
 661 0054 CF91      		pop r28
 662 0056 1F91      		pop r17
 663               	.LVL43:
 351:../../tmk_core/common/action.c **** 
 664               		.loc 1 351 1 view .LVU129
 665 0058 0F91      		pop r16
 351:../../tmk_core/common/action.c **** 
 666               		.loc 1 351 1 view .LVU130
 667 005a FF90      		pop r15
 668 005c EF90      		pop r14
 669 005e DF90      		pop r13
 670 0060 CF90      		pop r12
 671 0062 BF90      		pop r11
 672 0064 AF90      		pop r10
 673               	.LVL44:
 351:../../tmk_core/common/action.c **** 
 674               		.loc 1 351 1 view .LVU131
 675 0066 0895      		ret
 676               	.LVL45:
 677               	.L57:
 678               	.LBB16:
  81:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 679               		.loc 1 81 17 is_stmt 1 view .LVU132
 680 0068 F12F      		mov r31,r17
 681 006a FF70      		andi r31,lo8(15)
 682 006c EF2E      		mov r14,r31
  81:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 683               		.loc 1 81 48 is_stmt 0 view .LVU133
 684 006e 107F      		andi r17,lo8(-16)
  81:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 685               		.loc 1 81 25 view .LVU134
 686 0070 01F0      		breq .L58
  81:../../tmk_core/common/action.c ****                                                                 action.key.mods<<4;
 687               		.loc 1 81 25 discriminator 2 view .LVU135
 688 0072 E294      		swap r14
 689 0074 40EF      		ldi r20,lo8(-16)
 690 0076 E422      		and r14,r20
 691               	.L58:
 692               	.LVL46:
  83:../../tmk_core/common/action.c ****                     if (mods) {
 693               		.loc 1 83 17 is_stmt 1 discriminator 4 view .LVU136
  83:../../tmk_core/common/action.c ****                     if (mods) {
 694               		.loc 1 83 20 is_stmt 0 discriminator 4 view .LVU137
 695 0078 FF20      		tst r15
 696 007a 01F0      		breq .L59
  84:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
 697               		.loc 1 84 21 is_stmt 1 view .LVU138
  84:../../tmk_core/common/action.c ****                         add_weak_mods(mods);
 698               		.loc 1 84 24 is_stmt 0 view .LVU139
 699 007c EE20      		tst r14
 700 007e 01F0      		breq .L153
  85:../../tmk_core/common/action.c ****                         send_keyboard_report();
 701               		.loc 1 85 25 is_stmt 1 view .LVU140
 702 0080 8E2D      		mov r24,r14
 703 0082 0E94 0000 		call add_weak_mods
 704               	.LVL47:
  86:../../tmk_core/common/action.c ****                     }
 705               		.loc 1 86 25 view .LVU141
 706 0086 0E94 0000 		call send_keyboard_report
 707               	.LVL48:
  88:../../tmk_core/common/action.c ****                 } else {
 708               		.loc 1 88 21 view .LVU142
 709               	.L153:
  88:../../tmk_core/common/action.c ****                 } else {
 710               		.loc 1 88 21 is_stmt 0 view .LVU143
 711               	.LBE16:
 292:../../tmk_core/common/action.c ****                             register_code(action.layer_tap.code);
 712               		.loc 1 292 29 is_stmt 1 view .LVU144
 293:../../tmk_core/common/action.c ****                         } else {
 713               		.loc 1 293 29 view .LVU145
 714 008a 802F      		mov r24,r16
 715               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 716               		.loc 1 351 1 is_stmt 0 view .LVU146
 717 008c 0F90      		pop __tmp_reg__
 718 008e 0F90      		pop __tmp_reg__
 719 0090 0F90      		pop __tmp_reg__
 720 0092 0F90      		pop __tmp_reg__
 721 0094 0F90      		pop __tmp_reg__
 722 0096 DF91      		pop r29
 723 0098 CF91      		pop r28
 724               	.LVL49:
 351:../../tmk_core/common/action.c **** 
 725               		.loc 1 351 1 view .LVU147
 726 009a 1F91      		pop r17
 727               	.LVL50:
 351:../../tmk_core/common/action.c **** 
 728               		.loc 1 351 1 view .LVU148
 729 009c 0F91      		pop r16
 730               	.LVL51:
 351:../../tmk_core/common/action.c **** 
 731               		.loc 1 351 1 view .LVU149
 732 009e FF90      		pop r15
 733               	.LVL52:
 351:../../tmk_core/common/action.c **** 
 734               		.loc 1 351 1 view .LVU150
 735 00a0 EF90      		pop r14
 736               	.LVL53:
 351:../../tmk_core/common/action.c **** 
 737               		.loc 1 351 1 view .LVU151
 738 00a2 DF90      		pop r13
 739               	.LVL54:
 351:../../tmk_core/common/action.c **** 
 740               		.loc 1 351 1 view .LVU152
 741 00a4 CF90      		pop r12
 742               	.LVL55:
 351:../../tmk_core/common/action.c **** 
 743               		.loc 1 351 1 view .LVU153
 744 00a6 BF90      		pop r11
 745               	.LVL56:
 351:../../tmk_core/common/action.c **** 
 746               		.loc 1 351 1 view .LVU154
 747 00a8 AF90      		pop r10
 748               	.LVL57:
 293:../../tmk_core/common/action.c ****                         } else {
 749               		.loc 1 293 29 view .LVU155
 750 00aa 0C94 0000 		jmp register_code
 751               	.LVL58:
 752               	.L59:
 753               	.LBB17:
  90:../../tmk_core/common/action.c ****                     if (mods) {
 754               		.loc 1 90 21 is_stmt 1 view .LVU156
  90:../../tmk_core/common/action.c ****                     if (mods) {
 755               		.loc 1 90 21 is_stmt 0 view .LVU157
 756 00ae 802F      		mov r24,r16
 757 00b0 0E94 0000 		call unregister_code
 758               	.LVL59:
  91:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
 759               		.loc 1 91 21 is_stmt 1 view .LVU158
  91:../../tmk_core/common/action.c ****                         del_weak_mods(mods);
 760               		.loc 1 91 24 is_stmt 0 view .LVU159
 761 00b4 EE20      		tst r14
 762 00b6 01F0      		breq .L54
  92:../../tmk_core/common/action.c ****                         send_keyboard_report();
 763               		.loc 1 92 25 is_stmt 1 view .LVU160
 764 00b8 8E2D      		mov r24,r14
 765 00ba 0E94 0000 		call del_weak_mods
 766               	.LVL60:
  93:../../tmk_core/common/action.c ****                     }
 767               		.loc 1 93 25 view .LVU161
 768               	/* epilogue start */
 769               	.LBE17:
 351:../../tmk_core/common/action.c **** 
 770               		.loc 1 351 1 is_stmt 0 view .LVU162
 771 00be 0F90      		pop __tmp_reg__
 772 00c0 0F90      		pop __tmp_reg__
 773 00c2 0F90      		pop __tmp_reg__
 774 00c4 0F90      		pop __tmp_reg__
 775 00c6 0F90      		pop __tmp_reg__
 776 00c8 DF91      		pop r29
 777 00ca CF91      		pop r28
 778               	.LVL61:
 351:../../tmk_core/common/action.c **** 
 779               		.loc 1 351 1 view .LVU163
 780 00cc 1F91      		pop r17
 781               	.LVL62:
 351:../../tmk_core/common/action.c **** 
 782               		.loc 1 351 1 view .LVU164
 783 00ce 0F91      		pop r16
 784               	.LVL63:
 351:../../tmk_core/common/action.c **** 
 785               		.loc 1 351 1 view .LVU165
 786 00d0 FF90      		pop r15
 787               	.LVL64:
 351:../../tmk_core/common/action.c **** 
 788               		.loc 1 351 1 view .LVU166
 789 00d2 EF90      		pop r14
 790               	.LVL65:
 351:../../tmk_core/common/action.c **** 
 791               		.loc 1 351 1 view .LVU167
 792 00d4 DF90      		pop r13
 793               	.LVL66:
 351:../../tmk_core/common/action.c **** 
 794               		.loc 1 351 1 view .LVU168
 795 00d6 CF90      		pop r12
 796               	.LVL67:
 351:../../tmk_core/common/action.c **** 
 797               		.loc 1 351 1 view .LVU169
 798 00d8 BF90      		pop r11
 799               	.LVL68:
 351:../../tmk_core/common/action.c **** 
 800               		.loc 1 351 1 view .LVU170
 801 00da AF90      		pop r10
 802               	.LVL69:
 803               	.LBB18:
  93:../../tmk_core/common/action.c ****                     }
 804               		.loc 1 93 25 view .LVU171
 805 00dc 0C94 0000 		jmp send_keyboard_report
 806               	.LVL70:
 807               	.L63:
  93:../../tmk_core/common/action.c ****                     }
 808               		.loc 1 93 25 view .LVU172
 809               	.LBE18:
 810               	.LBB19:
 102:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 811               		.loc 1 102 17 is_stmt 1 view .LVU173
 812 00e0 812F      		mov r24,r17
 813 00e2 8F70      		andi r24,lo8(15)
 814 00e4 D82E      		mov r13,r24
 102:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 815               		.loc 1 102 48 is_stmt 0 view .LVU174
 816 00e6 107F      		andi r17,lo8(-16)
 102:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 817               		.loc 1 102 25 view .LVU175
 818 00e8 1032      		cpi r17,lo8(32)
 819 00ea 01F0      		breq .L64
 102:../../tmk_core/common/action.c ****                                                                     action.key.mods<<4;
 820               		.loc 1 102 25 discriminator 2 view .LVU176
 821 00ec D294      		swap r13
 822 00ee 30EF      		ldi r19,lo8(-16)
 823 00f0 D322      		and r13,r19
 824               	.L64:
 825               	.LVL71:
 104:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 826               		.loc 1 104 17 is_stmt 1 discriminator 4 view .LVU177
 104:../../tmk_core/common/action.c ****     #ifndef NO_ACTION_ONESHOT
 827               		.loc 1 104 17 is_stmt 0 discriminator 4 view .LVU178
 828 00f2 0023      		tst r16
 829 00f4 01F0      		breq .L65
 830 00f6 0130      		cpi r16,lo8(1)
 831 00f8 01F4      		brne .+2
 832 00fa 00C0      		rjmp .L66
 153:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 833               		.loc 1 153 25 is_stmt 1 view .LVU179
 153:../../tmk_core/common/action.c ****                             if (tap_count > 0) {
 834               		.loc 1 153 28 is_stmt 0 view .LVU180
 835 00fc FF20      		tst r15
 836 00fe 01F4      		brne .+2
 837 0100 00C0      		rjmp .L75
 154:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 838               		.loc 1 154 29 is_stmt 1 view .LVU181
 154:../../tmk_core/common/action.c ****                                 if (record->tap.interrupted) {
 839               		.loc 1 154 32 is_stmt 0 view .LVU182
 840 0102 EE20      		tst r14
 841 0104 01F0      		breq .L74
 155:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 842               		.loc 1 155 33 is_stmt 1 view .LVU183
 155:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 843               		.loc 1 155 37 is_stmt 0 view .LVU184
 844 0106 F501      		movw r30,r10
 845 0108 8581      		ldd r24,Z+5
 155:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP: Tap: Cancel: add_mods\n");
 846               		.loc 1 155 36 view .LVU185
 847 010a 80FF      		sbrs r24,0
 848 010c 00C0      		rjmp .L153
 156:../../tmk_core/common/action.c ****                                     // ad hoc: set 0 to cancel tap
 849               		.loc 1 156 37 is_stmt 1 view .LVU186
 158:../../tmk_core/common/action.c ****                                     register_mods(mods);
 850               		.loc 1 158 37 view .LVU187
 158:../../tmk_core/common/action.c ****                                     register_mods(mods);
 851               		.loc 1 158 55 is_stmt 0 view .LVU188
 852 010e 8F70      		andi r24,lo8(15)
 853 0110 8583      		std Z+5,r24
 159:../../tmk_core/common/action.c ****                                 } else {
 854               		.loc 1 159 37 is_stmt 1 view .LVU189
 855 0112 00C0      		rjmp .L74
 856               	.L65:
 108:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 857               		.loc 1 108 25 view .LVU190
 108:../../tmk_core/common/action.c ****                             if (tap_count == 0) {
 858               		.loc 1 108 28 is_stmt 0 view .LVU191
 859 0114 FF20      		tst r15
 860 0116 01F0      		breq .L68
 109:../../tmk_core/common/action.c ****                                 register_mods(mods);
 861               		.loc 1 109 29 is_stmt 1 view .LVU192
 109:../../tmk_core/common/action.c ****                                 register_mods(mods);
 862               		.loc 1 109 32 is_stmt 0 view .LVU193
 863 0118 E110      		cpse r14,__zero_reg__
 864 011a 00C0      		rjmp .L69
 865               	.L74:
 141:../../tmk_core/common/action.c ****                                     register_mods(mods);
 866               		.loc 1 141 37 is_stmt 1 view .LVU194
 142:../../tmk_core/common/action.c ****                                 }
 867               		.loc 1 142 37 view .LVU195
 868 011c 8D2D      		mov r24,r13
 869               	.LVL72:
 870               	.L149:
 871               	/* epilogue start */
 142:../../tmk_core/common/action.c ****                                 }
 872               		.loc 1 142 37 is_stmt 0 view .LVU196
 873               	.LBE19:
 351:../../tmk_core/common/action.c **** 
 874               		.loc 1 351 1 view .LVU197
 875 011e 0F90      		pop __tmp_reg__
 876 0120 0F90      		pop __tmp_reg__
 877 0122 0F90      		pop __tmp_reg__
 878 0124 0F90      		pop __tmp_reg__
 879 0126 0F90      		pop __tmp_reg__
 880 0128 DF91      		pop r29
 881 012a CF91      		pop r28
 882               	.LVL73:
 351:../../tmk_core/common/action.c **** 
 883               		.loc 1 351 1 view .LVU198
 884 012c 1F91      		pop r17
 885               	.LVL74:
 351:../../tmk_core/common/action.c **** 
 886               		.loc 1 351 1 view .LVU199
 887 012e 0F91      		pop r16
 888               	.LVL75:
 351:../../tmk_core/common/action.c **** 
 889               		.loc 1 351 1 view .LVU200
 890 0130 FF90      		pop r15
 891               	.LVL76:
 351:../../tmk_core/common/action.c **** 
 892               		.loc 1 351 1 view .LVU201
 893 0132 EF90      		pop r14
 894               	.LVL77:
 351:../../tmk_core/common/action.c **** 
 895               		.loc 1 351 1 view .LVU202
 896 0134 DF90      		pop r13
 897               	.LVL78:
 351:../../tmk_core/common/action.c **** 
 898               		.loc 1 351 1 view .LVU203
 899 0136 CF90      		pop r12
 900               	.LVL79:
 351:../../tmk_core/common/action.c **** 
 901               		.loc 1 351 1 view .LVU204
 902 0138 BF90      		pop r11
 903               	.LVL80:
 351:../../tmk_core/common/action.c **** 
 904               		.loc 1 351 1 view .LVU205
 905 013a AF90      		pop r10
 906               	.LVL81:
 907               	.LBB20:
 142:../../tmk_core/common/action.c ****                                 }
 908               		.loc 1 142 37 view .LVU206
 909 013c 0C94 0000 		jmp register_mods
 910               	.LVL82:
 911               	.L69:
 112:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 912               		.loc 1 112 34 is_stmt 1 view .LVU207
 112:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 913               		.loc 1 112 37 is_stmt 0 view .LVU208
 914 0140 E1E0      		ldi r30,lo8(1)
 114:../../tmk_core/common/action.c ****                             }
 915               		.loc 1 114 33 view .LVU209
 916 0142 8D2D      		mov r24,r13
 112:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Oneshot: start\n");
 917               		.loc 1 112 37 view .LVU210
 918 0144 EE12      		cpse r14,r30
 919 0146 00C0      		rjmp .L149
 113:../../tmk_core/common/action.c ****                                 set_oneshot_mods(mods);
 920               		.loc 1 113 33 is_stmt 1 view .LVU211
 114:../../tmk_core/common/action.c ****                             }
 921               		.loc 1 114 33 view .LVU212
 922               	/* epilogue start */
 923               	.LBE20:
 351:../../tmk_core/common/action.c **** 
 924               		.loc 1 351 1 is_stmt 0 view .LVU213
 925 0148 0F90      		pop __tmp_reg__
 926 014a 0F90      		pop __tmp_reg__
 927 014c 0F90      		pop __tmp_reg__
 928 014e 0F90      		pop __tmp_reg__
 929 0150 0F90      		pop __tmp_reg__
 930 0152 DF91      		pop r29
 931 0154 CF91      		pop r28
 932               	.LVL83:
 351:../../tmk_core/common/action.c **** 
 933               		.loc 1 351 1 view .LVU214
 934 0156 1F91      		pop r17
 935               	.LVL84:
 351:../../tmk_core/common/action.c **** 
 936               		.loc 1 351 1 view .LVU215
 937 0158 0F91      		pop r16
 938               	.LVL85:
 351:../../tmk_core/common/action.c **** 
 939               		.loc 1 351 1 view .LVU216
 940 015a FF90      		pop r15
 941               	.LVL86:
 351:../../tmk_core/common/action.c **** 
 942               		.loc 1 351 1 view .LVU217
 943 015c EF90      		pop r14
 944               	.LVL87:
 351:../../tmk_core/common/action.c **** 
 945               		.loc 1 351 1 view .LVU218
 946 015e DF90      		pop r13
 947               	.LVL88:
 351:../../tmk_core/common/action.c **** 
 948               		.loc 1 351 1 view .LVU219
 949 0160 CF90      		pop r12
 950               	.LVL89:
 351:../../tmk_core/common/action.c **** 
 951               		.loc 1 351 1 view .LVU220
 952 0162 BF90      		pop r11
 953               	.LVL90:
 351:../../tmk_core/common/action.c **** 
 954               		.loc 1 351 1 view .LVU221
 955 0164 AF90      		pop r10
 956               	.LVL91:
 957               	.LBB21:
 114:../../tmk_core/common/action.c ****                             }
 958               		.loc 1 114 33 view .LVU222
 959 0166 0C94 0000 		jmp set_oneshot_mods
 960               	.LVL92:
 961               	.L68:
 120:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 962               		.loc 1 120 29 is_stmt 1 view .LVU223
 120:../../tmk_core/common/action.c ****                                 clear_oneshot_mods();
 963               		.loc 1 120 32 is_stmt 0 view .LVU224
 964 016a E110      		cpse r14,__zero_reg__
 965 016c 00C0      		rjmp .L71
 966               	.L150:
 128:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 967               		.loc 1 128 33 is_stmt 1 view .LVU225
 968 016e 0E94 0000 		call clear_oneshot_mods
 969               	.LVL93:
 129:../../tmk_core/common/action.c ****                             }
 970               		.loc 1 129 33 view .LVU226
 971               	.L78:
 173:../../tmk_core/common/action.c ****                                 unregister_mods(mods);
 972               		.loc 1 173 33 view .LVU227
 174:../../tmk_core/common/action.c ****                             }
 973               		.loc 1 174 33 view .LVU228
 974 0172 8D2D      		mov r24,r13
 975               	.LVL94:
 976               	.L110:
 977               	/* epilogue start */
 174:../../tmk_core/common/action.c ****                             }
 978               		.loc 1 174 33 is_stmt 0 view .LVU229
 979               	.LBE21:
 351:../../tmk_core/common/action.c **** 
 980               		.loc 1 351 1 discriminator 4 view .LVU230
 981 0174 0F90      		pop __tmp_reg__
 982 0176 0F90      		pop __tmp_reg__
 983 0178 0F90      		pop __tmp_reg__
 984 017a 0F90      		pop __tmp_reg__
 985 017c 0F90      		pop __tmp_reg__
 986 017e DF91      		pop r29
 987 0180 CF91      		pop r28
 988               	.LVL95:
 351:../../tmk_core/common/action.c **** 
 989               		.loc 1 351 1 discriminator 4 view .LVU231
 990 0182 1F91      		pop r17
 991               	.LVL96:
 351:../../tmk_core/common/action.c **** 
 992               		.loc 1 351 1 discriminator 4 view .LVU232
 993 0184 0F91      		pop r16
 994               	.LVL97:
 351:../../tmk_core/common/action.c **** 
 995               		.loc 1 351 1 discriminator 4 view .LVU233
 996 0186 FF90      		pop r15
 997               	.LVL98:
 351:../../tmk_core/common/action.c **** 
 998               		.loc 1 351 1 discriminator 4 view .LVU234
 999 0188 EF90      		pop r14
 1000               	.LVL99:
 351:../../tmk_core/common/action.c **** 
 1001               		.loc 1 351 1 discriminator 4 view .LVU235
 1002 018a DF90      		pop r13
 1003               	.LVL100:
 351:../../tmk_core/common/action.c **** 
 1004               		.loc 1 351 1 discriminator 4 view .LVU236
 1005 018c CF90      		pop r12
 1006               	.LVL101:
 351:../../tmk_core/common/action.c **** 
 1007               		.loc 1 351 1 discriminator 4 view .LVU237
 1008 018e BF90      		pop r11
 1009               	.LVL102:
 351:../../tmk_core/common/action.c **** 
 1010               		.loc 1 351 1 discriminator 4 view .LVU238
 1011 0190 AF90      		pop r10
 1012               	.LVL103:
 259:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1013               		.loc 1 259 25 discriminator 4 view .LVU239
 1014 0192 0C94 0000 		jmp unregister_mods
 1015               	.LVL104:
 1016               	.L71:
 1017               	.LBB22:
 124:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 1018               		.loc 1 124 34 is_stmt 1 view .LVU240
 124:../../tmk_core/common/action.c ****                                 // Retain Oneshot mods
 1019               		.loc 1 124 37 is_stmt 0 view .LVU241
 1020 0196 F1E0      		ldi r31,lo8(1)
 1021 0198 EF16      		cp r14,r31
 1022 019a 01F4      		brne .+2
 1023 019c 00C0      		rjmp .L54
 1024 019e 00C0      		rjmp .L150
 1025               	.L66:
 135:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 1026               		.loc 1 135 25 is_stmt 1 view .LVU242
 135:../../tmk_core/common/action.c ****                             if (tap_count <= TAPPING_TOGGLE) {
 1027               		.loc 1 135 28 is_stmt 0 view .LVU243
 1028 01a0 FF20      		tst r15
 1029 01a2 01F0      		breq .L73
 136:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 1030               		.loc 1 136 29 is_stmt 1 view .LVU244
 136:../../tmk_core/common/action.c ****                                 if (mods & get_mods()) {
 1031               		.loc 1 136 32 is_stmt 0 view .LVU245
 1032 01a4 85E0      		ldi r24,lo8(5)
 1033 01a6 8E15      		cp r24,r14
 1034 01a8 00F4      		brsh .+2
 1035 01aa 00C0      		rjmp .L54
 137:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1036               		.loc 1 137 33 is_stmt 1 view .LVU246
 137:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1037               		.loc 1 137 44 is_stmt 0 view .LVU247
 1038 01ac 0E94 0000 		call get_mods
 1039               	.LVL105:
 137:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1040               		.loc 1 137 37 view .LVU248
 1041 01b0 8D21      		and r24,r13
 137:../../tmk_core/common/action.c ****                                     dprint("MODS_TAP_TOGGLE: toggle mods off\n");
 1042               		.loc 1 137 36 view .LVU249
 1043 01b2 01F4      		brne .+2
 1044 01b4 00C0      		rjmp .L74
 1045 01b6 00C0      		rjmp .L78
 1046               	.L73:
 146:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 1047               		.loc 1 146 29 is_stmt 1 view .LVU250
 146:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP_TOGGLE: release : unregister_mods\n");
 1048               		.loc 1 146 32 is_stmt 0 view .LVU251
 1049 01b8 E4E0      		ldi r30,lo8(4)
 1050 01ba EE15      		cp r30,r14
 1051 01bc 00F4      		brsh .+2
 1052 01be 00C0      		rjmp .L54
 1053 01c0 00C0      		rjmp .L78
 1054               	.L75:
 169:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1055               		.loc 1 169 29 is_stmt 1 view .LVU252
 169:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1056               		.loc 1 169 32 is_stmt 0 view .LVU253
 1057 01c2 EE20      		tst r14
 1058 01c4 01F0      		breq .L78
 1059               	.LVL106:
 1060               	.L156:
 169:../../tmk_core/common/action.c ****                                 dprint("MODS_TAP: Tap: unregister_code\n");
 1061               		.loc 1 169 32 view .LVU254
 1062               	.LBE22:
 300:../../tmk_core/common/action.c ****                             unregister_code(action.layer_tap.code);
 1063               		.loc 1 300 29 is_stmt 1 view .LVU255
 301:../../tmk_core/common/action.c ****                         } else {
 1064               		.loc 1 301 29 view .LVU256
 1065 01c6 802F      		mov r24,r16
 1066               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1067               		.loc 1 351 1 is_stmt 0 view .LVU257
 1068 01c8 0F90      		pop __tmp_reg__
 1069 01ca 0F90      		pop __tmp_reg__
 1070 01cc 0F90      		pop __tmp_reg__
 1071 01ce 0F90      		pop __tmp_reg__
 1072 01d0 0F90      		pop __tmp_reg__
 1073 01d2 DF91      		pop r29
 1074 01d4 CF91      		pop r28
 1075               	.LVL107:
 351:../../tmk_core/common/action.c **** 
 1076               		.loc 1 351 1 view .LVU258
 1077 01d6 1F91      		pop r17
 1078               	.LVL108:
 351:../../tmk_core/common/action.c **** 
 1079               		.loc 1 351 1 view .LVU259
 1080 01d8 0F91      		pop r16
 1081               	.LVL109:
 351:../../tmk_core/common/action.c **** 
 1082               		.loc 1 351 1 view .LVU260
 1083 01da FF90      		pop r15
 1084               	.LVL110:
 351:../../tmk_core/common/action.c **** 
 1085               		.loc 1 351 1 view .LVU261
 1086 01dc EF90      		pop r14
 1087               	.LVL111:
 351:../../tmk_core/common/action.c **** 
 1088               		.loc 1 351 1 view .LVU262
 1089 01de DF90      		pop r13
 1090               	.LVL112:
 351:../../tmk_core/common/action.c **** 
 1091               		.loc 1 351 1 view .LVU263
 1092 01e0 CF90      		pop r12
 1093               	.LVL113:
 351:../../tmk_core/common/action.c **** 
 1094               		.loc 1 351 1 view .LVU264
 1095 01e2 BF90      		pop r11
 1096               	.LVL114:
 351:../../tmk_core/common/action.c **** 
 1097               		.loc 1 351 1 view .LVU265
 1098 01e4 AF90      		pop r10
 1099               	.LVL115:
 301:../../tmk_core/common/action.c ****                         } else {
 1100               		.loc 1 301 29 view .LVU266
 1101 01e6 0C94 0000 		jmp unregister_code
 1102               	.LVL116:
 1103               	.L79:
 185:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 1104               		.loc 1 185 13 is_stmt 1 view .LVU267
 185:../../tmk_core/common/action.c ****                 case PAGE_SYSTEM:
 1105               		.loc 1 185 33 is_stmt 0 view .LVU268
 1106 01ea 812F      		mov r24,r17
 1107 01ec 8695      		lsr r24
 1108 01ee 8695      		lsr r24
 1109 01f0 8370      		andi r24,lo8(3)
 1110 01f2 01F0      		breq .L80
 1111 01f4 8130      		cpi r24,lo8(1)
 1112 01f6 01F0      		breq .+2
 1113 01f8 00C0      		rjmp .L54
 194:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 1114               		.loc 1 194 21 is_stmt 1 view .LVU269
 195:../../tmk_core/common/action.c ****                     } else {
 1115               		.loc 1 195 25 is_stmt 0 view .LVU270
 1116 01fa C801      		movw r24,r16
 1117 01fc 9370      		andi r25,lo8(3)
 194:../../tmk_core/common/action.c ****                         host_consumer_send(action.usage.code);
 1118               		.loc 1 194 24 view .LVU271
 1119 01fe F110      		cpse r15,__zero_reg__
 1120 0200 00C0      		rjmp .L159
 197:../../tmk_core/common/action.c ****                     }
 1121               		.loc 1 197 25 is_stmt 1 view .LVU272
 1122 0202 90E0      		ldi r25,0
 1123 0204 80E0      		ldi r24,0
 1124               	.L159:
 1125               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1126               		.loc 1 351 1 is_stmt 0 view .LVU273
 1127 0206 0F90      		pop __tmp_reg__
 1128 0208 0F90      		pop __tmp_reg__
 1129 020a 0F90      		pop __tmp_reg__
 1130 020c 0F90      		pop __tmp_reg__
 1131 020e 0F90      		pop __tmp_reg__
 1132 0210 DF91      		pop r29
 1133 0212 CF91      		pop r28
 1134               	.LVL117:
 351:../../tmk_core/common/action.c **** 
 1135               		.loc 1 351 1 view .LVU274
 1136 0214 1F91      		pop r17
 1137               	.LVL118:
 351:../../tmk_core/common/action.c **** 
 1138               		.loc 1 351 1 view .LVU275
 1139 0216 0F91      		pop r16
 1140               	.LVL119:
 351:../../tmk_core/common/action.c **** 
 1141               		.loc 1 351 1 view .LVU276
 1142 0218 FF90      		pop r15
 1143               	.LVL120:
 351:../../tmk_core/common/action.c **** 
 1144               		.loc 1 351 1 view .LVU277
 1145 021a EF90      		pop r14
 1146               	.LVL121:
 351:../../tmk_core/common/action.c **** 
 1147               		.loc 1 351 1 view .LVU278
 1148 021c DF90      		pop r13
 1149               	.LVL122:
 351:../../tmk_core/common/action.c **** 
 1150               		.loc 1 351 1 view .LVU279
 1151 021e CF90      		pop r12
 1152               	.LVL123:
 351:../../tmk_core/common/action.c **** 
 1153               		.loc 1 351 1 view .LVU280
 1154 0220 BF90      		pop r11
 1155               	.LVL124:
 351:../../tmk_core/common/action.c **** 
 1156               		.loc 1 351 1 view .LVU281
 1157 0222 AF90      		pop r10
 1158               	.LVL125:
 197:../../tmk_core/common/action.c ****                     }
 1159               		.loc 1 197 25 view .LVU282
 1160 0224 0C94 0000 		jmp host_consumer_send
 1161               	.LVL126:
 1162               	.L80:
 187:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 1163               		.loc 1 187 21 is_stmt 1 view .LVU283
 188:../../tmk_core/common/action.c ****                     } else {
 1164               		.loc 1 188 25 is_stmt 0 view .LVU284
 1165 0228 C801      		movw r24,r16
 1166 022a 9370      		andi r25,lo8(3)
 187:../../tmk_core/common/action.c ****                         host_system_send(action.usage.code);
 1167               		.loc 1 187 24 view .LVU285
 1168 022c F110      		cpse r15,__zero_reg__
 1169 022e 00C0      		rjmp .L157
 190:../../tmk_core/common/action.c ****                     }
 1170               		.loc 1 190 25 is_stmt 1 view .LVU286
 1171 0230 90E0      		ldi r25,0
 1172 0232 80E0      		ldi r24,0
 1173               	.L157:
 1174               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1175               		.loc 1 351 1 is_stmt 0 view .LVU287
 1176 0234 0F90      		pop __tmp_reg__
 1177 0236 0F90      		pop __tmp_reg__
 1178 0238 0F90      		pop __tmp_reg__
 1179 023a 0F90      		pop __tmp_reg__
 1180 023c 0F90      		pop __tmp_reg__
 1181 023e DF91      		pop r29
 1182 0240 CF91      		pop r28
 1183               	.LVL127:
 351:../../tmk_core/common/action.c **** 
 1184               		.loc 1 351 1 view .LVU288
 1185 0242 1F91      		pop r17
 1186               	.LVL128:
 351:../../tmk_core/common/action.c **** 
 1187               		.loc 1 351 1 view .LVU289
 1188 0244 0F91      		pop r16
 1189               	.LVL129:
 351:../../tmk_core/common/action.c **** 
 1190               		.loc 1 351 1 view .LVU290
 1191 0246 FF90      		pop r15
 1192               	.LVL130:
 351:../../tmk_core/common/action.c **** 
 1193               		.loc 1 351 1 view .LVU291
 1194 0248 EF90      		pop r14
 1195               	.LVL131:
 351:../../tmk_core/common/action.c **** 
 1196               		.loc 1 351 1 view .LVU292
 1197 024a DF90      		pop r13
 1198               	.LVL132:
 351:../../tmk_core/common/action.c **** 
 1199               		.loc 1 351 1 view .LVU293
 1200 024c CF90      		pop r12
 1201               	.LVL133:
 351:../../tmk_core/common/action.c **** 
 1202               		.loc 1 351 1 view .LVU294
 1203 024e BF90      		pop r11
 1204               	.LVL134:
 351:../../tmk_core/common/action.c **** 
 1205               		.loc 1 351 1 view .LVU295
 1206 0250 AF90      		pop r10
 1207               	.LVL135:
 190:../../tmk_core/common/action.c ****                     }
 1208               		.loc 1 190 25 view .LVU296
 1209 0252 0C94 0000 		jmp host_system_send
 1210               	.LVL136:
 1211               	.L84:
 206:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 1212               		.loc 1 206 13 is_stmt 1 view .LVU297
 207:../../tmk_core/common/action.c ****                 mousekey_send();
 1213               		.loc 1 207 17 is_stmt 0 view .LVU298
 1214 0256 802F      		mov r24,r16
 206:../../tmk_core/common/action.c ****                 mousekey_on(action.key.code);
 1215               		.loc 1 206 16 view .LVU299
 1216 0258 FF20      		tst r15
 1217 025a 01F0      		breq .L85
 207:../../tmk_core/common/action.c ****                 mousekey_send();
 1218               		.loc 1 207 17 is_stmt 1 view .LVU300
 1219 025c 0E94 0000 		call mousekey_on
 1220               	.LVL137:
 208:../../tmk_core/common/action.c ****             } else {
 1221               		.loc 1 208 17 view .LVU301
 1222               	.L160:
 211:../../tmk_core/common/action.c ****             }
 1223               		.loc 1 211 17 view .LVU302
 1224               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1225               		.loc 1 351 1 is_stmt 0 view .LVU303
 1226 0260 0F90      		pop __tmp_reg__
 1227 0262 0F90      		pop __tmp_reg__
 1228 0264 0F90      		pop __tmp_reg__
 1229 0266 0F90      		pop __tmp_reg__
 1230 0268 0F90      		pop __tmp_reg__
 1231 026a DF91      		pop r29
 1232 026c CF91      		pop r28
 1233               	.LVL138:
 351:../../tmk_core/common/action.c **** 
 1234               		.loc 1 351 1 view .LVU304
 1235 026e 1F91      		pop r17
 1236               	.LVL139:
 351:../../tmk_core/common/action.c **** 
 1237               		.loc 1 351 1 view .LVU305
 1238 0270 0F91      		pop r16
 1239               	.LVL140:
 351:../../tmk_core/common/action.c **** 
 1240               		.loc 1 351 1 view .LVU306
 1241 0272 FF90      		pop r15
 1242               	.LVL141:
 351:../../tmk_core/common/action.c **** 
 1243               		.loc 1 351 1 view .LVU307
 1244 0274 EF90      		pop r14
 1245               	.LVL142:
 351:../../tmk_core/common/action.c **** 
 1246               		.loc 1 351 1 view .LVU308
 1247 0276 DF90      		pop r13
 1248               	.LVL143:
 351:../../tmk_core/common/action.c **** 
 1249               		.loc 1 351 1 view .LVU309
 1250 0278 CF90      		pop r12
 1251               	.LVL144:
 351:../../tmk_core/common/action.c **** 
 1252               		.loc 1 351 1 view .LVU310
 1253 027a BF90      		pop r11
 1254               	.LVL145:
 351:../../tmk_core/common/action.c **** 
 1255               		.loc 1 351 1 view .LVU311
 1256 027c AF90      		pop r10
 1257               	.LVL146:
 211:../../tmk_core/common/action.c ****             }
 1258               		.loc 1 211 17 view .LVU312
 1259 027e 0C94 0000 		jmp mousekey_send
 1260               	.LVL147:
 1261               	.L85:
 210:../../tmk_core/common/action.c ****                 mousekey_send();
 1262               		.loc 1 210 17 is_stmt 1 view .LVU313
 1263 0282 0E94 0000 		call mousekey_off
 1264               	.LVL148:
 1265 0286 00C0      		rjmp .L160
 1266               	.LVL149:
 1267               	.L86:
 217:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1268               		.loc 1 217 13 view .LVU314
 217:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1269               		.loc 1 217 39 is_stmt 0 view .LVU315
 1270 0288 812F      		mov r24,r17
 1271 028a 8370      		andi r24,lo8(3)
 217:../../tmk_core/common/action.c ****                 /* Default Layer Bitwise Operation */
 1272               		.loc 1 217 16 view .LVU316
 1273 028c 01F0      		breq .+2
 1274 028e 00C0      		rjmp .L87
 219:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 1275               		.loc 1 219 17 is_stmt 1 view .LVU317
 219:../../tmk_core/common/action.c ****                     uint8_t shift = action.layer_bitop.part*4;
 1276               		.loc 1 219 20 is_stmt 0 view .LVU318
 1277 0290 F110      		cpse r15,__zero_reg__
 1278 0292 00C0      		rjmp .L54
 1279               	.LBB23:
 220:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1280               		.loc 1 220 21 is_stmt 1 view .LVU319
 1281               	.LVL150:
 221:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1282               		.loc 1 221 21 view .LVU320
 220:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1283               		.loc 1 220 55 is_stmt 0 view .LVU321
 1284 0294 202F      		mov r18,r16
 1285 0296 2295      		swap r18
 1286 0298 2695      		lsr r18
 1287 029a 2770      		andi r18,lo8(7)
 220:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1288               		.loc 1 220 29 view .LVU322
 1289 029c 220F      		lsl r18
 1290 029e 220F      		lsl r18
 221:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1291               		.loc 1 221 66 view .LVU323
 1292 02a0 602F      		mov r22,r16
 1293 02a2 6F70      		andi r22,lo8(15)
 221:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1294               		.loc 1 221 38 view .LVU324
 1295 02a4 C62E      		mov r12,r22
 1296 02a6 D12C      		mov r13,__zero_reg__
 1297 02a8 F12C      		mov r15,__zero_reg__
 1298 02aa E12C      		mov r14,__zero_reg__
 221:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1299               		.loc 1 221 30 view .LVU325
 1300 02ac 022E      		mov r0,r18
 1301 02ae 00C0      		rjmp 2f
 1302               		1:
 1303 02b0 CC0C      		lsl r12
 1304 02b2 DD1C      		rol r13
 1305 02b4 EE1C      		rol r14
 1306 02b6 FF1C      		rol r15
 1307               		2:
 1308 02b8 0A94      		dec r0
 1309 02ba 02F4      		brpl 1b
 1310               	.LVL151:
 222:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1311               		.loc 1 222 21 is_stmt 1 view .LVU326
 222:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1312               		.loc 1 222 91 is_stmt 0 view .LVU327
 1313 02bc 60E0      		ldi r22,0
 1314 02be 70E0      		ldi r23,0
 1315 02c0 CB01      		movw r24,r22
 1316 02c2 04FF      		sbrs r16,4
 1317 02c4 00C0      		rjmp .L88
 222:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1318               		.loc 1 222 82 discriminator 1 view .LVU328
 1319 02c6 6FE0      		ldi r22,lo8(15)
 1320 02c8 70E0      		ldi r23,0
 1321 02ca 80E0      		ldi r24,0
 1322 02cc 90E0      		ldi r25,0
 1323 02ce 00C0      		rjmp 2f
 1324               		1:
 1325 02d0 660F      		lsl r22
 1326 02d2 771F      		rol r23
 1327 02d4 881F      		rol r24
 1328 02d6 991F      		rol r25
 1329               		2:
 1330 02d8 2A95      		dec r18
 1331 02da 02F4      		brpl 1b
 222:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1332               		.loc 1 222 91 discriminator 1 view .LVU329
 1333 02dc 6095      		com r22
 1334 02de 7095      		com r23
 1335 02e0 8095      		com r24
 1336 02e2 9095      		com r25
 1337               	.L88:
 1338               	.LVL152:
 223:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1339               		.loc 1 223 21 is_stmt 1 discriminator 4 view .LVU330
 223:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1340               		.loc 1 223 47 is_stmt 0 discriminator 4 view .LVU331
 1341 02e4 1695      		lsr r17
 1342 02e6 1695      		lsr r17
 1343               	.LVL153:
 223:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1344               		.loc 1 223 47 discriminator 4 view .LVU332
 1345 02e8 1370      		andi r17,lo8(3)
 1346 02ea 1230      		cpi r17,lo8(2)
 1347 02ec 01F0      		breq .L89
 1348 02ee 00F4      		brsh .L90
 1349 02f0 6C29      		or r22,r12
 1350               	.LVL154:
 223:../../tmk_core/common/action.c ****                         case OP_BIT_AND: default_layer_and(bits | mask); break;
 1351               		.loc 1 223 47 discriminator 4 view .LVU333
 1352 02f2 7D29      		or r23,r13
 1353 02f4 8E29      		or r24,r14
 1354 02f6 9F29      		or r25,r15
 1355 02f8 1130      		cpi r17,lo8(1)
 1356 02fa 01F0      		breq .L161
 224:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1357               		.loc 1 224 42 is_stmt 1 view .LVU334
 1358               	/* epilogue start */
 1359               	.LBE23:
 351:../../tmk_core/common/action.c **** 
 1360               		.loc 1 351 1 is_stmt 0 view .LVU335
 1361 02fc 0F90      		pop __tmp_reg__
 1362 02fe 0F90      		pop __tmp_reg__
 1363 0300 0F90      		pop __tmp_reg__
 1364 0302 0F90      		pop __tmp_reg__
 1365 0304 0F90      		pop __tmp_reg__
 1366 0306 DF91      		pop r29
 1367 0308 CF91      		pop r28
 1368               	.LVL155:
 351:../../tmk_core/common/action.c **** 
 1369               		.loc 1 351 1 view .LVU336
 1370 030a 1F91      		pop r17
 1371               	.LVL156:
 351:../../tmk_core/common/action.c **** 
 1372               		.loc 1 351 1 view .LVU337
 1373 030c 0F91      		pop r16
 1374               	.LVL157:
 351:../../tmk_core/common/action.c **** 
 1375               		.loc 1 351 1 view .LVU338
 1376 030e FF90      		pop r15
 1377               	.LVL158:
 351:../../tmk_core/common/action.c **** 
 1378               		.loc 1 351 1 view .LVU339
 1379 0310 EF90      		pop r14
 1380               	.LVL159:
 351:../../tmk_core/common/action.c **** 
 1381               		.loc 1 351 1 view .LVU340
 1382 0312 DF90      		pop r13
 1383               	.LVL160:
 351:../../tmk_core/common/action.c **** 
 1384               		.loc 1 351 1 view .LVU341
 1385 0314 CF90      		pop r12
 1386               	.LVL161:
 351:../../tmk_core/common/action.c **** 
 1387               		.loc 1 351 1 view .LVU342
 1388 0316 BF90      		pop r11
 1389               	.LVL162:
 351:../../tmk_core/common/action.c **** 
 1390               		.loc 1 351 1 view .LVU343
 1391 0318 AF90      		pop r10
 1392               	.LVL163:
 1393               	.LBB24:
 224:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  default_layer_or(bits | mask);  break;
 1394               		.loc 1 224 42 view .LVU344
 1395 031a 0C94 0000 		jmp default_layer_and
 1396               	.LVL164:
 1397               	.L89:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1398               		.loc 1 226 42 is_stmt 1 view .LVU345
 1399 031e 6C29      		or r22,r12
 1400               	.LVL165:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1401               		.loc 1 226 42 is_stmt 0 view .LVU346
 1402 0320 7D29      		or r23,r13
 1403 0322 8E29      		or r24,r14
 1404 0324 9F29      		or r25,r15
 1405               	/* epilogue start */
 1406               	.LBE24:
 351:../../tmk_core/common/action.c **** 
 1407               		.loc 1 351 1 view .LVU347
 1408 0326 0F90      		pop __tmp_reg__
 1409 0328 0F90      		pop __tmp_reg__
 1410 032a 0F90      		pop __tmp_reg__
 1411 032c 0F90      		pop __tmp_reg__
 1412 032e 0F90      		pop __tmp_reg__
 1413 0330 DF91      		pop r29
 1414 0332 CF91      		pop r28
 1415               	.LVL166:
 351:../../tmk_core/common/action.c **** 
 1416               		.loc 1 351 1 view .LVU348
 1417 0334 1F91      		pop r17
 1418               	.LVL167:
 351:../../tmk_core/common/action.c **** 
 1419               		.loc 1 351 1 view .LVU349
 1420 0336 0F91      		pop r16
 1421               	.LVL168:
 351:../../tmk_core/common/action.c **** 
 1422               		.loc 1 351 1 view .LVU350
 1423 0338 FF90      		pop r15
 1424               	.LVL169:
 351:../../tmk_core/common/action.c **** 
 1425               		.loc 1 351 1 view .LVU351
 1426 033a EF90      		pop r14
 1427               	.LVL170:
 351:../../tmk_core/common/action.c **** 
 1428               		.loc 1 351 1 view .LVU352
 1429 033c DF90      		pop r13
 1430               	.LVL171:
 351:../../tmk_core/common/action.c **** 
 1431               		.loc 1 351 1 view .LVU353
 1432 033e CF90      		pop r12
 1433               	.LVL172:
 351:../../tmk_core/common/action.c **** 
 1434               		.loc 1 351 1 view .LVU354
 1435 0340 BF90      		pop r11
 1436               	.LVL173:
 351:../../tmk_core/common/action.c **** 
 1437               		.loc 1 351 1 view .LVU355
 1438 0342 AF90      		pop r10
 1439               	.LVL174:
 1440               	.LBB25:
 226:../../tmk_core/common/action.c ****                         case OP_BIT_SET: default_layer_and(mask); default_layer_or(bits); break;
 1441               		.loc 1 226 42 view .LVU356
 1442 0344 0C94 0000 		jmp default_layer_xor
 1443               	.LVL175:
 1444               	.L90:
 227:../../tmk_core/common/action.c ****                     }
 1445               		.loc 1 227 42 is_stmt 1 view .LVU357
 1446 0348 0E94 0000 		call default_layer_and
 1447               	.LVL176:
 227:../../tmk_core/common/action.c ****                     }
 1448               		.loc 1 227 67 view .LVU358
 1449 034c C701      		movw r24,r14
 1450 034e B601      		movw r22,r12
 1451               	.L161:
 1452               	/* epilogue start */
 1453               	.LBE25:
 351:../../tmk_core/common/action.c **** 
 1454               		.loc 1 351 1 is_stmt 0 view .LVU359
 1455 0350 0F90      		pop __tmp_reg__
 1456 0352 0F90      		pop __tmp_reg__
 1457 0354 0F90      		pop __tmp_reg__
 1458 0356 0F90      		pop __tmp_reg__
 1459 0358 0F90      		pop __tmp_reg__
 1460 035a DF91      		pop r29
 1461 035c CF91      		pop r28
 1462               	.LVL177:
 351:../../tmk_core/common/action.c **** 
 1463               		.loc 1 351 1 view .LVU360
 1464 035e 1F91      		pop r17
 1465               	.LVL178:
 351:../../tmk_core/common/action.c **** 
 1466               		.loc 1 351 1 view .LVU361
 1467 0360 0F91      		pop r16
 1468               	.LVL179:
 351:../../tmk_core/common/action.c **** 
 1469               		.loc 1 351 1 view .LVU362
 1470 0362 FF90      		pop r15
 1471               	.LVL180:
 351:../../tmk_core/common/action.c **** 
 1472               		.loc 1 351 1 view .LVU363
 1473 0364 EF90      		pop r14
 1474               	.LVL181:
 351:../../tmk_core/common/action.c **** 
 1475               		.loc 1 351 1 view .LVU364
 1476 0366 DF90      		pop r13
 1477               	.LVL182:
 351:../../tmk_core/common/action.c **** 
 1478               		.loc 1 351 1 view .LVU365
 1479 0368 CF90      		pop r12
 1480               	.LVL183:
 351:../../tmk_core/common/action.c **** 
 1481               		.loc 1 351 1 view .LVU366
 1482 036a BF90      		pop r11
 1483               	.LVL184:
 351:../../tmk_core/common/action.c **** 
 1484               		.loc 1 351 1 view .LVU367
 1485 036c AF90      		pop r10
 1486               	.LVL185:
 1487               	.LBB26:
 227:../../tmk_core/common/action.c ****                     }
 1488               		.loc 1 227 67 view .LVU368
 1489 036e 0C94 0000 		jmp default_layer_or
 1490               	.LVL186:
 1491               	.L87:
 227:../../tmk_core/common/action.c ****                     }
 1492               		.loc 1 227 67 view .LVU369
 1493               	.LBE26:
 232:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1494               		.loc 1 232 17 is_stmt 1 view .LVU370
 232:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1495               		.loc 1 232 21 is_stmt 0 view .LVU371
 1496 0372 8695      		lsr r24
 1497 0374 FF20      		tst r15
 1498 0376 01F0      		breq .L93
 232:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1499               		.loc 1 232 21 discriminator 1 view .LVU372
 1500 0378 812F      		mov r24,r17
 1501 037a 8170      		andi r24,lo8(1)
 1502               	.L93:
 232:../../tmk_core/common/action.c ****                                     (action.layer_bitop.on & ON_RELEASE)) {
 1503               		.loc 1 232 20 discriminator 4 view .LVU373
 1504 037c 8823      		tst r24
 1505 037e 01F4      		brne .+2
 1506 0380 00C0      		rjmp .L54
 1507               	.LBB27:
 234:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1508               		.loc 1 234 21 is_stmt 1 view .LVU374
 1509               	.LVL187:
 235:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1510               		.loc 1 235 21 view .LVU375
 234:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1511               		.loc 1 234 55 is_stmt 0 view .LVU376
 1512 0382 202F      		mov r18,r16
 1513 0384 2295      		swap r18
 1514 0386 2695      		lsr r18
 1515 0388 2770      		andi r18,lo8(7)
 234:../../tmk_core/common/action.c ****                     uint32_t bits = ((uint32_t)action.layer_bitop.bits)<<shift;
 1516               		.loc 1 234 29 view .LVU377
 1517 038a 220F      		lsl r18
 1518 038c 220F      		lsl r18
 235:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1519               		.loc 1 235 66 view .LVU378
 1520 038e 602F      		mov r22,r16
 1521 0390 6F70      		andi r22,lo8(15)
 235:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1522               		.loc 1 235 38 view .LVU379
 1523 0392 C62E      		mov r12,r22
 1524 0394 D12C      		mov r13,__zero_reg__
 1525 0396 F12C      		mov r15,__zero_reg__
 1526 0398 E12C      		mov r14,__zero_reg__
 235:../../tmk_core/common/action.c ****                     uint32_t mask = (action.layer_bitop.xbit) ? ~(((uint32_t)0xf)<<shift) : 0;
 1527               		.loc 1 235 30 view .LVU380
 1528 039a 022E      		mov r0,r18
 1529 039c 00C0      		rjmp 2f
 1530               		1:
 1531 039e CC0C      		lsl r12
 1532 03a0 DD1C      		rol r13
 1533 03a2 EE1C      		rol r14
 1534 03a4 FF1C      		rol r15
 1535               		2:
 1536 03a6 0A94      		dec r0
 1537 03a8 02F4      		brpl 1b
 1538               	.LVL188:
 236:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1539               		.loc 1 236 21 is_stmt 1 view .LVU381
 236:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1540               		.loc 1 236 91 is_stmt 0 view .LVU382
 1541 03aa 60E0      		ldi r22,0
 1542 03ac 70E0      		ldi r23,0
 1543 03ae CB01      		movw r24,r22
 1544 03b0 04FF      		sbrs r16,4
 1545 03b2 00C0      		rjmp .L94
 236:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1546               		.loc 1 236 82 discriminator 1 view .LVU383
 1547 03b4 6FE0      		ldi r22,lo8(15)
 1548 03b6 70E0      		ldi r23,0
 1549 03b8 80E0      		ldi r24,0
 1550 03ba 90E0      		ldi r25,0
 1551 03bc 00C0      		rjmp 2f
 1552               		1:
 1553 03be 660F      		lsl r22
 1554 03c0 771F      		rol r23
 1555 03c2 881F      		rol r24
 1556 03c4 991F      		rol r25
 1557               		2:
 1558 03c6 2A95      		dec r18
 1559 03c8 02F4      		brpl 1b
 236:../../tmk_core/common/action.c ****                     switch (action.layer_bitop.op) {
 1560               		.loc 1 236 91 discriminator 1 view .LVU384
 1561 03ca 6095      		com r22
 1562 03cc 7095      		com r23
 1563 03ce 8095      		com r24
 1564 03d0 9095      		com r25
 1565               	.L94:
 1566               	.LVL189:
 237:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1567               		.loc 1 237 21 is_stmt 1 discriminator 4 view .LVU385
 237:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1568               		.loc 1 237 47 is_stmt 0 discriminator 4 view .LVU386
 1569 03d2 1695      		lsr r17
 1570 03d4 1695      		lsr r17
 1571               	.LVL190:
 237:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1572               		.loc 1 237 47 discriminator 4 view .LVU387
 1573 03d6 1370      		andi r17,lo8(3)
 1574 03d8 1230      		cpi r17,lo8(2)
 1575 03da 01F0      		breq .L95
 1576 03dc 00F4      		brsh .L96
 1577 03de 6C29      		or r22,r12
 1578               	.LVL191:
 237:../../tmk_core/common/action.c ****                         case OP_BIT_AND: layer_and(bits | mask); break;
 1579               		.loc 1 237 47 discriminator 4 view .LVU388
 1580 03e0 7D29      		or r23,r13
 1581 03e2 8E29      		or r24,r14
 1582 03e4 9F29      		or r25,r15
 1583 03e6 1130      		cpi r17,lo8(1)
 1584 03e8 01F0      		breq .L158
 238:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1585               		.loc 1 238 42 is_stmt 1 view .LVU389
 1586               	/* epilogue start */
 1587               	.LBE27:
 351:../../tmk_core/common/action.c **** 
 1588               		.loc 1 351 1 is_stmt 0 view .LVU390
 1589 03ea 0F90      		pop __tmp_reg__
 1590 03ec 0F90      		pop __tmp_reg__
 1591 03ee 0F90      		pop __tmp_reg__
 1592 03f0 0F90      		pop __tmp_reg__
 1593 03f2 0F90      		pop __tmp_reg__
 1594 03f4 DF91      		pop r29
 1595 03f6 CF91      		pop r28
 1596               	.LVL192:
 351:../../tmk_core/common/action.c **** 
 1597               		.loc 1 351 1 view .LVU391
 1598 03f8 1F91      		pop r17
 1599               	.LVL193:
 351:../../tmk_core/common/action.c **** 
 1600               		.loc 1 351 1 view .LVU392
 1601 03fa 0F91      		pop r16
 1602               	.LVL194:
 351:../../tmk_core/common/action.c **** 
 1603               		.loc 1 351 1 view .LVU393
 1604 03fc FF90      		pop r15
 1605               	.LVL195:
 351:../../tmk_core/common/action.c **** 
 1606               		.loc 1 351 1 view .LVU394
 1607 03fe EF90      		pop r14
 1608               	.LVL196:
 351:../../tmk_core/common/action.c **** 
 1609               		.loc 1 351 1 view .LVU395
 1610 0400 DF90      		pop r13
 1611               	.LVL197:
 351:../../tmk_core/common/action.c **** 
 1612               		.loc 1 351 1 view .LVU396
 1613 0402 CF90      		pop r12
 1614               	.LVL198:
 351:../../tmk_core/common/action.c **** 
 1615               		.loc 1 351 1 view .LVU397
 1616 0404 BF90      		pop r11
 1617               	.LVL199:
 351:../../tmk_core/common/action.c **** 
 1618               		.loc 1 351 1 view .LVU398
 1619 0406 AF90      		pop r10
 1620               	.LVL200:
 1621               	.LBB28:
 238:../../tmk_core/common/action.c ****                         case OP_BIT_OR:  layer_or(bits | mask);  break;
 1622               		.loc 1 238 42 view .LVU399
 1623 0408 0C94 0000 		jmp layer_and
 1624               	.LVL201:
 1625               	.L95:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1626               		.loc 1 240 42 is_stmt 1 view .LVU400
 1627 040c 6C29      		or r22,r12
 1628               	.LVL202:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1629               		.loc 1 240 42 is_stmt 0 view .LVU401
 1630 040e 7D29      		or r23,r13
 1631 0410 8E29      		or r24,r14
 1632 0412 9F29      		or r25,r15
 1633               	/* epilogue start */
 1634               	.LBE28:
 351:../../tmk_core/common/action.c **** 
 1635               		.loc 1 351 1 view .LVU402
 1636 0414 0F90      		pop __tmp_reg__
 1637 0416 0F90      		pop __tmp_reg__
 1638 0418 0F90      		pop __tmp_reg__
 1639 041a 0F90      		pop __tmp_reg__
 1640 041c 0F90      		pop __tmp_reg__
 1641 041e DF91      		pop r29
 1642 0420 CF91      		pop r28
 1643               	.LVL203:
 351:../../tmk_core/common/action.c **** 
 1644               		.loc 1 351 1 view .LVU403
 1645 0422 1F91      		pop r17
 1646               	.LVL204:
 351:../../tmk_core/common/action.c **** 
 1647               		.loc 1 351 1 view .LVU404
 1648 0424 0F91      		pop r16
 1649               	.LVL205:
 351:../../tmk_core/common/action.c **** 
 1650               		.loc 1 351 1 view .LVU405
 1651 0426 FF90      		pop r15
 1652               	.LVL206:
 351:../../tmk_core/common/action.c **** 
 1653               		.loc 1 351 1 view .LVU406
 1654 0428 EF90      		pop r14
 1655               	.LVL207:
 351:../../tmk_core/common/action.c **** 
 1656               		.loc 1 351 1 view .LVU407
 1657 042a DF90      		pop r13
 1658               	.LVL208:
 351:../../tmk_core/common/action.c **** 
 1659               		.loc 1 351 1 view .LVU408
 1660 042c CF90      		pop r12
 1661               	.LVL209:
 351:../../tmk_core/common/action.c **** 
 1662               		.loc 1 351 1 view .LVU409
 1663 042e BF90      		pop r11
 1664               	.LVL210:
 351:../../tmk_core/common/action.c **** 
 1665               		.loc 1 351 1 view .LVU410
 1666 0430 AF90      		pop r10
 1667               	.LVL211:
 1668               	.LBB29:
 240:../../tmk_core/common/action.c ****                         case OP_BIT_SET: layer_and(mask); layer_or(bits); break;
 1669               		.loc 1 240 42 view .LVU411
 1670 0432 0C94 0000 		jmp layer_xor
 1671               	.LVL212:
 1672               	.L96:
 241:../../tmk_core/common/action.c ****                     }
 1673               		.loc 1 241 42 is_stmt 1 view .LVU412
 1674 0436 0E94 0000 		call layer_and
 1675               	.LVL213:
 241:../../tmk_core/common/action.c ****                     }
 1676               		.loc 1 241 59 view .LVU413
 1677 043a C701      		movw r24,r14
 1678 043c B601      		movw r22,r12
 1679               	.L158:
 1680               	/* epilogue start */
 1681               	.LBE29:
 351:../../tmk_core/common/action.c **** 
 1682               		.loc 1 351 1 is_stmt 0 view .LVU414
 1683 043e 0F90      		pop __tmp_reg__
 1684 0440 0F90      		pop __tmp_reg__
 1685 0442 0F90      		pop __tmp_reg__
 1686 0444 0F90      		pop __tmp_reg__
 1687 0446 0F90      		pop __tmp_reg__
 1688 0448 DF91      		pop r29
 1689 044a CF91      		pop r28
 1690               	.LVL214:
 351:../../tmk_core/common/action.c **** 
 1691               		.loc 1 351 1 view .LVU415
 1692 044c 1F91      		pop r17
 1693               	.LVL215:
 351:../../tmk_core/common/action.c **** 
 1694               		.loc 1 351 1 view .LVU416
 1695 044e 0F91      		pop r16
 1696               	.LVL216:
 351:../../tmk_core/common/action.c **** 
 1697               		.loc 1 351 1 view .LVU417
 1698 0450 FF90      		pop r15
 1699               	.LVL217:
 351:../../tmk_core/common/action.c **** 
 1700               		.loc 1 351 1 view .LVU418
 1701 0452 EF90      		pop r14
 1702               	.LVL218:
 351:../../tmk_core/common/action.c **** 
 1703               		.loc 1 351 1 view .LVU419
 1704 0454 DF90      		pop r13
 1705               	.LVL219:
 351:../../tmk_core/common/action.c **** 
 1706               		.loc 1 351 1 view .LVU420
 1707 0456 CF90      		pop r12
 1708               	.LVL220:
 351:../../tmk_core/common/action.c **** 
 1709               		.loc 1 351 1 view .LVU421
 1710 0458 BF90      		pop r11
 1711               	.LVL221:
 351:../../tmk_core/common/action.c **** 
 1712               		.loc 1 351 1 view .LVU422
 1713 045a AF90      		pop r10
 1714               	.LVL222:
 1715               	.LBB30:
 241:../../tmk_core/common/action.c ****                     }
 1716               		.loc 1 241 59 view .LVU423
 1717 045c 0C94 0000 		jmp layer_or
 1718               	.LVL223:
 1719               	.L98:
 241:../../tmk_core/common/action.c ****                     }
 1720               		.loc 1 241 59 view .LVU424
 1721               	.LBE30:
 249:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 1722               		.loc 1 249 13 is_stmt 1 view .LVU425
 249:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:
 1723               		.loc 1 249 13 is_stmt 0 view .LVU426
 1724 0460 003F      		cpi r16,lo8(-16)
 1725 0462 01F4      		brne .+2
 1726 0464 00C0      		rjmp .L99
 1727 0466 00F4      		brsh .L100
 1728 0468 80E4      		ldi r24,lo8(64)
 1729 046a 800F      		add r24,r16
 1730 046c 8032      		cpi r24,lo8(32)
 1731 046e 00F0      		brlo .L148
 1732               	.L101:
 290:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 1733               		.loc 1 290 21 is_stmt 1 view .LVU427
 290:../../tmk_core/common/action.c ****                         if (tap_count > 0) {
 1734               		.loc 1 290 24 is_stmt 0 view .LVU428
 1735 0470 FF20      		tst r15
 1736 0472 01F4      		brne .+2
 1737 0474 00C0      		rjmp .L116
 291:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 1738               		.loc 1 291 25 is_stmt 1 view .LVU429
 291:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: register_code\n");
 1739               		.loc 1 291 28 is_stmt 0 view .LVU430
 1740 0476 E110      		cpse r14,__zero_reg__
 1741 0478 00C0      		rjmp .L153
 295:../../tmk_core/common/action.c ****                             layer_on(action.layer_tap.val);
 1742               		.loc 1 295 29 is_stmt 1 view .LVU431
 296:../../tmk_core/common/action.c ****                         }
 1743               		.loc 1 296 29 view .LVU432
 1744 047a 812F      		mov r24,r17
 1745 047c 8F71      		andi r24,lo8(31)
 1746 047e 00C0      		rjmp .L154
 1747               	.L100:
 1748 0480 023F      		cpi r16,lo8(-14)
 1749 0482 01F4      		brne .+2
 1750 0484 00C0      		rjmp .L103
 1751 0486 00F4      		brsh .+2
 1752 0488 00C0      		rjmp .L104
 1753 048a 033F      		cpi r16,lo8(-13)
 1754 048c 01F4      		brne .L101
 285:../../tmk_core/common/action.c ****                                     layer_clear();
 1755               		.loc 1 285 21 view .LVU433
 285:../../tmk_core/common/action.c ****                                     layer_clear();
 1756               		.loc 1 285 70 is_stmt 0 view .LVU434
 1757 048e FF20      		tst r15
 1758 0490 01F4      		brne .+2
 1759 0492 00C0      		rjmp .L115
 285:../../tmk_core/common/action.c ****                                     layer_clear();
 1760               		.loc 1 285 37 discriminator 1 view .LVU435
 1761 0494 812F      		mov r24,r17
 1762 0496 8F71      		andi r24,lo8(31)
 1763               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1764               		.loc 1 351 1 discriminator 1 view .LVU436
 1765 0498 0F90      		pop __tmp_reg__
 1766 049a 0F90      		pop __tmp_reg__
 1767 049c 0F90      		pop __tmp_reg__
 1768 049e 0F90      		pop __tmp_reg__
 1769 04a0 0F90      		pop __tmp_reg__
 1770 04a2 DF91      		pop r29
 1771 04a4 CF91      		pop r28
 1772               	.LVL224:
 351:../../tmk_core/common/action.c **** 
 1773               		.loc 1 351 1 discriminator 1 view .LVU437
 1774 04a6 1F91      		pop r17
 1775               	.LVL225:
 351:../../tmk_core/common/action.c **** 
 1776               		.loc 1 351 1 discriminator 1 view .LVU438
 1777 04a8 0F91      		pop r16
 1778               	.LVL226:
 351:../../tmk_core/common/action.c **** 
 1779               		.loc 1 351 1 discriminator 1 view .LVU439
 1780 04aa FF90      		pop r15
 1781               	.LVL227:
 351:../../tmk_core/common/action.c **** 
 1782               		.loc 1 351 1 discriminator 1 view .LVU440
 1783 04ac EF90      		pop r14
 1784               	.LVL228:
 351:../../tmk_core/common/action.c **** 
 1785               		.loc 1 351 1 discriminator 1 view .LVU441
 1786 04ae DF90      		pop r13
 1787               	.LVL229:
 351:../../tmk_core/common/action.c **** 
 1788               		.loc 1 351 1 discriminator 1 view .LVU442
 1789 04b0 CF90      		pop r12
 1790               	.LVL230:
 351:../../tmk_core/common/action.c **** 
 1791               		.loc 1 351 1 discriminator 1 view .LVU443
 1792 04b2 BF90      		pop r11
 1793               	.LVL231:
 351:../../tmk_core/common/action.c **** 
 1794               		.loc 1 351 1 discriminator 1 view .LVU444
 1795 04b4 AF90      		pop r10
 1796               	.LVL232:
 285:../../tmk_core/common/action.c ****                                     layer_clear();
 1797               		.loc 1 285 37 discriminator 1 view .LVU445
 1798 04b6 0C94 0000 		jmp layer_move
 1799               	.LVL233:
 1800               	.L148:
 252:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1801               		.loc 1 252 21 is_stmt 1 view .LVU446
 1802 04ba 812F      		mov r24,r17
 1803 04bc 8F71      		andi r24,lo8(31)
 1804 04be 102F      		mov r17,r16
 1805               	.LVL234:
 252:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1806               		.loc 1 252 21 is_stmt 0 view .LVU447
 1807 04c0 1071      		andi r17,lo8(16)
 252:../../tmk_core/common/action.c ****                         layer_on(action.layer_tap.val);
 1808               		.loc 1 252 24 view .LVU448
 1809 04c2 FF20      		tst r15
 1810 04c4 01F0      		breq .L106
 253:../../tmk_core/common/action.c ****                         register_mods((action.layer_tap.code & 0x10) ?
 1811               		.loc 1 253 25 is_stmt 1 view .LVU449
 1812 04c6 0E94 0000 		call layer_on
 1813               	.LVL235:
 254:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1814               		.loc 1 254 25 view .LVU450
 1815 04ca 802F      		mov r24,r16
 254:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1816               		.loc 1 254 25 is_stmt 0 view .LVU451
 1817 04cc 8295      		swap r24
 1818 04ce 807F      		andi r24,lo8(-16)
 1819 04d0 1111      		cpse r17,__zero_reg__
 1820 04d2 00C0      		rjmp .L149
 254:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1821               		.loc 1 254 25 discriminator 2 view .LVU452
 1822 04d4 802F      		mov r24,r16
 1823 04d6 8F70      		andi r24,lo8(15)
 1824 04d8 00C0      		rjmp .L149
 1825               	.L106:
 258:../../tmk_core/common/action.c ****                         unregister_mods((action.layer_tap.code & 0x10) ?
 1826               		.loc 1 258 25 is_stmt 1 view .LVU453
 1827 04da 0E94 0000 		call layer_off
 1828               	.LVL236:
 259:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1829               		.loc 1 259 25 view .LVU454
 1830 04de 802F      		mov r24,r16
 1831 04e0 8295      		swap r24
 1832 04e2 807F      		andi r24,lo8(-16)
 1833 04e4 1111      		cpse r17,__zero_reg__
 1834 04e6 00C0      		rjmp .L110
 259:../../tmk_core/common/action.c ****                                 (action.layer_tap.code & 0x0f) << 4 :
 1835               		.loc 1 259 25 is_stmt 0 discriminator 2 view .LVU455
 1836 04e8 802F      		mov r24,r16
 1837 04ea 8F70      		andi r24,lo8(15)
 1838 04ec 00C0      		rjmp .L110
 1839               	.LVL237:
 1840               	.L99:
 266:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 1841               		.loc 1 266 21 is_stmt 1 view .LVU456
 266:../../tmk_core/common/action.c ****                         if (tap_count < TAPPING_TOGGLE) {
 1842               		.loc 1 266 24 is_stmt 0 view .LVU457
 1843 04ee FF20      		tst r15
 1844 04f0 01F0      		breq .L111
 267:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1845               		.loc 1 267 25 is_stmt 1 view .LVU458
 267:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1846               		.loc 1 267 28 is_stmt 0 view .LVU459
 1847 04f2 F4E0      		ldi r31,lo8(4)
 1848 04f4 FE15      		cp r31,r14
 1849 04f6 00F4      		brsh .+2
 1850 04f8 00C0      		rjmp .L54
 1851               	.L112:
 268:../../tmk_core/common/action.c ****                         }
 1852               		.loc 1 268 29 is_stmt 1 view .LVU460
 1853 04fa 812F      		mov r24,r17
 1854 04fc 8F71      		andi r24,lo8(31)
 1855               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1856               		.loc 1 351 1 is_stmt 0 view .LVU461
 1857 04fe 0F90      		pop __tmp_reg__
 1858 0500 0F90      		pop __tmp_reg__
 1859 0502 0F90      		pop __tmp_reg__
 1860 0504 0F90      		pop __tmp_reg__
 1861 0506 0F90      		pop __tmp_reg__
 1862 0508 DF91      		pop r29
 1863 050a CF91      		pop r28
 1864               	.LVL238:
 351:../../tmk_core/common/action.c **** 
 1865               		.loc 1 351 1 view .LVU462
 1866 050c 1F91      		pop r17
 1867               	.LVL239:
 351:../../tmk_core/common/action.c **** 
 1868               		.loc 1 351 1 view .LVU463
 1869 050e 0F91      		pop r16
 1870               	.LVL240:
 351:../../tmk_core/common/action.c **** 
 1871               		.loc 1 351 1 view .LVU464
 1872 0510 FF90      		pop r15
 1873               	.LVL241:
 351:../../tmk_core/common/action.c **** 
 1874               		.loc 1 351 1 view .LVU465
 1875 0512 EF90      		pop r14
 1876               	.LVL242:
 351:../../tmk_core/common/action.c **** 
 1877               		.loc 1 351 1 view .LVU466
 1878 0514 DF90      		pop r13
 1879               	.LVL243:
 351:../../tmk_core/common/action.c **** 
 1880               		.loc 1 351 1 view .LVU467
 1881 0516 CF90      		pop r12
 1882               	.LVL244:
 351:../../tmk_core/common/action.c **** 
 1883               		.loc 1 351 1 view .LVU468
 1884 0518 BF90      		pop r11
 1885               	.LVL245:
 351:../../tmk_core/common/action.c **** 
 1886               		.loc 1 351 1 view .LVU469
 1887 051a AF90      		pop r10
 1888               	.LVL246:
 268:../../tmk_core/common/action.c ****                         }
 1889               		.loc 1 268 29 view .LVU470
 1890 051c 0C94 0000 		jmp layer_invert
 1891               	.LVL247:
 1892               	.L111:
 271:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1893               		.loc 1 271 25 is_stmt 1 view .LVU471
 271:../../tmk_core/common/action.c ****                             layer_invert(action.layer_tap.val);
 1894               		.loc 1 271 28 is_stmt 0 view .LVU472
 1895 0520 85E0      		ldi r24,lo8(5)
 1896 0522 8E15      		cp r24,r14
 1897 0524 00F4      		brsh .+2
 1898 0526 00C0      		rjmp .L54
 1899 0528 00C0      		rjmp .L112
 1900               	.L104:
 277:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 1901               		.loc 1 277 21 is_stmt 1 view .LVU473
 1902 052a 812F      		mov r24,r17
 1903 052c 8F71      		andi r24,lo8(31)
 277:../../tmk_core/common/action.c ****                                     layer_off(action.layer_tap.val);
 1904               		.loc 1 277 68 is_stmt 0 view .LVU474
 1905 052e FF20      		tst r15
 1906 0530 01F0      		breq .L155
 1907               	.L154:
 1908               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1909               		.loc 1 351 1 view .LVU475
 1910 0532 0F90      		pop __tmp_reg__
 1911 0534 0F90      		pop __tmp_reg__
 1912 0536 0F90      		pop __tmp_reg__
 1913 0538 0F90      		pop __tmp_reg__
 1914 053a 0F90      		pop __tmp_reg__
 1915 053c DF91      		pop r29
 1916 053e CF91      		pop r28
 1917               	.LVL248:
 351:../../tmk_core/common/action.c **** 
 1918               		.loc 1 351 1 view .LVU476
 1919 0540 1F91      		pop r17
 1920               	.LVL249:
 351:../../tmk_core/common/action.c **** 
 1921               		.loc 1 351 1 view .LVU477
 1922 0542 0F91      		pop r16
 1923               	.LVL250:
 351:../../tmk_core/common/action.c **** 
 1924               		.loc 1 351 1 view .LVU478
 1925 0544 FF90      		pop r15
 1926               	.LVL251:
 351:../../tmk_core/common/action.c **** 
 1927               		.loc 1 351 1 view .LVU479
 1928 0546 EF90      		pop r14
 1929               	.LVL252:
 351:../../tmk_core/common/action.c **** 
 1930               		.loc 1 351 1 view .LVU480
 1931 0548 DF90      		pop r13
 1932               	.LVL253:
 351:../../tmk_core/common/action.c **** 
 1933               		.loc 1 351 1 view .LVU481
 1934 054a CF90      		pop r12
 1935               	.LVL254:
 351:../../tmk_core/common/action.c **** 
 1936               		.loc 1 351 1 view .LVU482
 1937 054c BF90      		pop r11
 1938               	.LVL255:
 351:../../tmk_core/common/action.c **** 
 1939               		.loc 1 351 1 view .LVU483
 1940 054e AF90      		pop r10
 1941               	.LVL256:
 296:../../tmk_core/common/action.c ****                         }
 1942               		.loc 1 296 29 view .LVU484
 1943 0550 0C94 0000 		jmp layer_on
 1944               	.LVL257:
 1945               	.L103:
 281:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 1946               		.loc 1 281 21 is_stmt 1 view .LVU485
 1947 0554 812F      		mov r24,r17
 1948 0556 8F71      		andi r24,lo8(31)
 281:../../tmk_core/common/action.c ****                                     layer_on(action.layer_tap.val);
 1949               		.loc 1 281 69 is_stmt 0 view .LVU486
 1950 0558 FF20      		tst r15
 1951 055a 01F0      		breq .L154
 1952               	.L155:
 1953               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1954               		.loc 1 351 1 view .LVU487
 1955 055c 0F90      		pop __tmp_reg__
 1956 055e 0F90      		pop __tmp_reg__
 1957 0560 0F90      		pop __tmp_reg__
 1958 0562 0F90      		pop __tmp_reg__
 1959 0564 0F90      		pop __tmp_reg__
 1960 0566 DF91      		pop r29
 1961 0568 CF91      		pop r28
 1962               	.LVL258:
 351:../../tmk_core/common/action.c **** 
 1963               		.loc 1 351 1 view .LVU488
 1964 056a 1F91      		pop r17
 1965               	.LVL259:
 351:../../tmk_core/common/action.c **** 
 1966               		.loc 1 351 1 view .LVU489
 1967 056c 0F91      		pop r16
 1968               	.LVL260:
 351:../../tmk_core/common/action.c **** 
 1969               		.loc 1 351 1 view .LVU490
 1970 056e FF90      		pop r15
 1971               	.LVL261:
 351:../../tmk_core/common/action.c **** 
 1972               		.loc 1 351 1 view .LVU491
 1973 0570 EF90      		pop r14
 1974               	.LVL262:
 351:../../tmk_core/common/action.c **** 
 1975               		.loc 1 351 1 view .LVU492
 1976 0572 DF90      		pop r13
 1977               	.LVL263:
 351:../../tmk_core/common/action.c **** 
 1978               		.loc 1 351 1 view .LVU493
 1979 0574 CF90      		pop r12
 1980               	.LVL264:
 351:../../tmk_core/common/action.c **** 
 1981               		.loc 1 351 1 view .LVU494
 1982 0576 BF90      		pop r11
 1983               	.LVL265:
 351:../../tmk_core/common/action.c **** 
 1984               		.loc 1 351 1 view .LVU495
 1985 0578 AF90      		pop r10
 1986               	.LVL266:
 304:../../tmk_core/common/action.c ****                         }
 1987               		.loc 1 304 29 view .LVU496
 1988 057a 0C94 0000 		jmp layer_off
 1989               	.LVL267:
 1990               	.L115:
 1991               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 1992               		.loc 1 351 1 view .LVU497
 1993 057e 0F90      		pop __tmp_reg__
 1994 0580 0F90      		pop __tmp_reg__
 1995 0582 0F90      		pop __tmp_reg__
 1996 0584 0F90      		pop __tmp_reg__
 1997 0586 0F90      		pop __tmp_reg__
 1998 0588 DF91      		pop r29
 1999 058a CF91      		pop r28
 2000               	.LVL268:
 351:../../tmk_core/common/action.c **** 
 2001               		.loc 1 351 1 view .LVU498
 2002 058c 1F91      		pop r17
 2003               	.LVL269:
 351:../../tmk_core/common/action.c **** 
 2004               		.loc 1 351 1 view .LVU499
 2005 058e 0F91      		pop r16
 2006               	.LVL270:
 351:../../tmk_core/common/action.c **** 
 2007               		.loc 1 351 1 view .LVU500
 2008 0590 FF90      		pop r15
 2009               	.LVL271:
 351:../../tmk_core/common/action.c **** 
 2010               		.loc 1 351 1 view .LVU501
 2011 0592 EF90      		pop r14
 2012               	.LVL272:
 351:../../tmk_core/common/action.c **** 
 2013               		.loc 1 351 1 view .LVU502
 2014 0594 DF90      		pop r13
 2015               	.LVL273:
 351:../../tmk_core/common/action.c **** 
 2016               		.loc 1 351 1 view .LVU503
 2017 0596 CF90      		pop r12
 2018               	.LVL274:
 351:../../tmk_core/common/action.c **** 
 2019               		.loc 1 351 1 view .LVU504
 2020 0598 BF90      		pop r11
 2021               	.LVL275:
 351:../../tmk_core/common/action.c **** 
 2022               		.loc 1 351 1 view .LVU505
 2023 059a AF90      		pop r10
 2024               	.LVL276:
 286:../../tmk_core/common/action.c ****                     break;
 2025               		.loc 1 286 37 view .LVU506
 2026 059c 0C94 0000 		jmp layer_clear
 2027               	.LVL277:
 2028               	.L116:
 299:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 2029               		.loc 1 299 25 is_stmt 1 view .LVU507
 299:../../tmk_core/common/action.c ****                             dprint("KEYMAP_TAP_KEY: Tap: unregister_code\n");
 2030               		.loc 1 299 28 is_stmt 0 view .LVU508
 2031 05a0 E110      		cpse r14,__zero_reg__
 2032 05a2 00C0      		rjmp .L156
 303:../../tmk_core/common/action.c ****                             layer_off(action.layer_tap.val);
 2033               		.loc 1 303 29 is_stmt 1 view .LVU509
 304:../../tmk_core/common/action.c ****                         }
 2034               		.loc 1 304 29 view .LVU510
 2035 05a4 812F      		mov r24,r17
 2036 05a6 8F71      		andi r24,lo8(31)
 2037 05a8 00C0      		rjmp .L155
 2038               	.LVL278:
 2039               	.L119:
 315:../../tmk_core/common/action.c ****             break;
 2040               		.loc 1 315 13 view .LVU511
 315:../../tmk_core/common/action.c ****             break;
 2041               		.loc 1 315 83 is_stmt 0 view .LVU512
 2042 05aa 412F      		mov r20,r17
 2043 05ac 4F70      		andi r20,lo8(15)
 2044               	.LVL279:
 315:../../tmk_core/common/action.c ****             break;
 2045               		.loc 1 315 13 view .LVU513
 2046 05ae 602F      		mov r22,r16
 2047 05b0 C501      		movw r24,r10
 2048 05b2 0E94 0000 		call action_get_macro
 2049               	.LVL280:
 2050               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 2051               		.loc 1 351 1 view .LVU514
 2052 05b6 0F90      		pop __tmp_reg__
 2053 05b8 0F90      		pop __tmp_reg__
 2054 05ba 0F90      		pop __tmp_reg__
 2055 05bc 0F90      		pop __tmp_reg__
 2056 05be 0F90      		pop __tmp_reg__
 2057 05c0 DF91      		pop r29
 2058 05c2 CF91      		pop r28
 2059               	.LVL281:
 351:../../tmk_core/common/action.c **** 
 2060               		.loc 1 351 1 view .LVU515
 2061 05c4 1F91      		pop r17
 2062               	.LVL282:
 351:../../tmk_core/common/action.c **** 
 2063               		.loc 1 351 1 view .LVU516
 2064 05c6 0F91      		pop r16
 2065               	.LVL283:
 351:../../tmk_core/common/action.c **** 
 2066               		.loc 1 351 1 view .LVU517
 2067 05c8 FF90      		pop r15
 2068               	.LVL284:
 351:../../tmk_core/common/action.c **** 
 2069               		.loc 1 351 1 view .LVU518
 2070 05ca EF90      		pop r14
 2071               	.LVL285:
 351:../../tmk_core/common/action.c **** 
 2072               		.loc 1 351 1 view .LVU519
 2073 05cc DF90      		pop r13
 2074               	.LVL286:
 351:../../tmk_core/common/action.c **** 
 2075               		.loc 1 351 1 view .LVU520
 2076 05ce CF90      		pop r12
 2077               	.LVL287:
 351:../../tmk_core/common/action.c **** 
 2078               		.loc 1 351 1 view .LVU521
 2079 05d0 BF90      		pop r11
 2080               	.LVL288:
 351:../../tmk_core/common/action.c **** 
 2081               		.loc 1 351 1 view .LVU522
 2082 05d2 AF90      		pop r10
 2083               	.LVL289:
 315:../../tmk_core/common/action.c ****             break;
 2084               		.loc 1 315 13 view .LVU523
 2085 05d4 0C94 0000 		jmp action_macro_play
 2086               	.LVL290:
 2087               	.L120:
 345:../../tmk_core/common/action.c ****             break;
 2088               		.loc 1 345 13 is_stmt 1 view .LVU524
 345:../../tmk_core/common/action.c ****             break;
 2089               		.loc 1 345 64 is_stmt 0 view .LVU525
 2090 05d8 412F      		mov r20,r17
 2091 05da 4F70      		andi r20,lo8(15)
 2092               	.LVL291:
 345:../../tmk_core/common/action.c ****             break;
 2093               		.loc 1 345 13 view .LVU526
 2094 05dc 602F      		mov r22,r16
 2095 05de C501      		movw r24,r10
 2096               	/* epilogue start */
 351:../../tmk_core/common/action.c **** 
 2097               		.loc 1 351 1 view .LVU527
 2098 05e0 0F90      		pop __tmp_reg__
 2099 05e2 0F90      		pop __tmp_reg__
 2100 05e4 0F90      		pop __tmp_reg__
 2101 05e6 0F90      		pop __tmp_reg__
 2102 05e8 0F90      		pop __tmp_reg__
 2103 05ea DF91      		pop r29
 2104 05ec CF91      		pop r28
 2105               	.LVL292:
 351:../../tmk_core/common/action.c **** 
 2106               		.loc 1 351 1 view .LVU528
 2107 05ee 1F91      		pop r17
 2108               	.LVL293:
 351:../../tmk_core/common/action.c **** 
 2109               		.loc 1 351 1 view .LVU529
 2110 05f0 0F91      		pop r16
 2111               	.LVL294:
 351:../../tmk_core/common/action.c **** 
 2112               		.loc 1 351 1 view .LVU530
 2113 05f2 FF90      		pop r15
 2114               	.LVL295:
 351:../../tmk_core/common/action.c **** 
 2115               		.loc 1 351 1 view .LVU531
 2116 05f4 EF90      		pop r14
 2117               	.LVL296:
 351:../../tmk_core/common/action.c **** 
 2118               		.loc 1 351 1 view .LVU532
 2119 05f6 DF90      		pop r13
 2120               	.LVL297:
 351:../../tmk_core/common/action.c **** 
 2121               		.loc 1 351 1 view .LVU533
 2122 05f8 CF90      		pop r12
 2123               	.LVL298:
 351:../../tmk_core/common/action.c **** 
 2124               		.loc 1 351 1 view .LVU534
 2125 05fa BF90      		pop r11
 2126               	.LVL299:
 351:../../tmk_core/common/action.c **** 
 2127               		.loc 1 351 1 view .LVU535
 2128 05fc AF90      		pop r10
 2129               	.LVL300:
 345:../../tmk_core/common/action.c ****             break;
 2130               		.loc 1 345 13 view .LVU536
 2131 05fe 0C94 0000 		jmp action_function
 2132               	.LVL301:
 2133               	.L146:
  61:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 2134               		.loc 1 61 16 view .LVU537
 2135 0602 F280      		ldd r15,Z+2
  63:../../tmk_core/common/action.c **** #endif
 2136               		.loc 1 63 36 view .LVU538
 2137 0604 E580      		ldd r14,Z+5
 2138 0606 E294      		swap r14
 2139 0608 2FE0      		ldi r18,lo8(15)
 2140 060a E222      		and r14,r18
  68:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2141               		.loc 1 68 5 is_stmt 1 view .LVU539
  68:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2142               		.loc 1 68 23 is_stmt 0 view .LVU540
 2143 060c 782F      		mov r23,r24
 2144 060e 9D83      		std Y+5,r25
 2145 0610 8C83      		std Y+4,r24
 2146 0612 6F2D      		mov r22,r15
 2147 0614 8D81      		ldd r24,Y+5
 2148               	.LVL302:
  68:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2149               		.loc 1 68 23 view .LVU541
 2150 0616 0E94 0000 		call layer_switch_get_action
 2151               	.LVL303:
  68:../../tmk_core/common/action.c ****     dprint("ACTION: "); debug_action(action);
 2152               		.loc 1 68 23 view .LVU542
 2153 061a 8C01      		movw r16,r24
  69:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 2154               		.loc 1 69 5 is_stmt 1 view .LVU543
  69:../../tmk_core/common/action.c **** #ifndef NO_ACTION_LAYER
 2155               		.loc 1 69 25 view .LVU544
  71:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 2156               		.loc 1 71 5 view .LVU545
  71:../../tmk_core/common/action.c ****     dprint(" default_layer_state: "); default_layer_debug();
 2157               		.loc 1 71 31 view .LVU546
 2158 061c 0E94 0000 		call layer_debug
 2159               	.LVL304:
  72:../../tmk_core/common/action.c **** #endif
 2160               		.loc 1 72 5 view .LVU547
  72:../../tmk_core/common/action.c **** #endif
 2161               		.loc 1 72 39 view .LVU548
 2162 0620 0E94 0000 		call default_layer_debug
 2163               	.LVL305:
  74:../../tmk_core/common/action.c **** 
 2164               		.loc 1 74 5 view .LVU549
  76:../../tmk_core/common/action.c ****         /* Key and Mods */
 2165               		.loc 1 76 5 view .LVU550
  76:../../tmk_core/common/action.c ****         /* Key and Mods */
 2166               		.loc 1 76 24 is_stmt 0 view .LVU551
 2167 0624 E12F      		mov r30,r17
 2168 0626 E295      		swap r30
 2169 0628 EF70      		andi r30,lo8(15)
  76:../../tmk_core/common/action.c ****         /* Key and Mods */
 2170               		.loc 1 76 5 view .LVU552
 2171 062a F0E0      		ldi r31,0
 2172 062c E050      		subi r30,lo8(-(gs(.L122)))
 2173 062e F040      		sbci r31,hi8(-(gs(.L122)))
 2174 0630 0C94 0000 		jmp __tablejump2__
 2175               		.section	.jumptables.gcc.process_action,"a",@progbits
 2176               		.p2align	1
 2177               	.L122:
 2178 0000 0000      		.word gs(.L57)
 2179 0002 0000      		.word gs(.L57)
 2180 0004 0000      		.word gs(.L63)
 2181 0006 0000      		.word gs(.L63)
 2182 0008 0000      		.word gs(.L79)
 2183 000a 0000      		.word gs(.L84)
 2184 000c 0000      		.word gs(.L54)
 2185 000e 0000      		.word gs(.L54)
 2186 0010 0000      		.word gs(.L86)
 2187 0012 0000      		.word gs(.L54)
 2188 0014 0000      		.word gs(.L98)
 2189 0016 0000      		.word gs(.L98)
 2190 0018 0000      		.word gs(.L119)
 2191 001a 0000      		.word gs(.L54)
 2192 001c 0000      		.word gs(.L54)
 2193 001e 0000      		.word gs(.L120)
 2194               		.section	.text.process_action
 2195               		.cfi_endproc
 2196               	.LFE104:
 2198               		.section	.text.clear_keyboard_but_mods,"ax",@progbits
 2199               	.global	clear_keyboard_but_mods
 2201               	clear_keyboard_but_mods:
 2202               	.LFB111:
 516:../../tmk_core/common/action.c **** 
 517:../../tmk_core/common/action.c **** void clear_keyboard(void)
 518:../../tmk_core/common/action.c **** {
 519:../../tmk_core/common/action.c ****     clear_mods();
 520:../../tmk_core/common/action.c ****     clear_keyboard_but_mods();
 521:../../tmk_core/common/action.c **** }
 522:../../tmk_core/common/action.c **** 
 523:../../tmk_core/common/action.c **** void clear_keyboard_but_mods(void)
 524:../../tmk_core/common/action.c **** {
 2203               		.loc 1 524 1 is_stmt 1 view -0
 2204               		.cfi_startproc
 2205               	/* prologue: function */
 2206               	/* frame size = 0 */
 2207               	/* stack size = 0 */
 2208               	.L__stack_usage = 0
 525:../../tmk_core/common/action.c ****     clear_weak_mods();
 2209               		.loc 1 525 5 view .LVU554
 2210 0000 0E94 0000 		call clear_weak_mods
 2211               	.LVL306:
 526:../../tmk_core/common/action.c ****     clear_keys();
 2212               		.loc 1 526 5 view .LVU555
 2213 0004 0E94 0000 		call clear_keys
 2214               	.LVL307:
 527:../../tmk_core/common/action.c ****     send_keyboard_report();
 2215               		.loc 1 527 5 view .LVU556
 2216 0008 0E94 0000 		call send_keyboard_report
 2217               	.LVL308:
 528:../../tmk_core/common/action.c **** #ifdef MOUSEKEY_ENABLE
 529:../../tmk_core/common/action.c ****     mousekey_clear();
 2218               		.loc 1 529 5 view .LVU557
 2219 000c 0E94 0000 		call mousekey_clear
 2220               	.LVL309:
 530:../../tmk_core/common/action.c ****     mousekey_send();
 2221               		.loc 1 530 5 view .LVU558
 2222 0010 0E94 0000 		call mousekey_send
 2223               	.LVL310:
 531:../../tmk_core/common/action.c **** #endif
 532:../../tmk_core/common/action.c **** #ifdef EXTRAKEY_ENABLE
 533:../../tmk_core/common/action.c ****     host_system_send(0);
 2224               		.loc 1 533 5 view .LVU559
 2225 0014 90E0      		ldi r25,0
 2226 0016 80E0      		ldi r24,0
 2227 0018 0E94 0000 		call host_system_send
 2228               	.LVL311:
 534:../../tmk_core/common/action.c ****     host_consumer_send(0);
 2229               		.loc 1 534 5 view .LVU560
 2230 001c 90E0      		ldi r25,0
 2231 001e 80E0      		ldi r24,0
 2232 0020 0C94 0000 		jmp host_consumer_send
 2233               	.LVL312:
 2234               		.cfi_endproc
 2235               	.LFE111:
 2237               		.section	.text.clear_keyboard,"ax",@progbits
 2238               	.global	clear_keyboard
 2240               	clear_keyboard:
 2241               	.LFB110:
 518:../../tmk_core/common/action.c ****     clear_mods();
 2242               		.loc 1 518 1 view -0
 2243               		.cfi_startproc
 2244               	/* prologue: function */
 2245               	/* frame size = 0 */
 2246               	/* stack size = 0 */
 2247               	.L__stack_usage = 0
 519:../../tmk_core/common/action.c ****     clear_keyboard_but_mods();
 2248               		.loc 1 519 5 view .LVU562
 2249 0000 0E94 0000 		call clear_mods
 2250               	.LVL313:
 520:../../tmk_core/common/action.c **** }
 2251               		.loc 1 520 5 view .LVU563
 2252 0004 0C94 0000 		jmp clear_keyboard_but_mods
 2253               	.LVL314:
 2254               		.cfi_endproc
 2255               	.LFE110:
 2257               		.section	.text.is_tap_key,"ax",@progbits
 2258               	.global	is_tap_key
 2260               	is_tap_key:
 2261               	.LFB112:
 535:../../tmk_core/common/action.c **** #endif
 536:../../tmk_core/common/action.c **** }
 537:../../tmk_core/common/action.c **** 
 538:../../tmk_core/common/action.c **** bool is_tap_key(keyevent_t event)
 539:../../tmk_core/common/action.c **** {
 2262               		.loc 1 539 1 view -0
 2263               		.cfi_startproc
 2264 0000 CF93      		push r28
 2265               	.LCFI18:
 2266               		.cfi_def_cfa_offset 3
 2267               		.cfi_offset 28, -2
 2268 0002 DF93      		push r29
 2269               	.LCFI19:
 2270               		.cfi_def_cfa_offset 4
 2271               		.cfi_offset 29, -3
 2272 0004 00D0      		rcall .
 2273 0006 00D0      		rcall .
 2274 0008 0F92      		push __tmp_reg__
 2275               	.LCFI20:
 2276               		.cfi_def_cfa_offset 9
 2277 000a CDB7      		in r28,__SP_L__
 2278 000c DEB7      		in r29,__SP_H__
 2279               	.LCFI21:
 2280               		.cfi_def_cfa_register 28
 2281               	/* prologue: function */
 2282               	/* frame size = 5 */
 2283               	/* stack size = 7 */
 2284               	.L__stack_usage = 7
 2285 000e 6B83      		std Y+3,r22
 2286 0010 7C83      		std Y+4,r23
 2287 0012 8D83      		std Y+5,r24
 540:../../tmk_core/common/action.c ****     if (IS_NOEVENT(event)) { return false; }
 2288               		.loc 1 540 5 view .LVU565
 2289               	.LBB33:
 2290               	.LBI33:
 2291               		.loc 2 49 20 view .LVU566
 2292               	.LBB34:
 2293               		.loc 2 49 51 view .LVU567
 2294               		.loc 2 49 74 is_stmt 0 view .LVU568
 2295 0014 8C81      		ldd r24,Y+4
 2296 0016 9D81      		ldd r25,Y+5
 2297 0018 892B      		or r24,r25
 2298 001a 01F0      		breq .L189
 2299 001c 842F      		mov r24,r20
 2300 001e 8523      		and r24,r21
 2301 0020 8F3F      		cpi r24,lo8(-1)
 2302 0022 01F4      		brne .L187
 2303               	.LVL315:
 2304               	.L189:
 2305               		.loc 2 49 74 view .LVU569
 2306               	.LBE34:
 2307               	.LBE33:
 541:../../tmk_core/common/action.c **** 
 542:../../tmk_core/common/action.c ****     action_t action = layer_switch_get_action(event);
 543:../../tmk_core/common/action.c **** 
 544:../../tmk_core/common/action.c ****     switch (action.kind.id) {
 545:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 546:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:
 547:../../tmk_core/common/action.c ****             switch (action.key.code) {
 548:../../tmk_core/common/action.c ****                 case MODS_ONESHOT:
 549:../../tmk_core/common/action.c ****                 case MODS_TAP_TOGGLE:
 550:../../tmk_core/common/action.c ****                 case KC_A ... KC_EXSEL:                 // tap key
 551:../../tmk_core/common/action.c ****                 case KC_LCTRL ... KC_RGUI:              // tap key
 552:../../tmk_core/common/action.c ****                     return true;
 553:../../tmk_core/common/action.c ****             }
 554:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:
 555:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:
 556:../../tmk_core/common/action.c ****             switch (action.layer_tap.code) {
 557:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 558:../../tmk_core/common/action.c ****                     return false;
 2308               		.loc 1 558 28 view .LVU570
 2309 0024 80E0      		ldi r24,0
 2310               	.LVL316:
 2311               		.loc 1 558 28 view .LVU571
 2312 0026 00C0      		rjmp .L164
 2313               	.LVL317:
 2314               	.L167:
 2315               		.loc 1 558 28 view .LVU572
 2316 0028 90E2      		ldi r25,lo8(32)
 2317               	.LVL318:
 2318               		.loc 1 558 28 view .LVU573
 2319 002a 980F      		add r25,r24
 2320 002c 9830      		cpi r25,lo8(8)
 2321 002e 00F0      		brlo .L179
 2322               	.LVL319:
 2323               	.L168:
 556:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2324               		.loc 1 556 13 is_stmt 1 view .LVU574
 2325 0030 883E      		cpi r24,lo8(-24)
 2326 0032 00F4      		brsh .L169
 2327 0034 803E      		cpi r24,lo8(-32)
 2328 0036 00F4      		brsh .L179
 2329 0038 8450      		subi r24,lo8(-(-4))
 2330               	.LVL320:
 556:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2331               		.loc 1 556 13 is_stmt 0 view .LVU575
 2332 003a 813A      		cpi r24,lo8(-95)
 2333 003c 00F4      		brsh .L189
 2334 003e 00C0      		rjmp .L179
 2335               	.LVL321:
 2336               	.L169:
 556:../../tmk_core/common/action.c ****                 case 0xc0 ... 0xdf:         // with modifiers
 2337               		.loc 1 556 13 view .LVU576
 2338 0040 803F      		cpi r24,lo8(-16)
 2339 0042 01F4      		brne .L189
 2340 0044 00C0      		rjmp .L179
 2341               	.LVL322:
 2342               	.L187:
 542:../../tmk_core/common/action.c **** 
 2343               		.loc 1 542 5 is_stmt 1 view .LVU577
 542:../../tmk_core/common/action.c **** 
 2344               		.loc 1 542 23 is_stmt 0 view .LVU578
 2345 0046 6B81      		ldd r22,Y+3
 2346 0048 7C81      		ldd r23,Y+4
 2347 004a 8D81      		ldd r24,Y+5
 2348 004c 0E94 0000 		call layer_switch_get_action
 2349               	.LVL323:
 544:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2350               		.loc 1 544 5 is_stmt 1 view .LVU579
 544:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:
 2351               		.loc 1 544 24 is_stmt 0 view .LVU580
 2352 0050 292F      		mov r18,r25
 2353 0052 2295      		swap r18
 2354 0054 2F70      		andi r18,lo8(15)
 2355 0056 2C30      		cpi r18,lo8(12)
 2356 0058 00F4      		brsh .L170
 2357 005a 2A30      		cpi r18,lo8(10)
 2358 005c 00F4      		brsh .L168
 2359 005e 2250      		subi r18,lo8(-(-2))
 2360 0060 2F70      		andi r18,lo8(15)
 2361 0062 2230      		cpi r18,lo8(2)
 2362 0064 00F4      		brsh .L189
 547:../../tmk_core/common/action.c ****                 case MODS_ONESHOT:
 2363               		.loc 1 547 13 is_stmt 1 view .LVU581
 2364 0066 853A      		cpi r24,lo8(-91)
 2365 0068 00F4      		brsh .L167
 2366 006a 8430      		cpi r24,lo8(4)
 2367 006c 00F4      		brsh .L179
 2368 006e 8230      		cpi r24,lo8(2)
 2369 0070 00F4      		brsh .L168
 2370               	.LVL324:
 2371               	.L179:
 559:../../tmk_core/common/action.c ****                 case KC_A ... KC_EXSEL:     // tap key
 560:../../tmk_core/common/action.c ****                 case KC_LCTRL ... KC_RGUI:  // tap key
 561:../../tmk_core/common/action.c ****                 case OP_TAP_TOGGLE:
 562:../../tmk_core/common/action.c ****                     return true;
 2372               		.loc 1 562 28 is_stmt 0 view .LVU582
 2373 0072 81E0      		ldi r24,lo8(1)
 2374               	.LVL325:
 2375               		.loc 1 562 28 view .LVU583
 2376 0074 00C0      		rjmp .L164
 2377               	.LVL326:
 2378               	.L170:
 2379               		.loc 1 562 28 view .LVU584
 2380 0076 2C30      		cpi r18,lo8(12)
 2381 0078 01F0      		breq .L172
 2382 007a 2F30      		cpi r18,lo8(15)
 2383 007c 01F4      		brne .L189
 2384               	.L172:
 563:../../tmk_core/common/action.c ****             }
 564:../../tmk_core/common/action.c ****             return false;
 565:../../tmk_core/common/action.c ****         case ACT_MACRO:
 566:../../tmk_core/common/action.c ****         case ACT_FUNCTION:
 567:../../tmk_core/common/action.c ****             if (action.func.opt & FUNC_TAP) { return true; }
 2385               		.loc 1 567 13 is_stmt 1 view .LVU585
 2386               		.loc 1 567 16 is_stmt 0 view .LVU586
 2387 007e 93FB      		bst r25,3
 2388 0080 8827      		clr r24
 2389 0082 80F9      		bld r24,0
 2390               	.LVL327:
 2391               	.L164:
 2392               	/* epilogue start */
 568:../../tmk_core/common/action.c ****             return false;
 569:../../tmk_core/common/action.c ****     }
 570:../../tmk_core/common/action.c ****     return false;
 571:../../tmk_core/common/action.c **** }
 2393               		.loc 1 571 1 view .LVU587
 2394 0084 0F90      		pop __tmp_reg__
 2395 0086 0F90      		pop __tmp_reg__
 2396 0088 0F90      		pop __tmp_reg__
 2397 008a 0F90      		pop __tmp_reg__
 2398 008c 0F90      		pop __tmp_reg__
 2399 008e DF91      		pop r29
 2400 0090 CF91      		pop r28
 2401 0092 0895      		ret
 2402               		.cfi_endproc
 2403               	.LFE112:
 2405               		.section	.text.debug_event,"ax",@progbits
 2406               	.global	debug_event
 2408               	debug_event:
 2409               	.LFB113:
 572:../../tmk_core/common/action.c **** 
 573:../../tmk_core/common/action.c **** 
 574:../../tmk_core/common/action.c **** /*
 575:../../tmk_core/common/action.c ****  * debug print
 576:../../tmk_core/common/action.c ****  */
 577:../../tmk_core/common/action.c **** void debug_event(keyevent_t event)
 578:../../tmk_core/common/action.c **** {
 2410               		.loc 1 578 1 is_stmt 1 view -0
 2411               		.cfi_startproc
 2412 0000 CF93      		push r28
 2413               	.LCFI22:
 2414               		.cfi_def_cfa_offset 3
 2415               		.cfi_offset 28, -2
 2416 0002 DF93      		push r29
 2417               	.LCFI23:
 2418               		.cfi_def_cfa_offset 4
 2419               		.cfi_offset 29, -3
 2420 0004 00D0      		rcall .
 2421 0006 00D0      		rcall .
 2422 0008 0F92      		push __tmp_reg__
 2423               	.LCFI24:
 2424               		.cfi_def_cfa_offset 9
 2425 000a CDB7      		in r28,__SP_L__
 2426 000c DEB7      		in r29,__SP_H__
 2427               	.LCFI25:
 2428               		.cfi_def_cfa_register 28
 2429               	/* prologue: function */
 2430               	/* frame size = 5 */
 2431               	/* stack size = 7 */
 2432               	.L__stack_usage = 7
 579:../../tmk_core/common/action.c ****     dprintf("%04X%c(%u)", (event.key.row<<8 | event.key.col), (event.pressed ? 'd' : 'u'), event.ti
 2433               		.loc 1 579 5 view .LVU589
 2434               	/* epilogue start */
 580:../../tmk_core/common/action.c **** }
 2435               		.loc 1 580 1 is_stmt 0 view .LVU590
 2436 000e 0F90      		pop __tmp_reg__
 2437 0010 0F90      		pop __tmp_reg__
 2438 0012 0F90      		pop __tmp_reg__
 2439 0014 0F90      		pop __tmp_reg__
 2440 0016 0F90      		pop __tmp_reg__
 2441 0018 DF91      		pop r29
 2442 001a CF91      		pop r28
 2443 001c 0895      		ret
 2444               		.cfi_endproc
 2445               	.LFE113:
 2447               		.section	.text.debug_record,"ax",@progbits
 2448               	.global	debug_record
 2450               	debug_record:
 2451               	.LFB114:
 581:../../tmk_core/common/action.c **** 
 582:../../tmk_core/common/action.c **** void debug_record(keyrecord_t record)
 583:../../tmk_core/common/action.c **** {
 2452               		.loc 1 583 1 is_stmt 1 view -0
 2453               		.cfi_startproc
 2454 0000 CF93      		push r28
 2455               	.LCFI26:
 2456               		.cfi_def_cfa_offset 3
 2457               		.cfi_offset 28, -2
 2458 0002 DF93      		push r29
 2459               	.LCFI27:
 2460               		.cfi_def_cfa_offset 4
 2461               		.cfi_offset 29, -3
 2462 0004 00D0      		rcall .
 2463 0006 00D0      		rcall .
 2464 0008 00D0      		rcall .
 2465               	.LCFI28:
 2466               		.cfi_def_cfa_offset 10
 2467 000a CDB7      		in r28,__SP_L__
 2468 000c DEB7      		in r29,__SP_H__
 2469               	.LCFI29:
 2470               		.cfi_def_cfa_register 28
 2471               	/* prologue: function */
 2472               	/* frame size = 6 */
 2473               	/* stack size = 8 */
 2474               	.L__stack_usage = 8
 584:../../tmk_core/common/action.c ****     debug_event(record.event);
 2475               		.loc 1 584 5 view .LVU592
 585:../../tmk_core/common/action.c **** #ifndef NO_ACTION_TAPPING
 586:../../tmk_core/common/action.c ****     dprintf(":%u%c", record.tap.count, (record.tap.interrupted ? '-' : ' '));
 2476               		.loc 1 586 5 view .LVU593
 2477               	/* epilogue start */
 587:../../tmk_core/common/action.c **** #endif
 588:../../tmk_core/common/action.c **** }
 2478               		.loc 1 588 1 is_stmt 0 view .LVU594
 2479 000e 2696      		adiw r28,6
 2480 0010 0FB6      		in __tmp_reg__,__SREG__
 2481 0012 F894      		cli
 2482 0014 DEBF      		out __SP_H__,r29
 2483 0016 0FBE      		out __SREG__,__tmp_reg__
 2484 0018 CDBF      		out __SP_L__,r28
 2485 001a DF91      		pop r29
 2486 001c CF91      		pop r28
 2487 001e 0895      		ret
 2488               		.cfi_endproc
 2489               	.LFE114:
 2491               		.section	.text.debug_action,"ax",@progbits
 2492               	.global	debug_action
 2494               	debug_action:
 2495               	.LVL328:
 2496               	.LFB115:
 589:../../tmk_core/common/action.c **** 
 590:../../tmk_core/common/action.c **** void debug_action(action_t action)
 591:../../tmk_core/common/action.c **** {
 2497               		.loc 1 591 1 is_stmt 1 view -0
 2498               		.cfi_startproc
 2499               	/* prologue: function */
 2500               	/* frame size = 0 */
 2501               	/* stack size = 0 */
 2502               	.L__stack_usage = 0
 592:../../tmk_core/common/action.c ****     switch (action.kind.id) {
 2503               		.loc 1 592 5 view .LVU596
 593:../../tmk_core/common/action.c ****         case ACT_LMODS:             dprint("ACT_LMODS");             break;
 594:../../tmk_core/common/action.c ****         case ACT_RMODS:             dprint("ACT_RMODS");             break;
 595:../../tmk_core/common/action.c ****         case ACT_LMODS_TAP:         dprint("ACT_LMODS_TAP");         break;
 596:../../tmk_core/common/action.c ****         case ACT_RMODS_TAP:         dprint("ACT_RMODS_TAP");         break;
 597:../../tmk_core/common/action.c ****         case ACT_USAGE:             dprint("ACT_USAGE");             break;
 598:../../tmk_core/common/action.c ****         case ACT_MOUSEKEY:          dprint("ACT_MOUSEKEY");          break;
 599:../../tmk_core/common/action.c ****         case ACT_LAYER:             dprint("ACT_LAYER");             break;
 600:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP:         dprint("ACT_LAYER_TAP");         break;
 601:../../tmk_core/common/action.c ****         case ACT_LAYER_TAP_EXT:     dprint("ACT_LAYER_TAP_EXT");     break;
 602:../../tmk_core/common/action.c ****         case ACT_MACRO:             dprint("ACT_MACRO");             break;
 603:../../tmk_core/common/action.c ****         case ACT_COMMAND:           dprint("ACT_COMMAND");           break;
 604:../../tmk_core/common/action.c ****         case ACT_FUNCTION:          dprint("ACT_FUNCTION");          break;
 605:../../tmk_core/common/action.c ****         default:                    dprint("UNKNOWN");               break;
 606:../../tmk_core/common/action.c ****     }
 607:../../tmk_core/common/action.c ****     dprintf("[%X:%02X]", action.kind.param>>8, action.kind.param&0xff);
 2504               		.loc 1 607 5 view .LVU597
 2505               	/* epilogue start */
 608:../../tmk_core/common/action.c **** }
 2506               		.loc 1 608 1 is_stmt 0 view .LVU598
 2507 0000 0895      		ret
 2508               		.cfi_endproc
 2509               	.LFE115:
 2511               		.text
 2512               	.Letext0:
 2513               		.file 3 "/usr/avr/include/stdint.h"
 2514               		.file 4 "../../tmk_core/common/keycode.h"
 2515               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 2516               		.file 6 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 2517               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 2518               		.file 8 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 2519               		.file 9 "/usr/avr/include/stdio.h"
 2520               		.file 10 "../../tmk_core/common/report.h"
 2521               		.file 11 "../../tmk_core/common/host.h"
 2522               		.file 12 "../../tmk_core/common/mousekey.h"
 2523               		.file 13 "../../tmk_core/common/command.h"
 2524               		.file 14 "../../tmk_core/common/action_code.h"
 2525               		.file 15 "../../tmk_core/common/action.h"
 2526               		.file 16 "../../tmk_core/common/action_layer.h"
 2527               		.file 17 "../../tmk_core/common/action_util.h"
 2528               		.file 18 "../../tmk_core/common/avr/xprintf.h"
 2529               		.file 19 "../../tmk_core/common/debug.h"
 2530               		.file 20 "../../tmk_core/common/action_macro.h"
 2531               		.file 21 "../../tmk_core/common/action_tapping.h"
 2532               		.file 22 "../../tmk_core/common/hook.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action.c
     /tmp/ccHdb85B.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccHdb85B.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccHdb85B.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccHdb85B.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccHdb85B.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccHdb85B.s:13     .text.action_exec:0000000000000000 action_exec
     /tmp/ccHdb85B.s:122    .text.register_code:0000000000000000 register_code
     /tmp/ccHdb85B.s:364    .text.unregister_code:0000000000000000 unregister_code
     /tmp/ccHdb85B.s:454    .text.type_code:0000000000000000 type_code
     /tmp/ccHdb85B.s:488    .text.register_mods:0000000000000000 register_mods
     /tmp/ccHdb85B.s:517    .text.unregister_mods:0000000000000000 unregister_mods
     /tmp/ccHdb85B.s:546    .text.process_action:0000000000000000 process_action
     /tmp/ccHdb85B.s:2201   .text.clear_keyboard_but_mods:0000000000000000 clear_keyboard_but_mods
     /tmp/ccHdb85B.s:2240   .text.clear_keyboard:0000000000000000 clear_keyboard
     /tmp/ccHdb85B.s:2260   .text.is_tap_key:0000000000000000 is_tap_key
     /tmp/ccHdb85B.s:2408   .text.debug_event:0000000000000000 debug_event
     /tmp/ccHdb85B.s:2450   .text.debug_record:0000000000000000 debug_record
     /tmp/ccHdb85B.s:2494   .text.debug_action:0000000000000000 debug_action

UNDEFINED SYMBOLS
action_tapping_process
hook_matrix_change
command_proc
add_key
send_keyboard_report
add_mods
host_system_send
host_consumer_send
del_key
del_mods
add_weak_mods
del_weak_mods
set_oneshot_mods
clear_oneshot_mods
get_mods
mousekey_on
mousekey_send
mousekey_off
default_layer_and
default_layer_xor
default_layer_or
layer_and
layer_xor
layer_or
layer_move
layer_on
layer_off
layer_invert
layer_clear
action_get_macro
action_macro_play
action_function
layer_switch_get_action
layer_debug
default_layer_debug
__tablejump2__
clear_weak_mods
clear_keys
mousekey_clear
clear_mods
