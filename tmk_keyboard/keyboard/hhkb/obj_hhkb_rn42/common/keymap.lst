   1               		.file	"keymap.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               		.weak	action_get_macro
  13               	action_get_macro:
  14               	.LVL0:
  15               	.LFB104:
  16               		.file 1 "../../tmk_core/common/keymap.c"
   1:../../tmk_core/common/keymap.c **** /*
   2:../../tmk_core/common/keymap.c **** Copyright 2013,2016 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keymap.c **** 
   4:../../tmk_core/common/keymap.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keymap.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keymap.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keymap.c **** (at your option) any later version.
   8:../../tmk_core/common/keymap.c **** 
   9:../../tmk_core/common/keymap.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keymap.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keymap.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keymap.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keymap.c **** 
  14:../../tmk_core/common/keymap.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keymap.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keymap.c **** */
  17:../../tmk_core/common/keymap.c **** #include "keymap.h"
  18:../../tmk_core/common/keymap.c **** #include "report.h"
  19:../../tmk_core/common/keymap.c **** #include "keycode.h"
  20:../../tmk_core/common/keymap.c **** #include "action_layer.h"
  21:../../tmk_core/common/keymap.c **** #include "action.h"
  22:../../tmk_core/common/keymap.c **** #include "action_macro.h"
  23:../../tmk_core/common/keymap.c **** #include "wait.h"
  24:../../tmk_core/common/keymap.c **** #include "debug.h"
  25:../../tmk_core/common/keymap.c **** #include "bootloader.h"
  26:../../tmk_core/common/keymap.c **** #if defined(__AVR__)
  27:../../tmk_core/common/keymap.c **** #include <avr/pgmspace.h>
  28:../../tmk_core/common/keymap.c **** #endif
  29:../../tmk_core/common/keymap.c **** 
  30:../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  31:../../tmk_core/common/keymap.c **** extern keymap_config_t keymap_config;
  32:../../tmk_core/common/keymap.c **** #endif
  33:../../tmk_core/common/keymap.c **** 
  34:../../tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode);
  35:../../tmk_core/common/keymap.c **** 
  36:../../tmk_core/common/keymap.c **** 
  37:../../tmk_core/common/keymap.c **** /* converts key to action */
  38:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
  39:../../tmk_core/common/keymap.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  40:../../tmk_core/common/keymap.c **** {
  41:../../tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
  42:../../tmk_core/common/keymap.c ****     switch (keycode) {
  43:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
  44:../../tmk_core/common/keymap.c ****             return keymap_fn_to_action(keycode);
  45:../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  46:../../tmk_core/common/keymap.c ****         case KC_CAPSLOCK:
  47:../../tmk_core/common/keymap.c ****         case KC_LOCKING_CAPS:
  48:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock || keymap_config.capslock_to_control) {
  49:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
  50:../../tmk_core/common/keymap.c ****             }
  51:../../tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
  52:../../tmk_core/common/keymap.c ****         case KC_LCTL:
  53:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock) {
  54:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
  55:../../tmk_core/common/keymap.c ****             }
  56:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LCTL);
  57:../../tmk_core/common/keymap.c ****         case KC_LALT:
  58:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  59:../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  60:../../tmk_core/common/keymap.c ****                     return keycode_to_action(KC_NO);
  61:../../tmk_core/common/keymap.c ****                 }
  62:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LGUI);
  63:../../tmk_core/common/keymap.c ****             }
  64:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LALT);
  65:../../tmk_core/common/keymap.c ****         case KC_LGUI:
  66:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  67:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
  68:../../tmk_core/common/keymap.c ****             }
  69:../../tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  70:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_NO);
  71:../../tmk_core/common/keymap.c ****             }
  72:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LGUI);
  73:../../tmk_core/common/keymap.c ****         case KC_RALT:
  74:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  75:../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  76:../../tmk_core/common/keymap.c ****                     return keycode_to_action(KC_NO);
  77:../../tmk_core/common/keymap.c ****                 }
  78:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RGUI);
  79:../../tmk_core/common/keymap.c ****             }
  80:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_RALT);
  81:../../tmk_core/common/keymap.c ****         case KC_RGUI:
  82:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  83:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
  84:../../tmk_core/common/keymap.c ****             }
  85:../../tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  86:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_NO);
  87:../../tmk_core/common/keymap.c ****             }
  88:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_RGUI);
  89:../../tmk_core/common/keymap.c ****         case KC_GRAVE:
  90:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  91:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
  92:../../tmk_core/common/keymap.c ****             }
  93:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_GRAVE);
  94:../../tmk_core/common/keymap.c ****         case KC_ESC:
  95:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  96:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
  97:../../tmk_core/common/keymap.c ****             }
  98:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_ESC);
  99:../../tmk_core/common/keymap.c ****         case KC_BSLASH:
 100:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 101:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
 102:../../tmk_core/common/keymap.c ****             }
 103:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSLASH);
 104:../../tmk_core/common/keymap.c ****         case KC_BSPACE:
 105:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 106:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 107:../../tmk_core/common/keymap.c ****             }
 108:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSPACE);
 109:../../tmk_core/common/keymap.c **** #endif
 110:../../tmk_core/common/keymap.c ****         default:
 111:../../tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
 112:../../tmk_core/common/keymap.c ****     }
 113:../../tmk_core/common/keymap.c **** }
 114:../../tmk_core/common/keymap.c **** 
 115:../../tmk_core/common/keymap.c **** 
 116:../../tmk_core/common/keymap.c **** /* Macro */
 117:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 118:../../tmk_core/common/keymap.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 119:../../tmk_core/common/keymap.c **** {
  17               		.loc 1 119 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 120:../../tmk_core/common/keymap.c ****     (void)record;
  23               		.loc 1 120 5 view .LVU1
 121:../../tmk_core/common/keymap.c ****     (void)id;
  24               		.loc 1 121 5 view .LVU2
 122:../../tmk_core/common/keymap.c ****     (void)opt;
  25               		.loc 1 122 5 view .LVU3
 123:../../tmk_core/common/keymap.c ****     return MACRO_NONE;
  26               		.loc 1 123 5 view .LVU4
 124:../../tmk_core/common/keymap.c **** }
  27               		.loc 1 124 1 is_stmt 0 view .LVU5
  28 0000 90E0      		ldi r25,0
  29 0002 80E0      		ldi r24,0
  30               	.LVL1:
  31               	/* epilogue start */
  32               		.loc 1 124 1 view .LVU6
  33 0004 0895      		ret
  34               		.cfi_endproc
  35               	.LFE104:
  37               		.section	.text.action_function,"ax",@progbits
  38               		.weak	action_function
  40               	action_function:
  41               	.LVL2:
  42               	.LFB105:
 125:../../tmk_core/common/keymap.c **** 
 126:../../tmk_core/common/keymap.c **** /* Function */
 127:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 128:../../tmk_core/common/keymap.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 129:../../tmk_core/common/keymap.c **** {
  43               		.loc 1 129 1 is_stmt 1 view -0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
 130:../../tmk_core/common/keymap.c ****     (void)record;
  49               		.loc 1 130 5 view .LVU8
 131:../../tmk_core/common/keymap.c ****     (void)id;
  50               		.loc 1 131 5 view .LVU9
 132:../../tmk_core/common/keymap.c ****     (void)opt;
  51               		.loc 1 132 5 view .LVU10
  52               	/* epilogue start */
 133:../../tmk_core/common/keymap.c **** }
  53               		.loc 1 133 1 is_stmt 0 view .LVU11
  54 0000 0895      		ret
  55               		.cfi_endproc
  56               	.LFE105:
  58               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  59               		.weak	keymap_key_to_keycode
  61               	keymap_key_to_keycode:
  62               	.LVL3:
  63               	.LFB107:
 134:../../tmk_core/common/keymap.c **** 
 135:../../tmk_core/common/keymap.c **** 
 136:../../tmk_core/common/keymap.c **** 
 137:../../tmk_core/common/keymap.c **** /* translates keycode to action */
 138:../../tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode)
 139:../../tmk_core/common/keymap.c **** {
 140:../../tmk_core/common/keymap.c ****     switch (keycode) {
 141:../../tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 142:../../tmk_core/common/keymap.c ****         case KC_LCTRL ... KC_RGUI:
 143:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_KEY(keycode);
 144:../../tmk_core/common/keymap.c ****             break;
 145:../../tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 146:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 147:../../tmk_core/common/keymap.c ****             break;
 148:../../tmk_core/common/keymap.c ****         case KC_AUDIO_MUTE ... KC_WWW_FAVORITES:
 149:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 150:../../tmk_core/common/keymap.c ****             break;
 151:../../tmk_core/common/keymap.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
 152:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_MOUSEKEY(keycode);
 153:../../tmk_core/common/keymap.c ****             break;
 154:../../tmk_core/common/keymap.c ****         case KC_TRNS:
 155:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_TRANSPARENT;
 156:../../tmk_core/common/keymap.c ****             break;
 157:../../tmk_core/common/keymap.c ****         case KC_BOOTLOADER:
 158:../../tmk_core/common/keymap.c ****             clear_keyboard();
 159:../../tmk_core/common/keymap.c ****             wait_ms(50);
 160:../../tmk_core/common/keymap.c ****             bootloader_jump(); // not return
 161:../../tmk_core/common/keymap.c ****             break;
 162:../../tmk_core/common/keymap.c ****         default:
 163:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 164:../../tmk_core/common/keymap.c ****             break;
 165:../../tmk_core/common/keymap.c ****     }
 166:../../tmk_core/common/keymap.c ****     return (action_t)ACTION_NO;
 167:../../tmk_core/common/keymap.c **** }
 168:../../tmk_core/common/keymap.c **** 
 169:../../tmk_core/common/keymap.c **** 
 170:../../tmk_core/common/keymap.c **** 
 171:../../tmk_core/common/keymap.c **** #ifdef USE_LEGACY_KEYMAP
 172:../../tmk_core/common/keymap.c **** /*
 173:../../tmk_core/common/keymap.c ****  * Legacy keymap support
 174:../../tmk_core/common/keymap.c ****  *      Consider using new keymap API instead.
 175:../../tmk_core/common/keymap.c ****  */
 176:../../tmk_core/common/keymap.c **** extern const uint8_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 177:../../tmk_core/common/keymap.c **** extern const uint8_t fn_layer[];
 178:../../tmk_core/common/keymap.c **** extern const uint8_t fn_keycode[];
 179:../../tmk_core/common/keymap.c **** 
 180:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 181:../../tmk_core/common/keymap.c **** uint8_t keymap_get_keycode(uint8_t layer, uint8_t row, uint8_t col)
 182:../../tmk_core/common/keymap.c **** {
 183:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&keymaps[(layer)][(row)][(col)]);
 184:../../tmk_core/common/keymap.c **** }
 185:../../tmk_core/common/keymap.c **** 
 186:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 187:../../tmk_core/common/keymap.c **** uint8_t keymap_fn_layer(uint8_t index)
 188:../../tmk_core/common/keymap.c **** {
 189:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&fn_layer[index]);
 190:../../tmk_core/common/keymap.c **** }
 191:../../tmk_core/common/keymap.c **** 
 192:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 193:../../tmk_core/common/keymap.c **** uint8_t keymap_fn_keycode(uint8_t index)
 194:../../tmk_core/common/keymap.c **** {
 195:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&fn_keycode[index]);
 196:../../tmk_core/common/keymap.c **** }
 197:../../tmk_core/common/keymap.c **** 
 198:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 199:../../tmk_core/common/keymap.c **** uint8_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 200:../../tmk_core/common/keymap.c **** {
 201:../../tmk_core/common/keymap.c ****     return keymap_get_keycode(layer, key.row, key.col);
 202:../../tmk_core/common/keymap.c **** }
 203:../../tmk_core/common/keymap.c **** 
 204:../../tmk_core/common/keymap.c **** 
 205:../../tmk_core/common/keymap.c **** /* Legacy keymap support */
 206:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 207:../../tmk_core/common/keymap.c **** action_t keymap_fn_to_action(uint8_t keycode)
 208:../../tmk_core/common/keymap.c **** {
 209:../../tmk_core/common/keymap.c ****     switch (keycode) {
 210:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 211:../../tmk_core/common/keymap.c ****             {
 212:../../tmk_core/common/keymap.c ****                 uint8_t layer = keymap_fn_layer(FN_INDEX(keycode));
 213:../../tmk_core/common/keymap.c ****                 uint8_t key = keymap_fn_keycode(FN_INDEX(keycode));
 214:../../tmk_core/common/keymap.c ****                 if (key) {
 215:../../tmk_core/common/keymap.c ****                     return (action_t)ACTION_LAYER_TAP_KEY(layer, key);
 216:../../tmk_core/common/keymap.c ****                 } else {
 217:../../tmk_core/common/keymap.c ****                     return (action_t)ACTION_LAYER_MOMENTARY(layer);
 218:../../tmk_core/common/keymap.c ****                 }
 219:../../tmk_core/common/keymap.c ****             }
 220:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 221:../../tmk_core/common/keymap.c ****         default:
 222:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 223:../../tmk_core/common/keymap.c ****     }
 224:../../tmk_core/common/keymap.c **** }
 225:../../tmk_core/common/keymap.c **** 
 226:../../tmk_core/common/keymap.c **** #else
 227:../../tmk_core/common/keymap.c **** 
 228:../../tmk_core/common/keymap.c **** /* user keymaps should be defined somewhere */
 229:../../tmk_core/common/keymap.c **** extern const uint8_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 230:../../tmk_core/common/keymap.c **** extern const action_t fn_actions[];
 231:../../tmk_core/common/keymap.c **** 
 232:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 233:../../tmk_core/common/keymap.c **** uint8_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 234:../../tmk_core/common/keymap.c **** {
  64               		.loc 1 234 1 is_stmt 1 view -0
  65               		.cfi_startproc
  66               	/* prologue: function */
  67               	/* frame size = 0 */
  68               	/* stack size = 0 */
  69               	.L__stack_usage = 0
 235:../../tmk_core/common/keymap.c **** #if defined(__AVR__)
 236:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&keymaps[(layer)][(key.row)][(key.col)]);
  70               		.loc 1 236 5 view .LVU13
  71               	.LBB4:
  72               		.loc 1 236 12 view .LVU14
  73               		.loc 1 236 12 view .LVU15
  74               		.loc 1 236 12 view .LVU16
  75 0000 28E0      		ldi r18,lo8(8)
  76 0002 829F      		mul r24,r18
  77 0004 C001      		movw r24,r0
  78 0006 1124      		clr __zero_reg__
  79               	.LVL4:
  80               		.loc 1 236 12 is_stmt 0 view .LVU17
  81 0008 FC01      		movw r30,r24
  82 000a E70F      		add r30,r23
  83 000c F11D      		adc r31,__zero_reg__
  84 000e 83E0      		ldi r24,3
  85               		1:
  86 0010 EE0F      		lsl r30
  87 0012 FF1F      		rol r31
  88 0014 8A95      		dec r24
  89 0016 01F4      		brne 1b
  90 0018 E60F      		add r30,r22
  91 001a F11D      		adc r31,__zero_reg__
  92 001c E050      		subi r30,lo8(-(keymaps))
  93 001e F040      		sbci r31,hi8(-(keymaps))
  94               	/* #APP */
  95               	 ;  236 "../../tmk_core/common/keymap.c" 1
  96 0020 8491      		lpm r24, Z
  97               		
  98               	 ;  0 "" 2
  99               	.LVL5:
 100               		.loc 1 236 12 is_stmt 1 view .LVU18
 101               	/* #NOAPP */
 102               	/* epilogue start */
 103               	.LBE4:
 237:../../tmk_core/common/keymap.c **** #else
 238:../../tmk_core/common/keymap.c ****     return keymaps[(layer)][(key.row)][(key.col)];
 239:../../tmk_core/common/keymap.c **** #endif
 240:../../tmk_core/common/keymap.c **** }
 104               		.loc 1 240 1 is_stmt 0 view .LVU19
 105 0022 0895      		ret
 106               		.cfi_endproc
 107               	.LFE107:
 109               		.section	.text.keymap_fn_to_action,"ax",@progbits
 110               		.weak	keymap_fn_to_action
 112               	keymap_fn_to_action:
 113               	.LVL6:
 114               	.LFB108:
 241:../../tmk_core/common/keymap.c **** 
 242:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 243:../../tmk_core/common/keymap.c **** action_t keymap_fn_to_action(uint8_t keycode)
 244:../../tmk_core/common/keymap.c **** {
 115               		.loc 1 244 1 is_stmt 1 view -0
 116               		.cfi_startproc
 117               	/* prologue: function */
 118               	/* frame size = 0 */
 119               	/* stack size = 0 */
 120               	.L__stack_usage = 0
 245:../../tmk_core/common/keymap.c **** #if defined(__AVR__)
 246:../../tmk_core/common/keymap.c ****     return (action_t)pgm_read_word(&fn_actions[FN_INDEX(keycode)]);
 121               		.loc 1 246 5 view .LVU21
 122               	.LBB5:
 123               		.loc 1 246 22 view .LVU22
 124 0000 282F      		mov r18,r24
 125 0002 205C      		subi r18,192
 126 0004 330B      		sbc r19,r19
 127 0006 F901      		movw r30,r18
 128 0008 EE0F      		lsl r30
 129 000a FF1F      		rol r31
 130               	.LVL7:
 131               		.loc 1 246 22 is_stmt 0 view .LVU23
 132 000c E050      		subi r30,lo8(-(fn_actions))
 133 000e F040      		sbci r31,hi8(-(fn_actions))
 134               	.LVL8:
 135               		.loc 1 246 22 is_stmt 1 view .LVU24
 136               		.loc 1 246 22 view .LVU25
 137               	/* #APP */
 138               	 ;  246 "../../tmk_core/common/keymap.c" 1
 139 0010 8591      		lpm r24, Z+
 140 0012 9491      		lpm r25, Z
 141               		
 142               	 ;  0 "" 2
 143               	.LVL9:
 144               		.loc 1 246 22 view .LVU26
 145               	/* #NOAPP */
 146               	/* epilogue start */
 147               	.LBE5:
 247:../../tmk_core/common/keymap.c **** #else
 248:../../tmk_core/common/keymap.c ****     return fn_actions[FN_INDEX(keycode)];
 249:../../tmk_core/common/keymap.c **** #endif
 250:../../tmk_core/common/keymap.c **** }
 148               		.loc 1 250 1 is_stmt 0 view .LVU27
 149 0014 0895      		ret
 150               		.cfi_endproc
 151               	.LFE108:
 153               		.section	.text.action_for_key,"ax",@progbits
 154               		.weak	action_for_key
 156               	action_for_key:
 157               	.LVL10:
 158               	.LFB103:
  40:../../tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
 159               		.loc 1 40 1 is_stmt 1 view -0
 160               		.cfi_startproc
 161               	/* prologue: function */
 162               	/* frame size = 0 */
 163               	/* stack size = 0 */
 164               	.L__stack_usage = 0
  41:../../tmk_core/common/keymap.c ****     switch (keycode) {
 165               		.loc 1 41 5 view .LVU29
  41:../../tmk_core/common/keymap.c ****     switch (keycode) {
 166               		.loc 1 41 23 is_stmt 0 view .LVU30
 167 0000 0E94 0000 		call keymap_key_to_keycode
 168               	.LVL11:
  42:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 169               		.loc 1 42 5 is_stmt 1 view .LVU31
 170 0004 282F      		mov r18,r24
 171 0006 30E0      		ldi r19,0
 172 0008 A901      		movw r20,r18
 173 000a 405C      		subi r20,-64
 174 000c 5109      		sbc r21,__zero_reg__
 175 000e 4032      		cpi r20,32
 176 0010 5105      		cpc r21,__zero_reg__
 177 0012 00F4      		brsh .L6
  44:../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
 178               		.loc 1 44 13 view .LVU32
  44:../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
 179               		.loc 1 44 20 is_stmt 0 view .LVU33
 180 0014 0C94 0000 		jmp keymap_fn_to_action
 181               	.LVL12:
 182               	.L6:
 111:../../tmk_core/common/keymap.c ****     }
 183               		.loc 1 111 13 is_stmt 1 view .LVU34
 184               	.LBB10:
 185               	.LBI10:
 138:../../tmk_core/common/keymap.c **** {
 186               		.loc 1 138 17 view .LVU35
 187               	.LBB11:
 140:../../tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 188               		.loc 1 140 5 view .LVU36
 189 0018 8D3B      		cpi r24,lo8(-67)
 190 001a 00F4      		brsh .L7
 191 001c 883A      		cpi r24,lo8(-88)
 192 001e 00F4      		brsh .L8
 193 0020 853A      		cpi r24,lo8(-91)
 194 0022 00F4      		brsh .L9
 195 0024 8430      		cpi r24,lo8(4)
 196 0026 00F4      		brsh .L10
 197 0028 8130      		cpi r24,lo8(1)
 198 002a 01F4      		brne .+2
 199 002c 00C0      		rjmp .L17
 200               	.LVL13:
 201               	.L18:
 163:../../tmk_core/common/keymap.c ****             break;
 202               		.loc 1 163 20 is_stmt 0 view .LVU37
 203 002e 90E0      		ldi r25,0
 204 0030 80E0      		ldi r24,0
 205               	/* epilogue start */
 206               	.LBE11:
 207               	.LBE10:
 113:../../tmk_core/common/keymap.c **** 
 208               		.loc 1 113 1 view .LVU38
 209 0032 0895      		ret
 210               	.LVL14:
 211               	.L7:
 113:../../tmk_core/common/keymap.c **** 
 212               		.loc 1 113 1 view .LVU39
 213 0034 883E      		cpi r24,lo8(-24)
 214 0036 00F4      		brsh .L12
 215 0038 803E      		cpi r24,lo8(-32)
 216 003a 00F4      		brsh .L10
 217 003c 8F3B      		cpi r24,lo8(-65)
 218 003e 01F4      		brne .L18
 219               	.LBB15:
 220               	.LBB14:
 156:../../tmk_core/common/keymap.c ****         case KC_BOOTLOADER:
 221               		.loc 1 156 13 is_stmt 1 view .LVU40
 158:../../tmk_core/common/keymap.c ****             wait_ms(50);
 222               		.loc 1 158 13 view .LVU41
 223 0040 0E94 0000 		call clear_keyboard
 224               	.LVL15:
 159:../../tmk_core/common/keymap.c ****             bootloader_jump(); // not return
 225               		.loc 1 159 13 view .LVU42
 226               	.LBB12:
 227               	.LBI12:
 228               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 229               		.loc 2 166 1 view .LVU43
 230               	.LBB13:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 231               		.loc 2 168 2 view .LVU44
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 232               		.loc 2 172 2 view .LVU45
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 233               		.loc 2 173 2 view .LVU46
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 234               		.loc 2 174 2 view .LVU47
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 235               		.loc 2 184 3 view .LVU48
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 236               		.loc 2 187 2 view .LVU49
 237 0044 2FEF      		ldi r18,lo8(159999)
 238 0046 80E7      		ldi r24,hi8(159999)
 239 0048 92E0      		ldi r25,hlo8(159999)
 240 004a 2150      	1:	subi r18,1
 241 004c 8040      		sbci r24,0
 242 004e 9040      		sbci r25,0
 243 0050 01F4      		brne 1b
 244 0052 00C0      		rjmp .
 245 0054 0000      		nop
 246               	.LVL16:
 247               		.loc 2 187 2 is_stmt 0 view .LVU50
 248               	.LBE13:
 249               	.LBE12:
 160:../../tmk_core/common/keymap.c ****             break;
 250               		.loc 1 160 13 is_stmt 1 view .LVU51
 251 0056 0E94 0000 		call bootloader_jump
 252               	.LVL17:
 161:../../tmk_core/common/keymap.c ****         default:
 253               		.loc 1 161 13 view .LVU52
 164:../../tmk_core/common/keymap.c ****     }
 254               		.loc 1 164 13 view .LVU53
 166:../../tmk_core/common/keymap.c **** }
 255               		.loc 1 166 5 view .LVU54
 256 005a 00C0      		rjmp .L18
 257               	.LVL18:
 258               	.L12:
 166:../../tmk_core/common/keymap.c **** }
 259               		.loc 1 166 5 is_stmt 0 view .LVU55
 260 005c 803F      		cpi r24,lo8(-16)
 261 005e 00F0      		brlo .L18
 150:../../tmk_core/common/keymap.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
 262               		.loc 1 150 13 is_stmt 1 view .LVU56
 152:../../tmk_core/common/keymap.c ****             break;
 263               		.loc 1 152 13 view .LVU57
 152:../../tmk_core/common/keymap.c ****             break;
 264               		.loc 1 152 30 is_stmt 0 view .LVU58
 265 0060 C901      		movw r24,r18
 266 0062 9065      		ori r25,80
 267 0064 0895      		ret
 268               	.L10:
 143:../../tmk_core/common/keymap.c ****             break;
 269               		.loc 1 143 13 is_stmt 1 view .LVU59
 143:../../tmk_core/common/keymap.c ****             break;
 270               		.loc 1 143 30 is_stmt 0 view .LVU60
 271 0066 C901      		movw r24,r18
 272 0068 0895      		ret
 273               	.L9:
 144:../../tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 274               		.loc 1 144 13 is_stmt 1 view .LVU61
 146:../../tmk_core/common/keymap.c ****             break;
 275               		.loc 1 146 13 view .LVU62
 146:../../tmk_core/common/keymap.c ****             break;
 276               		.loc 1 146 30 is_stmt 0 view .LVU63
 277 006a 853A      		cpi r24,lo8(-91)
 278 006c 01F0      		breq .L19
 279 006e 863A      		cpi r24,lo8(-90)
 280 0070 01F0      		breq .L20
 281 0072 83E8      		ldi r24,lo8(-125)
 282 0074 90E4      		ldi r25,lo8(64)
 283 0076 0895      		ret
 284               	.L19:
 146:../../tmk_core/common/keymap.c ****             break;
 285               		.loc 1 146 30 view .LVU64
 286 0078 81E8      		ldi r24,lo8(-127)
 287 007a 90E4      		ldi r25,lo8(64)
 288 007c 0895      		ret
 289               	.L20:
 146:../../tmk_core/common/keymap.c ****             break;
 290               		.loc 1 146 30 view .LVU65
 291 007e 82E8      		ldi r24,lo8(-126)
 292 0080 90E4      		ldi r25,lo8(64)
 293 0082 0895      		ret
 294               	.L8:
 147:../../tmk_core/common/keymap.c ****         case KC_AUDIO_MUTE ... KC_WWW_FAVORITES:
 295               		.loc 1 147 13 is_stmt 1 view .LVU66
 149:../../tmk_core/common/keymap.c ****             break;
 296               		.loc 1 149 13 view .LVU67
 149:../../tmk_core/common/keymap.c ****             break;
 297               		.loc 1 149 30 is_stmt 0 view .LVU68
 298 0084 883A      		cpi r24,lo8(-88)
 299 0086 01F4      		brne .+2
 300 0088 00C0      		rjmp .L21
 301 008a 893A      		cpi r24,lo8(-87)
 302 008c 01F4      		brne .+2
 303 008e 00C0      		rjmp .L22
 304 0090 8A3A      		cpi r24,lo8(-86)
 305 0092 01F4      		brne .+2
 306 0094 00C0      		rjmp .L23
 307 0096 8B3A      		cpi r24,lo8(-85)
 308 0098 01F4      		brne .+2
 309 009a 00C0      		rjmp .L24
 310 009c 8C3A      		cpi r24,lo8(-84)
 311 009e 01F4      		brne .+2
 312 00a0 00C0      		rjmp .L25
 313 00a2 8D3A      		cpi r24,lo8(-83)
 314 00a4 01F4      		brne .+2
 315 00a6 00C0      		rjmp .L26
 316 00a8 8E3A      		cpi r24,lo8(-82)
 317 00aa 01F4      		brne .+2
 318 00ac 00C0      		rjmp .L27
 319 00ae 8F3A      		cpi r24,lo8(-81)
 320 00b0 01F4      		brne .+2
 321 00b2 00C0      		rjmp .L28
 322 00b4 813B      		cpi r24,lo8(-79)
 323 00b6 01F4      		brne .+2
 324 00b8 00C0      		rjmp .L29
 325 00ba 803B      		cpi r24,lo8(-80)
 326 00bc 01F4      		brne .+2
 327 00be 00C0      		rjmp .L30
 328 00c0 823B      		cpi r24,lo8(-78)
 329 00c2 01F4      		brne .+2
 330 00c4 00C0      		rjmp .L31
 331 00c6 833B      		cpi r24,lo8(-77)
 332 00c8 01F4      		brne .+2
 333 00ca 00C0      		rjmp .L32
 334 00cc 843B      		cpi r24,lo8(-76)
 335 00ce 01F4      		brne .+2
 336 00d0 00C0      		rjmp .L33
 337 00d2 853B      		cpi r24,lo8(-75)
 338 00d4 01F4      		brne .+2
 339 00d6 00C0      		rjmp .L34
 340 00d8 863B      		cpi r24,lo8(-74)
 341 00da 01F4      		brne .+2
 342 00dc 00C0      		rjmp .L35
 343 00de 873B      		cpi r24,lo8(-73)
 344 00e0 01F4      		brne .+2
 345 00e2 00C0      		rjmp .L36
 346 00e4 883B      		cpi r24,lo8(-72)
 347 00e6 01F4      		brne .+2
 348 00e8 00C0      		rjmp .L37
 349 00ea 893B      		cpi r24,lo8(-71)
 350 00ec 01F4      		brne .+2
 351 00ee 00C0      		rjmp .L38
 352 00f0 8A3B      		cpi r24,lo8(-70)
 353 00f2 01F4      		brne .+2
 354 00f4 00C0      		rjmp .L39
 355 00f6 8B3B      		cpi r24,lo8(-69)
 356 00f8 01F4      		brne .+2
 357 00fa 00C0      		rjmp .L40
 358 00fc 8C3B      		cpi r24,lo8(-68)
 359 00fe 01F4      		brne .+2
 360 0100 00C0      		rjmp .L41
 361 0102 80E0      		ldi r24,0
 362 0104 94E4      		ldi r25,lo8(68)
 363 0106 0895      		ret
 364               	.L21:
 149:../../tmk_core/common/keymap.c ****             break;
 365               		.loc 1 149 30 view .LVU69
 366 0108 82EE      		ldi r24,lo8(-30)
 367 010a 94E4      		ldi r25,lo8(68)
 368 010c 0895      		ret
 369               	.L22:
 149:../../tmk_core/common/keymap.c ****             break;
 370               		.loc 1 149 30 view .LVU70
 371 010e 89EE      		ldi r24,lo8(-23)
 372 0110 94E4      		ldi r25,lo8(68)
 373 0112 0895      		ret
 374               	.L23:
 149:../../tmk_core/common/keymap.c ****             break;
 375               		.loc 1 149 30 view .LVU71
 376 0114 8AEE      		ldi r24,lo8(-22)
 377 0116 94E4      		ldi r25,lo8(68)
 378 0118 0895      		ret
 379               	.L24:
 149:../../tmk_core/common/keymap.c ****             break;
 380               		.loc 1 149 30 view .LVU72
 381 011a 85EB      		ldi r24,lo8(-75)
 382 011c 94E4      		ldi r25,lo8(68)
 383 011e 0895      		ret
 384               	.L25:
 149:../../tmk_core/common/keymap.c ****             break;
 385               		.loc 1 149 30 view .LVU73
 386 0120 86EB      		ldi r24,lo8(-74)
 387 0122 94E4      		ldi r25,lo8(68)
 388 0124 0895      		ret
 389               	.L26:
 149:../../tmk_core/common/keymap.c ****             break;
 390               		.loc 1 149 30 view .LVU74
 391 0126 83EB      		ldi r24,lo8(-77)
 392 0128 94E4      		ldi r25,lo8(68)
 393 012a 0895      		ret
 394               	.L27:
 149:../../tmk_core/common/keymap.c ****             break;
 395               		.loc 1 149 30 view .LVU75
 396 012c 84EB      		ldi r24,lo8(-76)
 397 012e 94E4      		ldi r25,lo8(68)
 398 0130 0895      		ret
 399               	.L28:
 149:../../tmk_core/common/keymap.c ****             break;
 400               		.loc 1 149 30 view .LVU76
 401 0132 87EB      		ldi r24,lo8(-73)
 402 0134 94E4      		ldi r25,lo8(68)
 403 0136 0895      		ret
 404               	.L29:
 149:../../tmk_core/common/keymap.c ****             break;
 405               		.loc 1 149 30 view .LVU77
 406 0138 8CEC      		ldi r24,lo8(-52)
 407 013a 94E4      		ldi r25,lo8(68)
 408 013c 0895      		ret
 409               	.L30:
 149:../../tmk_core/common/keymap.c ****             break;
 410               		.loc 1 149 30 view .LVU78
 411 013e 8DEC      		ldi r24,lo8(-51)
 412 0140 94E4      		ldi r25,lo8(68)
 413 0142 0895      		ret
 414               	.L31:
 149:../../tmk_core/common/keymap.c ****             break;
 415               		.loc 1 149 30 view .LVU79
 416 0144 83E8      		ldi r24,lo8(-125)
 417 0146 95E4      		ldi r25,lo8(69)
 418 0148 0895      		ret
 419               	.L32:
 149:../../tmk_core/common/keymap.c ****             break;
 420               		.loc 1 149 30 view .LVU80
 421 014a 8AE8      		ldi r24,lo8(-118)
 422 014c 95E4      		ldi r25,lo8(69)
 423 014e 0895      		ret
 424               	.L33:
 149:../../tmk_core/common/keymap.c ****             break;
 425               		.loc 1 149 30 view .LVU81
 426 0150 82E9      		ldi r24,lo8(-110)
 427 0152 95E4      		ldi r25,lo8(69)
 428 0154 0895      		ret
 429               	.L34:
 149:../../tmk_core/common/keymap.c ****             break;
 430               		.loc 1 149 30 view .LVU82
 431 0156 84E9      		ldi r24,lo8(-108)
 432 0158 95E4      		ldi r25,lo8(69)
 433 015a 0895      		ret
 434               	.L35:
 149:../../tmk_core/common/keymap.c ****             break;
 435               		.loc 1 149 30 view .LVU83
 436 015c 81E2      		ldi r24,lo8(33)
 437 015e 96E4      		ldi r25,lo8(70)
 438 0160 0895      		ret
 439               	.L36:
 149:../../tmk_core/common/keymap.c ****             break;
 440               		.loc 1 149 30 view .LVU84
 441 0162 83E2      		ldi r24,lo8(35)
 442 0164 96E4      		ldi r25,lo8(70)
 443 0166 0895      		ret
 444               	.L37:
 149:../../tmk_core/common/keymap.c ****             break;
 445               		.loc 1 149 30 view .LVU85
 446 0168 84E2      		ldi r24,lo8(36)
 447 016a 96E4      		ldi r25,lo8(70)
 448 016c 0895      		ret
 449               	.L38:
 149:../../tmk_core/common/keymap.c ****             break;
 450               		.loc 1 149 30 view .LVU86
 451 016e 85E2      		ldi r24,lo8(37)
 452 0170 96E4      		ldi r25,lo8(70)
 453 0172 0895      		ret
 454               	.L39:
 149:../../tmk_core/common/keymap.c ****             break;
 455               		.loc 1 149 30 view .LVU87
 456 0174 86E2      		ldi r24,lo8(38)
 457 0176 96E4      		ldi r25,lo8(70)
 458 0178 0895      		ret
 459               	.L40:
 149:../../tmk_core/common/keymap.c ****             break;
 460               		.loc 1 149 30 view .LVU88
 461 017a 87E2      		ldi r24,lo8(39)
 462 017c 96E4      		ldi r25,lo8(70)
 463 017e 0895      		ret
 464               	.L41:
 149:../../tmk_core/common/keymap.c ****             break;
 465               		.loc 1 149 30 view .LVU89
 466 0180 8AE2      		ldi r24,lo8(42)
 467 0182 96E4      		ldi r25,lo8(70)
 468 0184 0895      		ret
 469               	.L17:
 155:../../tmk_core/common/keymap.c ****             break;
 470               		.loc 1 155 20 view .LVU90
 471 0186 81E0      		ldi r24,lo8(1)
 472 0188 90E0      		ldi r25,0
 473 018a 0895      		ret
 474               	.LBE14:
 475               	.LBE15:
 476               		.cfi_endproc
 477               	.LFE103:
 479               		.text
 480               	.Letext0:
 481               		.file 3 "/usr/avr/include/stdint.h"
 482               		.file 4 "../../tmk_core/common/keyboard.h"
 483               		.file 5 "../../tmk_core/common/keycode.h"
 484               		.file 6 "../../tmk_core/common/action_code.h"
 485               		.file 7 "../../tmk_core/common/action_macro.h"
 486               		.file 8 "../../tmk_core/common/action.h"
 487               		.file 9 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 488               		.file 10 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 489               		.file 11 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 490               		.file 12 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 491               		.file 13 "/usr/avr/include/stdio.h"
 492               		.file 14 "../../tmk_core/common/action_layer.h"
 493               		.file 15 "../../tmk_core/common/avr/xprintf.h"
 494               		.file 16 "../../tmk_core/common/debug.h"
 495               		.file 17 "../../tmk_core/common/bootloader.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
     /tmp/ccl2j1PC.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccl2j1PC.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccl2j1PC.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccl2j1PC.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccl2j1PC.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccl2j1PC.s:13     .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccl2j1PC.s:40     .text.action_function:0000000000000000 action_function
     /tmp/ccl2j1PC.s:61     .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/ccl2j1PC.s:112    .text.keymap_fn_to_action:0000000000000000 keymap_fn_to_action
     /tmp/ccl2j1PC.s:156    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
keymaps
fn_actions
clear_keyboard
bootloader_jump
