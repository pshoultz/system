   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB113:
  14               		.file 1 "../../tmk_core/common/command.c"
   1:../../tmk_core/common/command.c **** /*
   2:../../tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/command.c **** 
   4:../../tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/command.c **** (at your option) any later version.
   8:../../tmk_core/common/command.c **** 
   9:../../tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/command.c **** GNU General Public License for more details.
  13:../../tmk_core/common/command.c **** 
  14:../../tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/command.c **** */
  17:../../tmk_core/common/command.c **** #include <stdint.h>
  18:../../tmk_core/common/command.c **** #include <stdbool.h>
  19:../../tmk_core/common/command.c **** #include "wait.h"
  20:../../tmk_core/common/command.c **** #include "keycode.h"
  21:../../tmk_core/common/command.c **** #include "host.h"
  22:../../tmk_core/common/command.c **** #include "keymap.h"
  23:../../tmk_core/common/command.c **** #include "print.h"
  24:../../tmk_core/common/command.c **** #include "debug.h"
  25:../../tmk_core/common/command.c **** #include "util.h"
  26:../../tmk_core/common/command.c **** #include "timer.h"
  27:../../tmk_core/common/command.c **** #include "keyboard.h"
  28:../../tmk_core/common/command.c **** #include "bootloader.h"
  29:../../tmk_core/common/command.c **** #include "action_layer.h"
  30:../../tmk_core/common/command.c **** #include "action_util.h"
  31:../../tmk_core/common/command.c **** #include "eeconfig.h"
  32:../../tmk_core/common/command.c **** #include "sleep_led.h"
  33:../../tmk_core/common/command.c **** #include "led.h"
  34:../../tmk_core/common/command.c **** #include "command.h"
  35:../../tmk_core/common/command.c **** #include "backlight.h"
  36:../../tmk_core/common/command.c **** 
  37:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  38:../../tmk_core/common/command.c **** #include "mousekey.h"
  39:../../tmk_core/common/command.c **** #endif
  40:../../tmk_core/common/command.c **** 
  41:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  42:../../tmk_core/common/command.c **** #   include "usb_keyboard.h"
  43:../../tmk_core/common/command.c **** #   ifdef EXTRAKEY_ENABLE
  44:../../tmk_core/common/command.c **** #       include "usb_extra.h"
  45:../../tmk_core/common/command.c **** #   endif
  46:../../tmk_core/common/command.c **** #endif
  47:../../tmk_core/common/command.c **** 
  48:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  49:../../tmk_core/common/command.c **** #   include "usbdrv.h"
  50:../../tmk_core/common/command.c **** #endif
  51:../../tmk_core/common/command.c **** 
  52:../../tmk_core/common/command.c **** 
  53:../../tmk_core/common/command.c **** static bool command_common(uint8_t code);
  54:../../tmk_core/common/command.c **** static void command_common_help(void);
  55:../../tmk_core/common/command.c **** static bool command_console(uint8_t code);
  56:../../tmk_core/common/command.c **** static void command_console_help(void);
  57:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  58:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  59:../../tmk_core/common/command.c **** static void mousekey_console_help(void);
  60:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code);
  61:../../tmk_core/common/command.c **** #endif
  62:../../tmk_core/common/command.c **** 
  63:../../tmk_core/common/command.c **** 
  64:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  65:../../tmk_core/common/command.c **** 
  66:../../tmk_core/common/command.c **** 
  67:../../tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  68:../../tmk_core/common/command.c **** 
  69:../../tmk_core/common/command.c **** 
  70:../../tmk_core/common/command.c **** bool command_proc(uint8_t code)
  71:../../tmk_core/common/command.c **** {
  72:../../tmk_core/common/command.c ****     switch (command_state) {
  73:../../tmk_core/common/command.c ****         case ONESHOT:
  74:../../tmk_core/common/command.c ****             if (!IS_COMMAND())
  75:../../tmk_core/common/command.c ****                 return false;
  76:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  77:../../tmk_core/common/command.c ****             break;
  78:../../tmk_core/common/command.c ****         case CONSOLE:
  79:../../tmk_core/common/command.c ****             if (IS_COMMAND())
  80:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  81:../../tmk_core/common/command.c ****             else
  82:../../tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  83:../../tmk_core/common/command.c ****             break;
  84:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  85:../../tmk_core/common/command.c ****         case MOUSEKEY:
  86:../../tmk_core/common/command.c ****             mousekey_console(code);
  87:../../tmk_core/common/command.c ****             break;
  88:../../tmk_core/common/command.c **** #endif
  89:../../tmk_core/common/command.c ****         default:
  90:../../tmk_core/common/command.c ****             command_state = ONESHOT;
  91:../../tmk_core/common/command.c ****             return false;
  92:../../tmk_core/common/command.c ****     }
  93:../../tmk_core/common/command.c ****     return true;
  94:../../tmk_core/common/command.c **** }
  95:../../tmk_core/common/command.c **** 
  96:../../tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
  97:../../tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
  98:../../tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
  99:../../tmk_core/common/command.c **** bool command_extra(uint8_t code)
 100:../../tmk_core/common/command.c **** {
 101:../../tmk_core/common/command.c ****     (void)code;
 102:../../tmk_core/common/command.c ****     return false;
 103:../../tmk_core/common/command.c **** }
 104:../../tmk_core/common/command.c **** 
 105:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 106:../../tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 107:../../tmk_core/common/command.c **** {
 108:../../tmk_core/common/command.c ****     (void)code;
 109:../../tmk_core/common/command.c ****     return false;
 110:../../tmk_core/common/command.c **** }
 111:../../tmk_core/common/command.c **** 
 112:../../tmk_core/common/command.c **** 
 113:../../tmk_core/common/command.c **** /***********************************************************
 114:../../tmk_core/common/command.c ****  * Command common
 115:../../tmk_core/common/command.c ****  ***********************************************************/
 116:../../tmk_core/common/command.c **** static void command_common_help(void)
 117:../../tmk_core/common/command.c **** {
 118:../../tmk_core/common/command.c ****     print("\n\t- Magic -\n"
 119:../../tmk_core/common/command.c ****           "d:	debug\n"
 120:../../tmk_core/common/command.c ****           "x:	debug matrix\n"
 121:../../tmk_core/common/command.c ****           "k:	debug keyboard\n"
 122:../../tmk_core/common/command.c ****           "m:	debug mouse\n"
 123:../../tmk_core/common/command.c ****           "v:	version\n"
 124:../../tmk_core/common/command.c ****           "s:	status\n"
 125:../../tmk_core/common/command.c ****           "c:	console mode\n"
 126:../../tmk_core/common/command.c ****           "0-4:	layer0-4(F10-F4)\n"
 127:../../tmk_core/common/command.c ****           "Paus:	bootloader\n"
 128:../../tmk_core/common/command.c **** 
 129:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 130:../../tmk_core/common/command.c ****           "Caps:	Lock\n"
 131:../../tmk_core/common/command.c **** #endif
 132:../../tmk_core/common/command.c **** 
 133:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 134:../../tmk_core/common/command.c ****           "e:	eeprom\n"
 135:../../tmk_core/common/command.c **** #endif
 136:../../tmk_core/common/command.c **** 
 137:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 138:../../tmk_core/common/command.c ****           "n:	NKRO\n"
 139:../../tmk_core/common/command.c **** #endif
 140:../../tmk_core/common/command.c **** 
 141:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 142:../../tmk_core/common/command.c ****           "z:	sleep LED test\n"
 143:../../tmk_core/common/command.c **** #endif
 144:../../tmk_core/common/command.c ****     );
 145:../../tmk_core/common/command.c **** }
 146:../../tmk_core/common/command.c **** 
 147:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 148:../../tmk_core/common/command.c **** static void print_eeconfig(void)
 149:../../tmk_core/common/command.c **** {
 150:../../tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 151:../../tmk_core/common/command.c **** 
 152:../../tmk_core/common/command.c ****     debug_config_t dc;
 153:../../tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 154:../../tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 155:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 156:../../tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 157:../../tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 158:../../tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 159:../../tmk_core/common/command.c **** 
 160:../../tmk_core/common/command.c ****     keymap_config_t kc;
 161:../../tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 162:../../tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 163:../../tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 164:../../tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 165:../../tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 166:../../tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 167:../../tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 168:../../tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 169:../../tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 170:../../tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 171:../../tmk_core/common/command.c **** 
 172:../../tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 173:../../tmk_core/common/command.c ****     backlight_config_t bc;
 174:../../tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 175:../../tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 176:../../tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 177:../../tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 178:../../tmk_core/common/command.c **** #endif
 179:../../tmk_core/common/command.c **** }
 180:../../tmk_core/common/command.c **** #endif
 181:../../tmk_core/common/command.c **** 
 182:../../tmk_core/common/command.c **** static bool command_common(uint8_t code)
 183:../../tmk_core/common/command.c **** {
 184:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 185:../../tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 186:../../tmk_core/common/command.c **** #endif
 187:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 188:../../tmk_core/common/command.c ****     static bool sleep_led_test = false;
 189:../../tmk_core/common/command.c **** #endif
 190:../../tmk_core/common/command.c ****     switch (code) {
 191:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 192:../../tmk_core/common/command.c ****         case KC_Z:
 193:../../tmk_core/common/command.c ****             // test breathing sleep LED
 194:../../tmk_core/common/command.c ****             print("Sleep LED test\n");
 195:../../tmk_core/common/command.c ****             if (sleep_led_test) {
 196:../../tmk_core/common/command.c ****                 sleep_led_disable();
 197:../../tmk_core/common/command.c ****                 led_set(host_keyboard_leds());
 198:../../tmk_core/common/command.c ****             } else {
 199:../../tmk_core/common/command.c ****                 sleep_led_enable();
 200:../../tmk_core/common/command.c ****             }
 201:../../tmk_core/common/command.c ****             sleep_led_test = !sleep_led_test;
 202:../../tmk_core/common/command.c ****             break;
 203:../../tmk_core/common/command.c **** #endif
 204:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 205:../../tmk_core/common/command.c ****         case KC_E:
 206:../../tmk_core/common/command.c ****             print("eeconfig:\n");
 207:../../tmk_core/common/command.c ****             print_eeconfig();
 208:../../tmk_core/common/command.c ****             break;
 209:../../tmk_core/common/command.c **** #endif
 210:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 211:../../tmk_core/common/command.c ****         case KC_CAPSLOCK:
 212:../../tmk_core/common/command.c ****             if (host_get_driver()) {
 213:../../tmk_core/common/command.c ****                 host_driver = host_get_driver();
 214:../../tmk_core/common/command.c ****                 clear_keyboard();
 215:../../tmk_core/common/command.c ****                 host_set_driver(0);
 216:../../tmk_core/common/command.c ****                 print("Locked.\n");
 217:../../tmk_core/common/command.c ****             } else {
 218:../../tmk_core/common/command.c ****                 host_set_driver(host_driver);
 219:../../tmk_core/common/command.c ****                 print("Unlocked.\n");
 220:../../tmk_core/common/command.c ****             }
 221:../../tmk_core/common/command.c ****             break;
 222:../../tmk_core/common/command.c **** #endif
 223:../../tmk_core/common/command.c ****         case KC_H:
 224:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 225:../../tmk_core/common/command.c ****             command_common_help();
 226:../../tmk_core/common/command.c ****             break;
 227:../../tmk_core/common/command.c ****         case KC_C:
 228:../../tmk_core/common/command.c ****             debug_matrix   = false;
 229:../../tmk_core/common/command.c ****             debug_keyboard = false;
 230:../../tmk_core/common/command.c ****             debug_mouse    = false;
 231:../../tmk_core/common/command.c ****             debug_enable   = false;
 232:../../tmk_core/common/command.c ****             command_console_help();
 233:../../tmk_core/common/command.c ****             print("C> ");
 234:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 235:../../tmk_core/common/command.c ****             break;
 236:../../tmk_core/common/command.c ****         case KC_PAUSE:
 237:../../tmk_core/common/command.c ****             clear_keyboard();
 238:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 239:../../tmk_core/common/command.c ****             wait_ms(1000);
 240:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 241:../../tmk_core/common/command.c ****             break;
 242:../../tmk_core/common/command.c ****         case KC_D:
 243:../../tmk_core/common/command.c ****             if (debug_enable) {
 244:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 245:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 246:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 247:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 248:../../tmk_core/common/command.c ****                 debug_enable   = false;
 249:../../tmk_core/common/command.c ****             } else {
 250:../../tmk_core/common/command.c ****                 print("\ndebug: on\n");
 251:../../tmk_core/common/command.c ****                 debug_enable   = true;
 252:../../tmk_core/common/command.c ****             }
 253:../../tmk_core/common/command.c ****             break;
 254:../../tmk_core/common/command.c ****         case KC_X: // debug matrix toggle
 255:../../tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 256:../../tmk_core/common/command.c ****             if (debug_matrix) {
 257:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 258:../../tmk_core/common/command.c ****                 debug_enable = true;
 259:../../tmk_core/common/command.c ****             } else {
 260:../../tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 261:../../tmk_core/common/command.c ****             }
 262:../../tmk_core/common/command.c ****             break;
 263:../../tmk_core/common/command.c ****         case KC_K: // debug keyboard toggle
 264:../../tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 265:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 266:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 267:../../tmk_core/common/command.c ****                 debug_enable = true;
 268:../../tmk_core/common/command.c ****             } else {
 269:../../tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 270:../../tmk_core/common/command.c ****             }
 271:../../tmk_core/common/command.c ****             break;
 272:../../tmk_core/common/command.c ****         case KC_M: // debug mouse toggle
 273:../../tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 274:../../tmk_core/common/command.c ****             if (debug_mouse) {
 275:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 276:../../tmk_core/common/command.c ****                 debug_enable = true;
 277:../../tmk_core/common/command.c ****             } else {
 278:../../tmk_core/common/command.c ****                 print("\nmouse: off\n");
 279:../../tmk_core/common/command.c ****             }
 280:../../tmk_core/common/command.c ****             break;
 281:../../tmk_core/common/command.c ****         case KC_V: // print version & information
 282:../../tmk_core/common/command.c ****             print("\n\t- Version -\n");
 283:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 284:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 285:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 286:../../tmk_core/common/command.c ****                   "VER: " STR(DEVICE_VER) "\n");
 287:../../tmk_core/common/command.c ****             print("BUILD: " STR(VERSION) " (" __TIME__ " " __DATE__ ")\n");
 288:../../tmk_core/common/command.c ****             /* build options */
 289:../../tmk_core/common/command.c ****             print("OPTIONS:"
 290:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 291:../../tmk_core/common/command.c ****             " PJRC"
 292:../../tmk_core/common/command.c **** #endif
 293:../../tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 294:../../tmk_core/common/command.c ****             " LUFA"
 295:../../tmk_core/common/command.c **** #endif
 296:../../tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 297:../../tmk_core/common/command.c ****             " VUSB"
 298:../../tmk_core/common/command.c **** #endif
 299:../../tmk_core/common/command.c **** #ifdef PROTOCOL_CHIBIOS
 300:../../tmk_core/common/command.c ****             " CHIBIOS"
 301:../../tmk_core/common/command.c **** #endif
 302:../../tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 303:../../tmk_core/common/command.c ****             " BOOTMAGIC"
 304:../../tmk_core/common/command.c **** #endif
 305:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 306:../../tmk_core/common/command.c ****             " MOUSEKEY"
 307:../../tmk_core/common/command.c **** #endif
 308:../../tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 309:../../tmk_core/common/command.c ****             " EXTRAKEY"
 310:../../tmk_core/common/command.c **** #endif
 311:../../tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 312:../../tmk_core/common/command.c ****             " CONSOLE"
 313:../../tmk_core/common/command.c **** #endif
 314:../../tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 315:../../tmk_core/common/command.c ****             " COMMAND"
 316:../../tmk_core/common/command.c **** #endif
 317:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 318:../../tmk_core/common/command.c ****             " NKRO"
 319:../../tmk_core/common/command.c **** #endif
 320:../../tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 321:../../tmk_core/common/command.c ****             " KEYMAP_SECTION"
 322:../../tmk_core/common/command.c **** #endif
 323:../../tmk_core/common/command.c ****             " " STR(BOOTLOADER_SIZE) "\n");
 324:../../tmk_core/common/command.c **** 
 325:../../tmk_core/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 326:../../tmk_core/common/command.c **** #if defined(__AVR__)
 327:../../tmk_core/common/command.c ****                   " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 328:../../tmk_core/common/command.c ****                   " AVR_ARCH: avr" STR(__AVR_ARCH__) "\n");
 329:../../tmk_core/common/command.c **** #elif defined(__arm__)
 330:../../tmk_core/common/command.c ****             // TODO
 331:../../tmk_core/common/command.c ****             );
 332:../../tmk_core/common/command.c **** #endif
 333:../../tmk_core/common/command.c ****             break;
 334:../../tmk_core/common/command.c ****         case KC_S:
 335:../../tmk_core/common/command.c ****             print("\n\t- Status -\n");
 336:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 338:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 339:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 340:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_nkro);
 341:../../tmk_core/common/command.c **** #endif
 342:../../tmk_core/common/command.c ****             print_val_hex32(timer_read32());
 343:../../tmk_core/common/command.c **** 
 344:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 345:../../tmk_core/common/command.c ****             print_val_hex8(UDCON);
 346:../../tmk_core/common/command.c ****             print_val_hex8(UDIEN);
 347:../../tmk_core/common/command.c ****             print_val_hex8(UDINT);
 348:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_leds);
 349:../../tmk_core/common/command.c ****             print_val_hex8(usb_keyboard_idle_count);
 350:../../tmk_core/common/command.c **** #endif
 351:../../tmk_core/common/command.c **** 
 352:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 353:../../tmk_core/common/command.c **** #   if USB_COUNT_SOF
 354:../../tmk_core/common/command.c ****             print_val_hex8(usbSofCount);
 355:../../tmk_core/common/command.c **** #   endif
 356:../../tmk_core/common/command.c **** #endif
 357:../../tmk_core/common/command.c ****             break;
 358:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 359:../../tmk_core/common/command.c ****         case KC_N:
 360:../../tmk_core/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 361:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 362:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 363:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 364:../../tmk_core/common/command.c ****             } else {
 365:../../tmk_core/common/command.c ****                 print("NKRO: off\n");
 366:../../tmk_core/common/command.c ****             }
 367:../../tmk_core/common/command.c ****             break;
 368:../../tmk_core/common/command.c **** #endif
 369:../../tmk_core/common/command.c ****         case KC_ESC:
 370:../../tmk_core/common/command.c ****         case KC_GRV:
 371:../../tmk_core/common/command.c ****         case KC_0:
 372:../../tmk_core/common/command.c ****         case KC_F10:
 373:../../tmk_core/common/command.c ****             switch_default_layer(0);
 374:../../tmk_core/common/command.c ****             break;
 375:../../tmk_core/common/command.c ****         case KC_1 ... KC_9:
 376:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 377:../../tmk_core/common/command.c ****             break;
 378:../../tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 379:../../tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 380:../../tmk_core/common/command.c ****             break;
 381:../../tmk_core/common/command.c ****         default:
 382:../../tmk_core/common/command.c ****             print("?");
 383:../../tmk_core/common/command.c ****             return false;
 384:../../tmk_core/common/command.c ****     }
 385:../../tmk_core/common/command.c ****     return true;
 386:../../tmk_core/common/command.c **** }
 387:../../tmk_core/common/command.c **** 
 388:../../tmk_core/common/command.c **** 
 389:../../tmk_core/common/command.c **** /***********************************************************
 390:../../tmk_core/common/command.c ****  * Command console
 391:../../tmk_core/common/command.c ****  ***********************************************************/
 392:../../tmk_core/common/command.c **** static void command_console_help(void)
 393:../../tmk_core/common/command.c **** {
 394:../../tmk_core/common/command.c ****     print("\n\t- Console -\n"
 395:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 396:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 397:../../tmk_core/common/command.c ****           "m:	mousekey\n"
 398:../../tmk_core/common/command.c **** #endif
 399:../../tmk_core/common/command.c ****     );
 400:../../tmk_core/common/command.c **** }
 401:../../tmk_core/common/command.c **** 
 402:../../tmk_core/common/command.c **** static bool command_console(uint8_t code)
 403:../../tmk_core/common/command.c **** {
 404:../../tmk_core/common/command.c ****     switch (code) {
 405:../../tmk_core/common/command.c ****         case KC_H:
 406:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 407:../../tmk_core/common/command.c ****             command_console_help();
 408:../../tmk_core/common/command.c ****             break;
 409:../../tmk_core/common/command.c ****         case KC_Q:
 410:../../tmk_core/common/command.c ****         case KC_ESC:
 411:../../tmk_core/common/command.c ****             command_state = ONESHOT;
 412:../../tmk_core/common/command.c ****             return false;
 413:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 414:../../tmk_core/common/command.c ****         case KC_M:
 415:../../tmk_core/common/command.c ****             mousekey_console_help();
 416:../../tmk_core/common/command.c ****             print("M> ");
 417:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 418:../../tmk_core/common/command.c ****             return true;
 419:../../tmk_core/common/command.c **** #endif
 420:../../tmk_core/common/command.c ****         default:
 421:../../tmk_core/common/command.c ****             print("?");
 422:../../tmk_core/common/command.c ****             return false;
 423:../../tmk_core/common/command.c ****     }
 424:../../tmk_core/common/command.c ****     print("C> ");
 425:../../tmk_core/common/command.c ****     return true;
 426:../../tmk_core/common/command.c **** }
 427:../../tmk_core/common/command.c **** 
 428:../../tmk_core/common/command.c **** 
 429:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 430:../../tmk_core/common/command.c **** /***********************************************************
 431:../../tmk_core/common/command.c ****  * Mousekey console
 432:../../tmk_core/common/command.c ****  ***********************************************************/
 433:../../tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 434:../../tmk_core/common/command.c **** 
 435:../../tmk_core/common/command.c **** static void mousekey_param_print(void)
 436:../../tmk_core/common/command.c **** {
 437:../../tmk_core/common/command.c ****     print("\n\t- Values -\n");
 438:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 439:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 440:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 441:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 442:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 443:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 444:../../tmk_core/common/command.c **** }
 445:../../tmk_core/common/command.c **** 
 446:../../tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 447:../../tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 448:../../tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 449:../../tmk_core/common/command.c **** {
 450:../../tmk_core/common/command.c ****     switch (param) {
 451:../../tmk_core/common/command.c ****         case 1:
 452:../../tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 453:../../tmk_core/common/command.c ****                 mk_delay += inc;
 454:../../tmk_core/common/command.c ****             else
 455:../../tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 456:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 457:../../tmk_core/common/command.c ****             break;
 458:../../tmk_core/common/command.c ****         case 2:
 459:../../tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 460:../../tmk_core/common/command.c ****                 mk_interval += inc;
 461:../../tmk_core/common/command.c ****             else
 462:../../tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 463:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 464:../../tmk_core/common/command.c ****             break;
 465:../../tmk_core/common/command.c ****         case 3:
 466:../../tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 467:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 468:../../tmk_core/common/command.c ****             else
 469:../../tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 470:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 471:../../tmk_core/common/command.c ****             break;
 472:../../tmk_core/common/command.c ****         case 4:
 473:../../tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 474:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 475:../../tmk_core/common/command.c ****             else
 476:../../tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 477:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 478:../../tmk_core/common/command.c ****             break;
 479:../../tmk_core/common/command.c ****         case 5:
 480:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 481:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 482:../../tmk_core/common/command.c ****             else
 483:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 484:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 485:../../tmk_core/common/command.c ****             break;
 486:../../tmk_core/common/command.c ****         case 6:
 487:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 488:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 489:../../tmk_core/common/command.c ****             else
 490:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 491:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 492:../../tmk_core/common/command.c ****             break;
 493:../../tmk_core/common/command.c ****     }
 494:../../tmk_core/common/command.c **** }
 495:../../tmk_core/common/command.c **** 
 496:../../tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 497:../../tmk_core/common/command.c **** {
 498:../../tmk_core/common/command.c ****     switch (param) {
 499:../../tmk_core/common/command.c ****         case 1:
 500:../../tmk_core/common/command.c ****             if (mk_delay > dec)
 501:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 502:../../tmk_core/common/command.c ****             else
 503:../../tmk_core/common/command.c ****                 mk_delay = 0;
 504:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 505:../../tmk_core/common/command.c ****             break;
 506:../../tmk_core/common/command.c ****         case 2:
 507:../../tmk_core/common/command.c ****             if (mk_interval > dec)
 508:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 509:../../tmk_core/common/command.c ****             else
 510:../../tmk_core/common/command.c ****                 mk_interval = 0;
 511:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 512:../../tmk_core/common/command.c ****             break;
 513:../../tmk_core/common/command.c ****         case 3:
 514:../../tmk_core/common/command.c ****             if (mk_max_speed > dec)
 515:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 516:../../tmk_core/common/command.c ****             else
 517:../../tmk_core/common/command.c ****                 mk_max_speed = 0;
 518:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 519:../../tmk_core/common/command.c ****             break;
 520:../../tmk_core/common/command.c ****         case 4:
 521:../../tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 522:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 523:../../tmk_core/common/command.c ****             else
 524:../../tmk_core/common/command.c ****                 mk_time_to_max = 0;
 525:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 526:../../tmk_core/common/command.c ****             break;
 527:../../tmk_core/common/command.c ****         case 5:
 528:../../tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 529:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 530:../../tmk_core/common/command.c ****             else
 531:../../tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 532:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 533:../../tmk_core/common/command.c ****             break;
 534:../../tmk_core/common/command.c ****         case 6:
 535:../../tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 536:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 537:../../tmk_core/common/command.c ****             else
 538:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 539:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 540:../../tmk_core/common/command.c ****             break;
 541:../../tmk_core/common/command.c ****     }
 542:../../tmk_core/common/command.c **** }
 543:../../tmk_core/common/command.c **** 
 544:../../tmk_core/common/command.c **** static void mousekey_console_help(void)
 545:../../tmk_core/common/command.c **** {
  15               		.loc 1 545 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 546:../../tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 546 5 view .LVU1
  22               	.LBB29:
  23               		.loc 1 546 5 view .LVU2
  24               		.loc 1 546 5 view .LVU3
  25               	.LBE29:
  26 0000 80E0      		ldi r24,lo8(__c.5160)
  27 0002 90E0      		ldi r25,hi8(__c.5160)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 547:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 548:../../tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 549:../../tmk_core/common/command.c ****           "2:	interval(ms)\n"
 550:../../tmk_core/common/command.c ****           "3:	max_speed\n"
 551:../../tmk_core/common/command.c ****           "4:	time_to_max\n"
 552:../../tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 553:../../tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 554:../../tmk_core/common/command.c ****           "\n"
 555:../../tmk_core/common/command.c ****           "p:	print values\n"
 556:../../tmk_core/common/command.c ****           "d:	set defaults\n"
 557:../../tmk_core/common/command.c ****           "up:	+1\n"
 558:../../tmk_core/common/command.c ****           "down:	-1\n"
 559:../../tmk_core/common/command.c ****           "pgup:	+10\n"
 560:../../tmk_core/common/command.c ****           "pgdown:	-10\n"
 561:../../tmk_core/common/command.c ****           "\n"
 562:../../tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 563:../../tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n" 
  30               		.loc 1 563 5 view .LVU4
  31               	.LBB30:
  32               		.loc 1 563 5 view .LVU5
  33               		.loc 1 563 5 view .LVU6
  34               	.LBE30:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.5162)
  50 0016 90E0      		ldi r25,hi8(__c.5162)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 564:../../tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 565:../../tmk_core/common/command.c **** }
  59               		.loc 1 565 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE113:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB111:
 449:../../tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 449 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 450:../../tmk_core/common/command.c ****         case 1:
  84               		.loc 1 450 5 view .LVU9
  85 0000 8330      		cpi r24,lo8(3)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8130      		cpi r24,lo8(1)
  90 000a 01F0      		breq .L5
  91 000c 8230      		cpi r24,lo8(2)
  92 000e 01F0      		breq .L6
  93 0010 0895      		ret
  94               	.L4:
  95 0012 8530      		cpi r24,lo8(5)
  96 0014 01F4      		brne .+2
  97 0016 00C0      		rjmp .L8
  98 0018 00F4      		brsh .+2
  99 001a 00C0      		rjmp .L9
 100 001c 8630      		cpi r24,lo8(6)
 101 001e 01F4      		brne .+2
 102 0020 00C0      		rjmp .L10
 103 0022 0895      		ret
 104               	.L5:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 105               		.loc 1 452 13 view .LVU10
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 452 26 is_stmt 0 view .LVU11
 107 0024 8091 0000 		lds r24,mk_delay
 108               	.LVL3:
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 109               		.loc 1 452 26 view .LVU12
 110 0028 482F      		mov r20,r24
 111 002a 460F      		add r20,r22
 112 002c 5527      		clr r21
 113 002e 551F      		rol r21
 452:../../tmk_core/common/command.c ****                 mk_delay += inc;
 114               		.loc 1 452 16 view .LVU13
 115 0030 4F3F      		cpi r20,-1
 116 0032 5105      		cpc r21,__zero_reg__
 117 0034 04F4      		brge .L11
 453:../../tmk_core/common/command.c ****             else
 118               		.loc 1 453 17 is_stmt 1 view .LVU14
 453:../../tmk_core/common/command.c ****             else
 119               		.loc 1 453 26 is_stmt 0 view .LVU15
 120 0036 680F      		add r22,r24
 121               	.LVL4:
 453:../../tmk_core/common/command.c ****             else
 122               		.loc 1 453 26 view .LVU16
 123 0038 6093 0000 		sts mk_delay,r22
 124               	.L12:
 456:../../tmk_core/common/command.c ****             break;
 125               		.loc 1 456 13 is_stmt 1 view .LVU17
 126               	.LBB31:
 456:../../tmk_core/common/command.c ****             break;
 127               		.loc 1 456 13 view .LVU18
 456:../../tmk_core/common/command.c ****             break;
 128               		.loc 1 456 13 view .LVU19
 129               	.LBE31:
 130 003c 8091 0000 		lds r24,mk_delay
 131 0040 1F92      		push __zero_reg__
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 3
 134 0042 8F93      		push r24
 135               	.LCFI8:
 136               		.cfi_def_cfa_offset 4
 137 0044 80E0      		ldi r24,lo8(__c.5116)
 138 0046 90E0      		ldi r25,hi8(__c.5116)
 139               	.L23:
 491:../../tmk_core/common/command.c ****             break;
 140               		.loc 1 491 13 is_stmt 0 view .LVU20
 141 0048 9F93      		push r25
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 5
 144 004a 8F93      		push r24
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 004c 0E94 0000 		call __xprintf
 148               	.LVL5:
 492:../../tmk_core/common/command.c ****     }
 149               		.loc 1 492 13 is_stmt 1 view .LVU21
 150 0050 0F90      		pop __tmp_reg__
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154               	.LCFI11:
 155               		.cfi_def_cfa_offset 2
 156               	/* epilogue start */
 494:../../tmk_core/common/command.c **** 
 157               		.loc 1 494 1 is_stmt 0 view .LVU22
 158 0058 0895      		ret
 159               	.LVL6:
 160               	.L11:
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 161               		.loc 1 455 17 is_stmt 1 view .LVU23
 455:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 455 26 is_stmt 0 view .LVU24
 163 005a 8FEF      		ldi r24,lo8(-1)
 164 005c 8093 0000 		sts mk_delay,r24
 165 0060 00C0      		rjmp .L12
 166               	.LVL7:
 167               	.L6:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 168               		.loc 1 459 13 is_stmt 1 view .LVU25
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 459 29 is_stmt 0 view .LVU26
 170 0062 8091 0000 		lds r24,mk_interval
 171               	.LVL8:
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 172               		.loc 1 459 29 view .LVU27
 173 0066 482F      		mov r20,r24
 174 0068 460F      		add r20,r22
 175 006a 5527      		clr r21
 176 006c 551F      		rol r21
 459:../../tmk_core/common/command.c ****                 mk_interval += inc;
 177               		.loc 1 459 16 view .LVU28
 178 006e 4F3F      		cpi r20,-1
 179 0070 5105      		cpc r21,__zero_reg__
 180 0072 04F4      		brge .L13
 460:../../tmk_core/common/command.c ****             else
 181               		.loc 1 460 17 is_stmt 1 view .LVU29
 460:../../tmk_core/common/command.c ****             else
 182               		.loc 1 460 29 is_stmt 0 view .LVU30
 183 0074 680F      		add r22,r24
 184               	.LVL9:
 460:../../tmk_core/common/command.c ****             else
 185               		.loc 1 460 29 view .LVU31
 186 0076 6093 0000 		sts mk_interval,r22
 187               	.L14:
 463:../../tmk_core/common/command.c ****             break;
 188               		.loc 1 463 13 is_stmt 1 view .LVU32
 189               	.LBB32:
 463:../../tmk_core/common/command.c ****             break;
 190               		.loc 1 463 13 view .LVU33
 463:../../tmk_core/common/command.c ****             break;
 191               		.loc 1 463 13 view .LVU34
 192               	.LBE32:
 193 007a 8091 0000 		lds r24,mk_interval
 194 007e 1F92      		push __zero_reg__
 195               	.LCFI12:
 196               		.cfi_remember_state
 197               		.cfi_def_cfa_offset 3
 198 0080 8F93      		push r24
 199               	.LCFI13:
 200               		.cfi_def_cfa_offset 4
 201 0082 80E0      		ldi r24,lo8(__c.5120)
 202 0084 90E0      		ldi r25,hi8(__c.5120)
 203 0086 00C0      		rjmp .L23
 204               	.LVL10:
 205               	.L13:
 206               	.LCFI14:
 207               		.cfi_restore_state
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 208               		.loc 1 462 17 view .LVU35
 462:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 462 29 is_stmt 0 view .LVU36
 210 0088 8FEF      		ldi r24,lo8(-1)
 211 008a 8093 0000 		sts mk_interval,r24
 212 008e 00C0      		rjmp .L14
 213               	.LVL11:
 214               	.L3:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 215               		.loc 1 466 13 is_stmt 1 view .LVU37
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 466 30 is_stmt 0 view .LVU38
 217 0090 8091 0000 		lds r24,mk_max_speed
 218               	.LVL12:
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 219               		.loc 1 466 30 view .LVU39
 220 0094 482F      		mov r20,r24
 221 0096 460F      		add r20,r22
 222 0098 5527      		clr r21
 223 009a 551F      		rol r21
 466:../../tmk_core/common/command.c ****                 mk_max_speed += inc;
 224               		.loc 1 466 16 view .LVU40
 225 009c 4F3F      		cpi r20,-1
 226 009e 5105      		cpc r21,__zero_reg__
 227 00a0 04F4      		brge .L15
 467:../../tmk_core/common/command.c ****             else
 228               		.loc 1 467 17 is_stmt 1 view .LVU41
 467:../../tmk_core/common/command.c ****             else
 229               		.loc 1 467 30 is_stmt 0 view .LVU42
 230 00a2 680F      		add r22,r24
 231               	.LVL13:
 467:../../tmk_core/common/command.c ****             else
 232               		.loc 1 467 30 view .LVU43
 233 00a4 6093 0000 		sts mk_max_speed,r22
 234               	.L16:
 470:../../tmk_core/common/command.c ****             break;
 235               		.loc 1 470 13 is_stmt 1 view .LVU44
 236               	.LBB33:
 470:../../tmk_core/common/command.c ****             break;
 237               		.loc 1 470 13 view .LVU45
 470:../../tmk_core/common/command.c ****             break;
 238               		.loc 1 470 13 view .LVU46
 239               	.LBE33:
 240 00a8 8091 0000 		lds r24,mk_max_speed
 241 00ac 1F92      		push __zero_reg__
 242               	.LCFI15:
 243               		.cfi_remember_state
 244               		.cfi_def_cfa_offset 3
 245 00ae 8F93      		push r24
 246               	.LCFI16:
 247               		.cfi_def_cfa_offset 4
 248 00b0 80E0      		ldi r24,lo8(__c.5123)
 249 00b2 90E0      		ldi r25,hi8(__c.5123)
 250 00b4 00C0      		rjmp .L23
 251               	.LVL14:
 252               	.L15:
 253               	.LCFI17:
 254               		.cfi_restore_state
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 255               		.loc 1 469 17 view .LVU47
 469:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 469 30 is_stmt 0 view .LVU48
 257 00b6 8FEF      		ldi r24,lo8(-1)
 258 00b8 8093 0000 		sts mk_max_speed,r24
 259 00bc 00C0      		rjmp .L16
 260               	.LVL15:
 261               	.L9:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 262               		.loc 1 473 13 is_stmt 1 view .LVU49
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 473 32 is_stmt 0 view .LVU50
 264 00be 8091 0000 		lds r24,mk_time_to_max
 265               	.LVL16:
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 266               		.loc 1 473 32 view .LVU51
 267 00c2 482F      		mov r20,r24
 268 00c4 460F      		add r20,r22
 269 00c6 5527      		clr r21
 270 00c8 551F      		rol r21
 473:../../tmk_core/common/command.c ****                 mk_time_to_max += inc;
 271               		.loc 1 473 16 view .LVU52
 272 00ca 4F3F      		cpi r20,-1
 273 00cc 5105      		cpc r21,__zero_reg__
 274 00ce 04F4      		brge .L17
 474:../../tmk_core/common/command.c ****             else
 275               		.loc 1 474 17 is_stmt 1 view .LVU53
 474:../../tmk_core/common/command.c ****             else
 276               		.loc 1 474 32 is_stmt 0 view .LVU54
 277 00d0 680F      		add r22,r24
 278               	.LVL17:
 474:../../tmk_core/common/command.c ****             else
 279               		.loc 1 474 32 view .LVU55
 280 00d2 6093 0000 		sts mk_time_to_max,r22
 281               	.L18:
 477:../../tmk_core/common/command.c ****             break;
 282               		.loc 1 477 13 is_stmt 1 view .LVU56
 283               	.LBB34:
 477:../../tmk_core/common/command.c ****             break;
 284               		.loc 1 477 13 view .LVU57
 477:../../tmk_core/common/command.c ****             break;
 285               		.loc 1 477 13 view .LVU58
 286               	.LBE34:
 287 00d6 8091 0000 		lds r24,mk_time_to_max
 288 00da 1F92      		push __zero_reg__
 289               	.LCFI18:
 290               		.cfi_remember_state
 291               		.cfi_def_cfa_offset 3
 292 00dc 8F93      		push r24
 293               	.LCFI19:
 294               		.cfi_def_cfa_offset 4
 295 00de 80E0      		ldi r24,lo8(__c.5126)
 296 00e0 90E0      		ldi r25,hi8(__c.5126)
 297 00e2 00C0      		rjmp .L23
 298               	.LVL18:
 299               	.L17:
 300               	.LCFI20:
 301               		.cfi_restore_state
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 302               		.loc 1 476 17 view .LVU59
 476:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 476 32 is_stmt 0 view .LVU60
 304 00e4 8FEF      		ldi r24,lo8(-1)
 305 00e6 8093 0000 		sts mk_time_to_max,r24
 306 00ea 00C0      		rjmp .L18
 307               	.LVL19:
 308               	.L8:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 309               		.loc 1 480 13 is_stmt 1 view .LVU61
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 480 36 is_stmt 0 view .LVU62
 311 00ec 8091 0000 		lds r24,mk_wheel_max_speed
 312               	.LVL20:
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 313               		.loc 1 480 36 view .LVU63
 314 00f0 482F      		mov r20,r24
 315 00f2 460F      		add r20,r22
 316 00f4 5527      		clr r21
 317 00f6 551F      		rol r21
 480:../../tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 318               		.loc 1 480 16 view .LVU64
 319 00f8 4F3F      		cpi r20,-1
 320 00fa 5105      		cpc r21,__zero_reg__
 321 00fc 04F4      		brge .L19
 481:../../tmk_core/common/command.c ****             else
 322               		.loc 1 481 17 is_stmt 1 view .LVU65
 481:../../tmk_core/common/command.c ****             else
 323               		.loc 1 481 36 is_stmt 0 view .LVU66
 324 00fe 680F      		add r22,r24
 325               	.LVL21:
 481:../../tmk_core/common/command.c ****             else
 326               		.loc 1 481 36 view .LVU67
 327 0100 6093 0000 		sts mk_wheel_max_speed,r22
 328               	.L20:
 484:../../tmk_core/common/command.c ****             break;
 329               		.loc 1 484 13 is_stmt 1 view .LVU68
 330               	.LBB35:
 484:../../tmk_core/common/command.c ****             break;
 331               		.loc 1 484 13 view .LVU69
 484:../../tmk_core/common/command.c ****             break;
 332               		.loc 1 484 13 view .LVU70
 333               	.LBE35:
 334 0104 8091 0000 		lds r24,mk_wheel_max_speed
 335 0108 1F92      		push __zero_reg__
 336               	.LCFI21:
 337               		.cfi_remember_state
 338               		.cfi_def_cfa_offset 3
 339 010a 8F93      		push r24
 340               	.LCFI22:
 341               		.cfi_def_cfa_offset 4
 342 010c 80E0      		ldi r24,lo8(__c.5129)
 343 010e 90E0      		ldi r25,hi8(__c.5129)
 344 0110 00C0      		rjmp .L23
 345               	.LVL22:
 346               	.L19:
 347               	.LCFI23:
 348               		.cfi_restore_state
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 349               		.loc 1 483 17 view .LVU71
 483:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 483 36 is_stmt 0 view .LVU72
 351 0112 8FEF      		ldi r24,lo8(-1)
 352 0114 8093 0000 		sts mk_wheel_max_speed,r24
 353 0118 00C0      		rjmp .L20
 354               	.LVL23:
 355               	.L10:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 356               		.loc 1 487 13 is_stmt 1 view .LVU73
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 487 38 is_stmt 0 view .LVU74
 358 011a 8091 0000 		lds r24,mk_wheel_time_to_max
 359               	.LVL24:
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 360               		.loc 1 487 38 view .LVU75
 361 011e 482F      		mov r20,r24
 362 0120 460F      		add r20,r22
 363 0122 5527      		clr r21
 364 0124 551F      		rol r21
 487:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 365               		.loc 1 487 16 view .LVU76
 366 0126 4F3F      		cpi r20,-1
 367 0128 5105      		cpc r21,__zero_reg__
 368 012a 04F4      		brge .L21
 488:../../tmk_core/common/command.c ****             else
 369               		.loc 1 488 17 is_stmt 1 view .LVU77
 488:../../tmk_core/common/command.c ****             else
 370               		.loc 1 488 38 is_stmt 0 view .LVU78
 371 012c 680F      		add r22,r24
 372               	.LVL25:
 488:../../tmk_core/common/command.c ****             else
 373               		.loc 1 488 38 view .LVU79
 374 012e 6093 0000 		sts mk_wheel_time_to_max,r22
 375               	.L22:
 491:../../tmk_core/common/command.c ****             break;
 376               		.loc 1 491 13 is_stmt 1 view .LVU80
 377               	.LBB36:
 491:../../tmk_core/common/command.c ****             break;
 378               		.loc 1 491 13 view .LVU81
 491:../../tmk_core/common/command.c ****             break;
 379               		.loc 1 491 13 view .LVU82
 380               	.LBE36:
 381 0132 8091 0000 		lds r24,mk_wheel_time_to_max
 382 0136 1F92      		push __zero_reg__
 383               	.LCFI24:
 384               		.cfi_remember_state
 385               		.cfi_def_cfa_offset 3
 386 0138 8F93      		push r24
 387               	.LCFI25:
 388               		.cfi_def_cfa_offset 4
 389 013a 80E0      		ldi r24,lo8(__c.5132)
 390 013c 90E0      		ldi r25,hi8(__c.5132)
 391 013e 00C0      		rjmp .L23
 392               	.LVL26:
 393               	.L21:
 394               	.LCFI26:
 395               		.cfi_restore_state
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 396               		.loc 1 490 17 view .LVU83
 490:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 490 38 is_stmt 0 view .LVU84
 398 0140 8FEF      		ldi r24,lo8(-1)
 399 0142 8093 0000 		sts mk_wheel_time_to_max,r24
 400 0146 00C0      		rjmp .L22
 401               		.cfi_endproc
 402               	.LFE111:
 404               		.section	.text.mousekey_param_dec,"ax",@progbits
 406               	mousekey_param_dec:
 407               	.LVL27:
 408               	.LFB112:
 497:../../tmk_core/common/command.c ****     switch (param) {
 409               		.loc 1 497 1 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 498:../../tmk_core/common/command.c ****         case 1:
 415               		.loc 1 498 5 view .LVU86
 416 0000 8330      		cpi r24,lo8(3)
 417 0002 01F0      		breq .L25
 418 0004 00F4      		brsh .L26
 419 0006 8130      		cpi r24,lo8(1)
 420 0008 01F0      		breq .L27
 421 000a 8230      		cpi r24,lo8(2)
 422 000c 01F0      		breq .L28
 423 000e 0895      		ret
 424               	.L26:
 425 0010 8530      		cpi r24,lo8(5)
 426 0012 01F4      		brne .+2
 427 0014 00C0      		rjmp .L30
 428 0016 00F4      		brsh .+2
 429 0018 00C0      		rjmp .L31
 430 001a 8630      		cpi r24,lo8(6)
 431 001c 01F4      		brne .+2
 432 001e 00C0      		rjmp .L32
 433 0020 0895      		ret
 434               	.L27:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 435               		.loc 1 500 13 view .LVU87
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 436               		.loc 1 500 26 is_stmt 0 view .LVU88
 437 0022 8091 0000 		lds r24,mk_delay
 438               	.LVL28:
 500:../../tmk_core/common/command.c ****                 mk_delay -= dec;
 439               		.loc 1 500 16 view .LVU89
 440 0026 6817      		cp r22,r24
 441 0028 00F4      		brsh .L33
 501:../../tmk_core/common/command.c ****             else
 442               		.loc 1 501 17 is_stmt 1 view .LVU90
 501:../../tmk_core/common/command.c ****             else
 443               		.loc 1 501 26 is_stmt 0 view .LVU91
 444 002a 861B      		sub r24,r22
 445 002c 8093 0000 		sts mk_delay,r24
 446               	.L34:
 504:../../tmk_core/common/command.c ****             break;
 447               		.loc 1 504 13 is_stmt 1 view .LVU92
 448               	.LBB37:
 504:../../tmk_core/common/command.c ****             break;
 449               		.loc 1 504 13 view .LVU93
 504:../../tmk_core/common/command.c ****             break;
 450               		.loc 1 504 13 view .LVU94
 451               	.LBE37:
 452 0030 8091 0000 		lds r24,mk_delay
 453 0034 1F92      		push __zero_reg__
 454               	.LCFI27:
 455               		.cfi_def_cfa_offset 3
 456 0036 8F93      		push r24
 457               	.LCFI28:
 458               		.cfi_def_cfa_offset 4
 459 0038 80E0      		ldi r24,lo8(__c.5139)
 460 003a 90E0      		ldi r25,hi8(__c.5139)
 461               	.L45:
 539:../../tmk_core/common/command.c ****             break;
 462               		.loc 1 539 13 is_stmt 0 view .LVU95
 463 003c 9F93      		push r25
 464               	.LCFI29:
 465               		.cfi_def_cfa_offset 5
 466 003e 8F93      		push r24
 467               	.LCFI30:
 468               		.cfi_def_cfa_offset 6
 469 0040 0E94 0000 		call __xprintf
 470               	.LVL29:
 540:../../tmk_core/common/command.c ****     }
 471               		.loc 1 540 13 is_stmt 1 view .LVU96
 472 0044 0F90      		pop __tmp_reg__
 473 0046 0F90      		pop __tmp_reg__
 474 0048 0F90      		pop __tmp_reg__
 475 004a 0F90      		pop __tmp_reg__
 476               	.LCFI31:
 477               		.cfi_def_cfa_offset 2
 478               	/* epilogue start */
 542:../../tmk_core/common/command.c **** 
 479               		.loc 1 542 1 is_stmt 0 view .LVU97
 480 004c 0895      		ret
 481               	.LVL30:
 482               	.L33:
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 483               		.loc 1 503 17 is_stmt 1 view .LVU98
 503:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 484               		.loc 1 503 26 is_stmt 0 view .LVU99
 485 004e 1092 0000 		sts mk_delay,__zero_reg__
 486 0052 00C0      		rjmp .L34
 487               	.LVL31:
 488               	.L28:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 489               		.loc 1 507 13 is_stmt 1 view .LVU100
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 490               		.loc 1 507 29 is_stmt 0 view .LVU101
 491 0054 8091 0000 		lds r24,mk_interval
 492               	.LVL32:
 507:../../tmk_core/common/command.c ****                 mk_interval -= dec;
 493               		.loc 1 507 16 view .LVU102
 494 0058 6817      		cp r22,r24
 495 005a 00F4      		brsh .L35
 508:../../tmk_core/common/command.c ****             else
 496               		.loc 1 508 17 is_stmt 1 view .LVU103
 508:../../tmk_core/common/command.c ****             else
 497               		.loc 1 508 29 is_stmt 0 view .LVU104
 498 005c 861B      		sub r24,r22
 499 005e 8093 0000 		sts mk_interval,r24
 500               	.L36:
 511:../../tmk_core/common/command.c ****             break;
 501               		.loc 1 511 13 is_stmt 1 view .LVU105
 502               	.LBB38:
 511:../../tmk_core/common/command.c ****             break;
 503               		.loc 1 511 13 view .LVU106
 511:../../tmk_core/common/command.c ****             break;
 504               		.loc 1 511 13 view .LVU107
 505               	.LBE38:
 506 0062 8091 0000 		lds r24,mk_interval
 507 0066 1F92      		push __zero_reg__
 508               	.LCFI32:
 509               		.cfi_remember_state
 510               		.cfi_def_cfa_offset 3
 511 0068 8F93      		push r24
 512               	.LCFI33:
 513               		.cfi_def_cfa_offset 4
 514 006a 80E0      		ldi r24,lo8(__c.5143)
 515 006c 90E0      		ldi r25,hi8(__c.5143)
 516 006e 00C0      		rjmp .L45
 517               	.L35:
 518               	.LCFI34:
 519               		.cfi_restore_state
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 520               		.loc 1 510 17 view .LVU108
 510:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 521               		.loc 1 510 29 is_stmt 0 view .LVU109
 522 0070 1092 0000 		sts mk_interval,__zero_reg__
 523 0074 00C0      		rjmp .L36
 524               	.LVL33:
 525               	.L25:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 526               		.loc 1 514 13 is_stmt 1 view .LVU110
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 527               		.loc 1 514 30 is_stmt 0 view .LVU111
 528 0076 8091 0000 		lds r24,mk_max_speed
 529               	.LVL34:
 514:../../tmk_core/common/command.c ****                 mk_max_speed -= dec;
 530               		.loc 1 514 16 view .LVU112
 531 007a 6817      		cp r22,r24
 532 007c 00F4      		brsh .L37
 515:../../tmk_core/common/command.c ****             else
 533               		.loc 1 515 17 is_stmt 1 view .LVU113
 515:../../tmk_core/common/command.c ****             else
 534               		.loc 1 515 30 is_stmt 0 view .LVU114
 535 007e 861B      		sub r24,r22
 536 0080 8093 0000 		sts mk_max_speed,r24
 537               	.L38:
 518:../../tmk_core/common/command.c ****             break;
 538               		.loc 1 518 13 is_stmt 1 view .LVU115
 539               	.LBB39:
 518:../../tmk_core/common/command.c ****             break;
 540               		.loc 1 518 13 view .LVU116
 518:../../tmk_core/common/command.c ****             break;
 541               		.loc 1 518 13 view .LVU117
 542               	.LBE39:
 543 0084 8091 0000 		lds r24,mk_max_speed
 544 0088 1F92      		push __zero_reg__
 545               	.LCFI35:
 546               		.cfi_remember_state
 547               		.cfi_def_cfa_offset 3
 548 008a 8F93      		push r24
 549               	.LCFI36:
 550               		.cfi_def_cfa_offset 4
 551 008c 80E0      		ldi r24,lo8(__c.5146)
 552 008e 90E0      		ldi r25,hi8(__c.5146)
 553 0090 00C0      		rjmp .L45
 554               	.L37:
 555               	.LCFI37:
 556               		.cfi_restore_state
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 557               		.loc 1 517 17 view .LVU118
 517:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 558               		.loc 1 517 30 is_stmt 0 view .LVU119
 559 0092 1092 0000 		sts mk_max_speed,__zero_reg__
 560 0096 00C0      		rjmp .L38
 561               	.LVL35:
 562               	.L31:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 563               		.loc 1 521 13 is_stmt 1 view .LVU120
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 564               		.loc 1 521 32 is_stmt 0 view .LVU121
 565 0098 8091 0000 		lds r24,mk_time_to_max
 566               	.LVL36:
 521:../../tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 567               		.loc 1 521 16 view .LVU122
 568 009c 6817      		cp r22,r24
 569 009e 00F4      		brsh .L39
 522:../../tmk_core/common/command.c ****             else
 570               		.loc 1 522 17 is_stmt 1 view .LVU123
 522:../../tmk_core/common/command.c ****             else
 571               		.loc 1 522 32 is_stmt 0 view .LVU124
 572 00a0 861B      		sub r24,r22
 573 00a2 8093 0000 		sts mk_time_to_max,r24
 574               	.L40:
 525:../../tmk_core/common/command.c ****             break;
 575               		.loc 1 525 13 is_stmt 1 view .LVU125
 576               	.LBB40:
 525:../../tmk_core/common/command.c ****             break;
 577               		.loc 1 525 13 view .LVU126
 525:../../tmk_core/common/command.c ****             break;
 578               		.loc 1 525 13 view .LVU127
 579               	.LBE40:
 580 00a6 8091 0000 		lds r24,mk_time_to_max
 581 00aa 1F92      		push __zero_reg__
 582               	.LCFI38:
 583               		.cfi_remember_state
 584               		.cfi_def_cfa_offset 3
 585 00ac 8F93      		push r24
 586               	.LCFI39:
 587               		.cfi_def_cfa_offset 4
 588 00ae 80E0      		ldi r24,lo8(__c.5149)
 589 00b0 90E0      		ldi r25,hi8(__c.5149)
 590 00b2 00C0      		rjmp .L45
 591               	.L39:
 592               	.LCFI40:
 593               		.cfi_restore_state
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 594               		.loc 1 524 17 view .LVU128
 524:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 595               		.loc 1 524 32 is_stmt 0 view .LVU129
 596 00b4 1092 0000 		sts mk_time_to_max,__zero_reg__
 597 00b8 00C0      		rjmp .L40
 598               	.LVL37:
 599               	.L30:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 600               		.loc 1 528 13 is_stmt 1 view .LVU130
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 601               		.loc 1 528 36 is_stmt 0 view .LVU131
 602 00ba 8091 0000 		lds r24,mk_wheel_max_speed
 603               	.LVL38:
 528:../../tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 604               		.loc 1 528 16 view .LVU132
 605 00be 6817      		cp r22,r24
 606 00c0 00F4      		brsh .L41
 529:../../tmk_core/common/command.c ****             else
 607               		.loc 1 529 17 is_stmt 1 view .LVU133
 529:../../tmk_core/common/command.c ****             else
 608               		.loc 1 529 36 is_stmt 0 view .LVU134
 609 00c2 861B      		sub r24,r22
 610 00c4 8093 0000 		sts mk_wheel_max_speed,r24
 611               	.L42:
 532:../../tmk_core/common/command.c ****             break;
 612               		.loc 1 532 13 is_stmt 1 view .LVU135
 613               	.LBB41:
 532:../../tmk_core/common/command.c ****             break;
 614               		.loc 1 532 13 view .LVU136
 532:../../tmk_core/common/command.c ****             break;
 615               		.loc 1 532 13 view .LVU137
 616               	.LBE41:
 617 00c8 8091 0000 		lds r24,mk_wheel_max_speed
 618 00cc 1F92      		push __zero_reg__
 619               	.LCFI41:
 620               		.cfi_remember_state
 621               		.cfi_def_cfa_offset 3
 622 00ce 8F93      		push r24
 623               	.LCFI42:
 624               		.cfi_def_cfa_offset 4
 625 00d0 80E0      		ldi r24,lo8(__c.5152)
 626 00d2 90E0      		ldi r25,hi8(__c.5152)
 627 00d4 00C0      		rjmp .L45
 628               	.L41:
 629               	.LCFI43:
 630               		.cfi_restore_state
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 631               		.loc 1 531 17 view .LVU138
 531:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 632               		.loc 1 531 36 is_stmt 0 view .LVU139
 633 00d6 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 634 00da 00C0      		rjmp .L42
 635               	.LVL39:
 636               	.L32:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 637               		.loc 1 535 13 is_stmt 1 view .LVU140
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 638               		.loc 1 535 38 is_stmt 0 view .LVU141
 639 00dc 8091 0000 		lds r24,mk_wheel_time_to_max
 640               	.LVL40:
 535:../../tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 641               		.loc 1 535 16 view .LVU142
 642 00e0 6817      		cp r22,r24
 643 00e2 00F4      		brsh .L43
 536:../../tmk_core/common/command.c ****             else
 644               		.loc 1 536 17 is_stmt 1 view .LVU143
 536:../../tmk_core/common/command.c ****             else
 645               		.loc 1 536 38 is_stmt 0 view .LVU144
 646 00e4 861B      		sub r24,r22
 647 00e6 8093 0000 		sts mk_wheel_time_to_max,r24
 648               	.L44:
 539:../../tmk_core/common/command.c ****             break;
 649               		.loc 1 539 13 is_stmt 1 view .LVU145
 650               	.LBB42:
 539:../../tmk_core/common/command.c ****             break;
 651               		.loc 1 539 13 view .LVU146
 539:../../tmk_core/common/command.c ****             break;
 652               		.loc 1 539 13 view .LVU147
 653               	.LBE42:
 654 00ea 8091 0000 		lds r24,mk_wheel_time_to_max
 655 00ee 1F92      		push __zero_reg__
 656               	.LCFI44:
 657               		.cfi_remember_state
 658               		.cfi_def_cfa_offset 3
 659 00f0 8F93      		push r24
 660               	.LCFI45:
 661               		.cfi_def_cfa_offset 4
 662 00f2 80E0      		ldi r24,lo8(__c.5155)
 663 00f4 90E0      		ldi r25,hi8(__c.5155)
 664 00f6 00C0      		rjmp .L45
 665               	.L43:
 666               	.LCFI46:
 667               		.cfi_restore_state
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 668               		.loc 1 538 17 view .LVU148
 538:../../tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 669               		.loc 1 538 38 is_stmt 0 view .LVU149
 670 00f8 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 671 00fc 00C0      		rjmp .L44
 672               		.cfi_endproc
 673               	.LFE112:
 675               		.section	.text.switch_default_layer,"ax",@progbits
 677               	switch_default_layer:
 678               	.LVL41:
 679               	.LFB116:
 566:../../tmk_core/common/command.c **** 
 567:../../tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 568:../../tmk_core/common/command.c **** {
 569:../../tmk_core/common/command.c ****     switch (code) {
 570:../../tmk_core/common/command.c ****         case KC_H:
 571:../../tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 572:../../tmk_core/common/command.c ****             mousekey_console_help();
 573:../../tmk_core/common/command.c ****             break;
 574:../../tmk_core/common/command.c ****         case KC_Q:
 575:../../tmk_core/common/command.c ****         case KC_ESC:
 576:../../tmk_core/common/command.c ****             if (mousekey_param) {
 577:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 578:../../tmk_core/common/command.c ****             } else {
 579:../../tmk_core/common/command.c ****                 print("C> ");
 580:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 581:../../tmk_core/common/command.c ****                 return false;
 582:../../tmk_core/common/command.c ****             }
 583:../../tmk_core/common/command.c ****             break;
 584:../../tmk_core/common/command.c ****         case KC_P:
 585:../../tmk_core/common/command.c ****             mousekey_param_print();
 586:../../tmk_core/common/command.c ****             break;
 587:../../tmk_core/common/command.c ****         case KC_1:
 588:../../tmk_core/common/command.c ****         case KC_2:
 589:../../tmk_core/common/command.c ****         case KC_3:
 590:../../tmk_core/common/command.c ****         case KC_4:
 591:../../tmk_core/common/command.c ****         case KC_5:
 592:../../tmk_core/common/command.c ****         case KC_6:
 593:../../tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 594:../../tmk_core/common/command.c ****             break;
 595:../../tmk_core/common/command.c ****         case KC_UP:
 596:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 597:../../tmk_core/common/command.c ****             break;
 598:../../tmk_core/common/command.c ****         case KC_DOWN:
 599:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 600:../../tmk_core/common/command.c ****             break;
 601:../../tmk_core/common/command.c ****         case KC_PGUP:
 602:../../tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 603:../../tmk_core/common/command.c ****             break;
 604:../../tmk_core/common/command.c ****         case KC_PGDN:
 605:../../tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 606:../../tmk_core/common/command.c ****             break;
 607:../../tmk_core/common/command.c ****         case KC_D:
 608:../../tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 609:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 610:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 611:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 612:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 613:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 614:../../tmk_core/common/command.c ****             print("set default\n");
 615:../../tmk_core/common/command.c ****             break;
 616:../../tmk_core/common/command.c ****         default:
 617:../../tmk_core/common/command.c ****             print("?");
 618:../../tmk_core/common/command.c ****             return false;
 619:../../tmk_core/common/command.c ****     }
 620:../../tmk_core/common/command.c ****     if (mousekey_param) {
 621:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 622:../../tmk_core/common/command.c ****     } else {
 623:../../tmk_core/common/command.c ****         print("M>" );
 624:../../tmk_core/common/command.c ****     }
 625:../../tmk_core/common/command.c ****     return true;
 626:../../tmk_core/common/command.c **** }
 627:../../tmk_core/common/command.c **** #endif
 628:../../tmk_core/common/command.c **** 
 629:../../tmk_core/common/command.c **** 
 630:../../tmk_core/common/command.c **** /***********************************************************
 631:../../tmk_core/common/command.c ****  * Utilities
 632:../../tmk_core/common/command.c ****  ***********************************************************/
 633:../../tmk_core/common/command.c **** #if MOUSEKEY_ENABLE
 634:../../tmk_core/common/command.c **** static uint8_t numkey2num(uint8_t code)
 635:../../tmk_core/common/command.c **** {
 636:../../tmk_core/common/command.c ****     switch (code) {
 637:../../tmk_core/common/command.c ****         case KC_1: return 1;
 638:../../tmk_core/common/command.c ****         case KC_2: return 2;
 639:../../tmk_core/common/command.c ****         case KC_3: return 3;
 640:../../tmk_core/common/command.c ****         case KC_4: return 4;
 641:../../tmk_core/common/command.c ****         case KC_5: return 5;
 642:../../tmk_core/common/command.c ****         case KC_6: return 6;
 643:../../tmk_core/common/command.c ****         case KC_7: return 7;
 644:../../tmk_core/common/command.c ****         case KC_8: return 8;
 645:../../tmk_core/common/command.c ****         case KC_9: return 9;
 646:../../tmk_core/common/command.c ****         case KC_0: return 0;
 647:../../tmk_core/common/command.c ****     }
 648:../../tmk_core/common/command.c ****     return 0;
 649:../../tmk_core/common/command.c **** }
 650:../../tmk_core/common/command.c **** #endif
 651:../../tmk_core/common/command.c **** 
 652:../../tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 653:../../tmk_core/common/command.c **** {
 680               		.loc 1 653 1 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 653 1 is_stmt 0 view .LVU151
 683 0000 CF93      		push r28
 684               	.LCFI47:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 28, -2
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 1 */
 690               	.L__stack_usage = 1
 691 0002 C82F      		mov r28,r24
 654:../../tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 692               		.loc 1 654 5 is_stmt 1 view .LVU152
 693               	.LBB43:
 694               		.loc 1 654 5 view .LVU153
 695               		.loc 1 654 5 view .LVU154
 696               	.LBE43:
 697 0004 1F92      		push __zero_reg__
 698               	.LCFI48:
 699               		.cfi_def_cfa_offset 4
 700 0006 8F93      		push r24
 701               	.LCFI49:
 702               		.cfi_def_cfa_offset 5
 703 0008 80E0      		ldi r24,lo8(__c.5211)
 704 000a 90E0      		ldi r25,hi8(__c.5211)
 705               	.LVL42:
 706               		.loc 1 654 5 is_stmt 0 view .LVU155
 707 000c 9F93      		push r25
 708               	.LCFI50:
 709               		.cfi_def_cfa_offset 6
 710 000e 8F93      		push r24
 711               	.LCFI51:
 712               		.cfi_def_cfa_offset 7
 713 0010 0E94 0000 		call __xprintf
 714               	.LVL43:
 655:../../tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
 715               		.loc 1 655 5 is_stmt 1 view .LVU156
 716 0014 61E0      		ldi r22,lo8(1)
 717 0016 70E0      		ldi r23,0
 718 0018 80E0      		ldi r24,0
 719 001a 90E0      		ldi r25,0
 720 001c 00C0      		rjmp 2f
 721               		1:
 722 001e 660F      		lsl r22
 723 0020 771F      		rol r23
 724 0022 881F      		rol r24
 725 0024 991F      		rol r25
 726               		2:
 727 0026 CA95      		dec r28
 728 0028 02F4      		brpl 1b
 729 002a 0E94 0000 		call default_layer_set
 730               	.LVL44:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 731               		.loc 1 656 5 view .LVU157
 732 002e 0F90      		pop __tmp_reg__
 733 0030 0F90      		pop __tmp_reg__
 734 0032 0F90      		pop __tmp_reg__
 735 0034 0F90      		pop __tmp_reg__
 736               	.LCFI52:
 737               		.cfi_def_cfa_offset 3
 738               	/* epilogue start */
 657:../../tmk_core/common/command.c **** }
 739               		.loc 1 657 1 is_stmt 0 view .LVU158
 740 0036 CF91      		pop r28
 741               	.LVL45:
 656:../../tmk_core/common/command.c ****     clear_keyboard();
 742               		.loc 1 656 5 view .LVU159
 743 0038 0C94 0000 		jmp clear_keyboard
 744               	.LVL46:
 745               		.cfi_endproc
 746               	.LFE116:
 748               		.section	.text.command_common,"ax",@progbits
 750               	command_common:
 751               	.LFB107:
 183:../../tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 752               		.loc 1 183 1 is_stmt 1 view -0
 753               		.cfi_startproc
 754 0000 CF93      		push r28
 755               	.LCFI53:
 756               		.cfi_def_cfa_offset 3
 757               		.cfi_offset 28, -2
 758               	/* prologue: function */
 759               	/* frame size = 0 */
 760               	/* stack size = 1 */
 761               	.L__stack_usage = 1
 190:../../tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 762               		.loc 1 190 5 view .LVU161
 763 0002 8732      		cpi r24,lo8(39)
 764 0004 00F0      		brlo .+2
 765 0006 00C0      		rjmp .L48
 766 0008 8E31      		cpi r24,lo8(30)
 767 000a 00F0      		brlo .+2
 768 000c 00C0      		rjmp .L49
 769 000e 8031      		cpi r24,lo8(16)
 770 0010 01F4      		brne .+2
 771 0012 00C0      		rjmp .L50
 772 0014 00F4      		brsh .L51
 773 0016 8730      		cpi r24,lo8(7)
 774 0018 01F4      		brne .+2
 775 001a 00C0      		rjmp .L52
 776 001c 00F4      		brsh .L53
 777 001e 8630      		cpi r24,lo8(6)
 778 0020 01F4      		brne .+2
 779 0022 00C0      		rjmp .L54
 780               	.L55:
 382:../../tmk_core/common/command.c ****             return false;
 781               		.loc 1 382 13 view .LVU162
 782               	.LBB77:
 382:../../tmk_core/common/command.c ****             return false;
 783               		.loc 1 382 13 view .LVU163
 382:../../tmk_core/common/command.c ****             return false;
 784               		.loc 1 382 13 view .LVU164
 785               	.LBE77:
 786 0024 80E0      		ldi r24,lo8(__c.5046)
 787 0026 90E0      		ldi r25,hi8(__c.5046)
 788 0028 0E94 0000 		call xputs
 383:../../tmk_core/common/command.c ****     }
 789               		.loc 1 383 13 view .LVU165
 383:../../tmk_core/common/command.c ****     }
 790               		.loc 1 383 20 is_stmt 0 view .LVU166
 791 002c C0E0      		ldi r28,0
 792 002e 00C0      		rjmp .L47
 793               	.L53:
 794 0030 8B30      		cpi r24,lo8(11)
 795 0032 01F4      		brne .+2
 796 0034 00C0      		rjmp .L56
 797 0036 8E30      		cpi r24,lo8(14)
 798 0038 01F4      		brne .L55
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 799               		.loc 1 264 13 is_stmt 1 view .LVU167
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 800               		.loc 1 264 31 is_stmt 0 view .LVU168
 801 003a 9091 0000 		lds r25,debug_config
 264:../../tmk_core/common/command.c ****             if (debug_keyboard) {
 802               		.loc 1 264 28 view .LVU169
 803 003e 892F      		mov r24,r25
 804 0040 8B7F      		andi r24,~(1<<2)
 805 0042 92FF      		sbrs r25,2
 806 0044 8460      		ori r24,1<<2
 807 0046 8093 0000 		sts debug_config,r24
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 808               		.loc 1 265 13 is_stmt 1 view .LVU170
 265:../../tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 809               		.loc 1 265 16 is_stmt 0 view .LVU171
 810 004a 82FF      		sbrs r24,2
 811 004c 00C0      		rjmp .L71
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 812               		.loc 1 266 17 is_stmt 1 view .LVU172
 813               	.LBB78:
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 814               		.loc 1 266 17 view .LVU173
 266:../../tmk_core/common/command.c ****                 debug_enable = true;
 815               		.loc 1 266 17 view .LVU174
 816               	.LBE78:
 817 004e 80E0      		ldi r24,lo8(__c.4999)
 818 0050 90E0      		ldi r25,hi8(__c.4999)
 819 0052 00C0      		rjmp .L97
 820               	.L51:
 821 0054 8631      		cpi r24,lo8(22)
 822 0056 01F4      		brne .+2
 823 0058 00C0      		rjmp .L58
 824 005a 00F4      		brsh .L59
 825 005c 8131      		cpi r24,lo8(17)
 826 005e 01F4      		brne .L55
 360:../../tmk_core/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 827               		.loc 1 360 13 view .LVU175
 828 0060 0E94 0000 		call clear_keyboard
 361:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 829               		.loc 1 361 13 view .LVU176
 830 0064 C091 0000 		lds r28,keyboard_nkro
 831 0068 81E0      		ldi r24,lo8(1)
 832 006a C827      		eor r28,r24
 361:../../tmk_core/common/command.c ****             if (keyboard_nkro) {
 833               		.loc 1 361 27 is_stmt 0 view .LVU177
 834 006c C093 0000 		sts keyboard_nkro,r28
 362:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 835               		.loc 1 362 13 is_stmt 1 view .LVU178
 362:../../tmk_core/common/command.c ****                 print("NKRO: on\n");
 836               		.loc 1 362 16 is_stmt 0 view .LVU179
 837 0070 CC23      		tst r28
 838 0072 01F4      		brne .+2
 839 0074 00C0      		rjmp .L73
 363:../../tmk_core/common/command.c ****             } else {
 840               		.loc 1 363 17 is_stmt 1 view .LVU180
 841               	.LBB79:
 363:../../tmk_core/common/command.c ****             } else {
 842               		.loc 1 363 17 view .LVU181
 363:../../tmk_core/common/command.c ****             } else {
 843               		.loc 1 363 17 view .LVU182
 844               	.LBE79:
 845 0076 80E0      		ldi r24,lo8(__c.5035)
 846 0078 90E0      		ldi r25,hi8(__c.5035)
 847 007a 0E94 0000 		call xputs
 848               	.L47:
 386:../../tmk_core/common/command.c **** 
 849               		.loc 1 386 1 is_stmt 0 view .LVU183
 850 007e 8C2F      		mov r24,r28
 851               	/* epilogue start */
 852 0080 CF91      		pop r28
 853 0082 0895      		ret
 854               	.L59:
 855 0084 8931      		cpi r24,lo8(25)
 856 0086 01F4      		brne .+2
 857 0088 00C0      		rjmp .L61
 858 008a 8B31      		cpi r24,lo8(27)
 859 008c 01F4      		brne .L55
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 860               		.loc 1 255 13 is_stmt 1 view .LVU184
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 861               		.loc 1 255 29 is_stmt 0 view .LVU185
 862 008e 9091 0000 		lds r25,debug_config
 255:../../tmk_core/common/command.c ****             if (debug_matrix) {
 863               		.loc 1 255 26 view .LVU186
 864 0092 892F      		mov r24,r25
 865 0094 8D7F      		andi r24,~(1<<1)
 866 0096 91FF      		sbrs r25,1
 867 0098 8260      		ori r24,1<<1
 868 009a 8093 0000 		sts debug_config,r24
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 869               		.loc 1 256 13 is_stmt 1 view .LVU187
 256:../../tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 870               		.loc 1 256 16 is_stmt 0 view .LVU188
 871 009e 81FF      		sbrs r24,1
 872 00a0 00C0      		rjmp .L70
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 873               		.loc 1 257 17 is_stmt 1 view .LVU189
 874               	.LBB80:
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 875               		.loc 1 257 17 view .LVU190
 257:../../tmk_core/common/command.c ****                 debug_enable = true;
 876               		.loc 1 257 17 view .LVU191
 877               	.LBE80:
 878 00a2 80E0      		ldi r24,lo8(__c.4994)
 879 00a4 90E0      		ldi r25,hi8(__c.4994)
 880 00a6 00C0      		rjmp .L97
 881               	.L48:
 882 00a8 8833      		cpi r24,lo8(56)
 883 00aa 01F0      		breq .L56
 884 00ac 00F4      		brsh .L63
 885 00ae 8932      		cpi r24,lo8(41)
 886 00b0 01F0      		breq .L64
 887 00b2 8533      		cpi r24,lo8(53)
 888 00b4 01F0      		breq .L64
 889 00b6 8732      		cpi r24,lo8(39)
 890 00b8 01F0      		breq .+2
 891 00ba 00C0      		rjmp .L55
 892               	.L64:
 373:../../tmk_core/common/command.c ****             break;
 893               		.loc 1 373 13 view .LVU192
 894 00bc 80E0      		ldi r24,0
 895               	.L93:
 379:../../tmk_core/common/command.c ****             break;
 896               		.loc 1 379 13 is_stmt 0 view .LVU193
 897 00be 0E94 0000 		call switch_default_layer
 898 00c2 00C0      		rjmp .L94
 899               	.L63:
 900 00c4 8334      		cpi r24,lo8(67)
 901 00c6 01F0      		breq .L64
 902 00c8 00F4      		brsh .L65
 903 00ca 8A33      		cpi r24,lo8(58)
 904 00cc 00F4      		brsh .+2
 905 00ce 00C0      		rjmp .L55
 379:../../tmk_core/common/command.c ****             break;
 906               		.loc 1 379 13 is_stmt 1 view .LVU194
 907 00d0 8953      		subi r24,lo8(-(-57))
 908 00d2 00C0      		rjmp .L93
 909               	.L65:
 910 00d4 8834      		cpi r24,lo8(72)
 911 00d6 01F0      		breq .+2
 912 00d8 00C0      		rjmp .L55
 237:../../tmk_core/common/command.c ****             print("\n\nbootloader... ");
 913               		.loc 1 237 13 view .LVU195
 914 00da 0E94 0000 		call clear_keyboard
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 915               		.loc 1 238 13 view .LVU196
 916               	.LBB81:
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 917               		.loc 1 238 13 view .LVU197
 238:../../tmk_core/common/command.c ****             wait_ms(1000);
 918               		.loc 1 238 13 view .LVU198
 919               	.LBE81:
 920 00de 80E0      		ldi r24,lo8(__c.4986)
 921 00e0 90E0      		ldi r25,hi8(__c.4986)
 922 00e2 0E94 0000 		call xputs
 239:../../tmk_core/common/command.c ****             bootloader_jump(); // not return
 923               		.loc 1 239 13 view .LVU199
 924               	.LBB82:
 925               	.LBI82:
 926               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 927               		.loc 2 166 1 view .LVU200
 928               	.LBB83:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 929               		.loc 2 168 2 view .LVU201
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 930               		.loc 2 172 2 view .LVU202
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 931               		.loc 2 173 2 view .LVU203
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 932               		.loc 2 174 2 view .LVU204
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 933               		.loc 2 184 3 view .LVU205
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 934               		.loc 2 187 2 view .LVU206
 935 00e6 2FEF      		ldi r18,lo8(3199999)
 936 00e8 83ED      		ldi r24,hi8(3199999)
 937 00ea 90E3      		ldi r25,hlo8(3199999)
 938 00ec 2150      	1:	subi r18,1
 939 00ee 8040      		sbci r24,0
 940 00f0 9040      		sbci r25,0
 941 00f2 01F4      		brne 1b
 942 00f4 00C0      		rjmp .
 943 00f6 0000      		nop
 944               	.LBE83:
 945               	.LBE82:
 240:../../tmk_core/common/command.c ****             break;
 946               		.loc 1 240 13 view .LVU207
 947 00f8 0E94 0000 		call bootloader_jump
 241:../../tmk_core/common/command.c ****         case KC_D:
 948               		.loc 1 241 13 view .LVU208
 949 00fc 00C0      		rjmp .L94
 950               	.L56:
 225:../../tmk_core/common/command.c ****             break;
 951               		.loc 1 225 13 view .LVU209
 952               	.LBB84:
 953               	.LBI84:
 116:../../tmk_core/common/command.c **** {
 954               		.loc 1 116 13 view .LVU210
 955               	.LBB85:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 956               		.loc 1 118 5 view .LVU211
 957               	.LBE85:
 958               	.LBE84:
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 959               		.loc 1 118 5 view .LVU212
 118:../../tmk_core/common/command.c ****           "d:	debug\n"
 960               		.loc 1 118 5 view .LVU213
 961               	.LBB87:
 962               	.LBB86:
 963 00fe 80E0      		ldi r24,lo8(__c.4974)
 964 0100 90E0      		ldi r25,hi8(__c.4974)
 965               	.L95:
 966               	.LBE86:
 967               	.LBE87:
 365:../../tmk_core/common/command.c ****             }
 968               		.loc 1 365 17 is_stmt 0 view .LVU214
 969 0102 0E94 0000 		call xputs
 970 0106 00C0      		rjmp .L94
 971               	.L54:
 228:../../tmk_core/common/command.c ****             debug_keyboard = false;
 972               		.loc 1 228 13 is_stmt 1 view .LVU215
 229:../../tmk_core/common/command.c ****             debug_mouse    = false;
 973               		.loc 1 229 13 view .LVU216
 230:../../tmk_core/common/command.c ****             debug_enable   = false;
 974               		.loc 1 230 13 view .LVU217
 231:../../tmk_core/common/command.c ****             command_console_help();
 975               		.loc 1 231 13 view .LVU218
 231:../../tmk_core/common/command.c ****             command_console_help();
 976               		.loc 1 231 28 is_stmt 0 view .LVU219
 977 0108 8091 0000 		lds r24,debug_config
 978 010c 807F      		andi r24,lo8(-16)
 979 010e 8093 0000 		sts debug_config,r24
 232:../../tmk_core/common/command.c ****             print("C> ");
 980               		.loc 1 232 13 is_stmt 1 view .LVU220
 981               	.LBB88:
 982               	.LBI88:
 392:../../tmk_core/common/command.c **** {
 983               		.loc 1 392 13 view .LVU221
 984               	.LBB89:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 985               		.loc 1 394 5 view .LVU222
 986               	.LBE89:
 987               	.LBE88:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 988               		.loc 1 394 5 view .LVU223
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 989               		.loc 1 394 5 view .LVU224
 990               	.LBB91:
 991               	.LBB90:
 992 0112 80E0      		ldi r24,lo8(__c.5051)
 993 0114 90E0      		ldi r25,hi8(__c.5051)
 994 0116 0E94 0000 		call xputs
 995               	.LBE90:
 996               	.LBE91:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 997               		.loc 1 233 13 view .LVU225
 998               	.LBB92:
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 999               		.loc 1 233 13 view .LVU226
 233:../../tmk_core/common/command.c ****             command_state = CONSOLE;
 1000               		.loc 1 233 13 view .LVU227
 1001               	.LBE92:
 1002 011a 80E0      		ldi r24,lo8(__c.4983)
 1003 011c 90E0      		ldi r25,hi8(__c.4983)
 1004 011e 0E94 0000 		call xputs
 234:../../tmk_core/common/command.c ****             break;
 1005               		.loc 1 234 13 view .LVU228
 234:../../tmk_core/common/command.c ****             break;
 1006               		.loc 1 234 27 is_stmt 0 view .LVU229
 1007 0122 81E0      		ldi r24,lo8(1)
 1008 0124 8093 0000 		sts command_state,r24
 235:../../tmk_core/common/command.c ****         case KC_PAUSE:
 1009               		.loc 1 235 13 is_stmt 1 view .LVU230
 1010               	.L94:
 380:../../tmk_core/common/command.c ****         default:
 1011               		.loc 1 380 13 view .LVU231
 385:../../tmk_core/common/command.c **** }
 1012               		.loc 1 385 12 is_stmt 0 view .LVU232
 1013 0128 C1E0      		ldi r28,lo8(1)
 380:../../tmk_core/common/command.c ****         default:
 1014               		.loc 1 380 13 view .LVU233
 1015 012a 00C0      		rjmp .L47
 1016               	.L52:
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1017               		.loc 1 243 13 is_stmt 1 view .LVU234
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1018               		.loc 1 243 17 is_stmt 0 view .LVU235
 1019 012c 8091 0000 		lds r24,debug_config
 243:../../tmk_core/common/command.c ****                 print("\ndebug: off\n");
 1020               		.loc 1 243 16 view .LVU236
 1021 0130 80FF      		sbrs r24,0
 1022 0132 00C0      		rjmp .L69
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1023               		.loc 1 244 17 is_stmt 1 view .LVU237
 1024               	.LBB93:
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1025               		.loc 1 244 17 view .LVU238
 244:../../tmk_core/common/command.c ****                 debug_matrix   = false;
 1026               		.loc 1 244 17 view .LVU239
 1027               	.LBE93:
 1028 0134 80E0      		ldi r24,lo8(__c.4989)
 1029 0136 90E0      		ldi r25,hi8(__c.4989)
 1030 0138 0E94 0000 		call xputs
 245:../../tmk_core/common/command.c ****                 debug_keyboard = false;
 1031               		.loc 1 245 17 view .LVU240
 246:../../tmk_core/common/command.c ****                 debug_mouse    = false;
 1032               		.loc 1 246 17 view .LVU241
 247:../../tmk_core/common/command.c ****                 debug_enable   = false;
 1033               		.loc 1 247 17 view .LVU242
 248:../../tmk_core/common/command.c ****             } else {
 1034               		.loc 1 248 17 view .LVU243
 248:../../tmk_core/common/command.c ****             } else {
 1035               		.loc 1 248 32 is_stmt 0 view .LVU244
 1036 013c 8091 0000 		lds r24,debug_config
 1037 0140 807F      		andi r24,lo8(-16)
 1038               	.L96:
 276:../../tmk_core/common/command.c ****             } else {
 1039               		.loc 1 276 30 view .LVU245
 1040 0142 8093 0000 		sts debug_config,r24
 1041 0146 00C0      		rjmp .L94
 1042               	.L69:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1043               		.loc 1 250 17 is_stmt 1 view .LVU246
 1044               	.LBB94:
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1045               		.loc 1 250 17 view .LVU247
 250:../../tmk_core/common/command.c ****                 debug_enable   = true;
 1046               		.loc 1 250 17 view .LVU248
 1047               	.LBE94:
 1048 0148 80E0      		ldi r24,lo8(__c.4991)
 1049 014a 90E0      		ldi r25,hi8(__c.4991)
 1050               	.L97:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1051               		.loc 1 275 17 is_stmt 0 view .LVU249
 1052 014c 0E94 0000 		call xputs
 276:../../tmk_core/common/command.c ****             } else {
 1053               		.loc 1 276 17 is_stmt 1 view .LVU250
 276:../../tmk_core/common/command.c ****             } else {
 1054               		.loc 1 276 30 is_stmt 0 view .LVU251
 1055 0150 8091 0000 		lds r24,debug_config
 1056 0154 8160      		ori r24,lo8(1<<0)
 1057 0156 00C0      		rjmp .L96
 1058               	.L70:
 260:../../tmk_core/common/command.c ****             }
 1059               		.loc 1 260 17 is_stmt 1 view .LVU252
 1060               	.LBB95:
 260:../../tmk_core/common/command.c ****             }
 1061               		.loc 1 260 17 view .LVU253
 260:../../tmk_core/common/command.c ****             }
 1062               		.loc 1 260 17 view .LVU254
 1063               	.LBE95:
 1064 0158 80E0      		ldi r24,lo8(__c.4996)
 1065 015a 90E0      		ldi r25,hi8(__c.4996)
 1066 015c 00C0      		rjmp .L95
 1067               	.L71:
 269:../../tmk_core/common/command.c ****             }
 1068               		.loc 1 269 17 view .LVU255
 1069               	.LBB96:
 269:../../tmk_core/common/command.c ****             }
 1070               		.loc 1 269 17 view .LVU256
 269:../../tmk_core/common/command.c ****             }
 1071               		.loc 1 269 17 view .LVU257
 1072               	.LBE96:
 1073 015e 80E0      		ldi r24,lo8(__c.5001)
 1074 0160 90E0      		ldi r25,hi8(__c.5001)
 1075 0162 00C0      		rjmp .L95
 1076               	.L50:
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1077               		.loc 1 273 13 view .LVU258
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1078               		.loc 1 273 28 is_stmt 0 view .LVU259
 1079 0164 9091 0000 		lds r25,debug_config
 273:../../tmk_core/common/command.c ****             if (debug_mouse) {
 1080               		.loc 1 273 25 view .LVU260
 1081 0168 892F      		mov r24,r25
 1082 016a 877F      		andi r24,~(1<<3)
 1083 016c 93FF      		sbrs r25,3
 1084 016e 8860      		ori r24,1<<3
 1085 0170 8093 0000 		sts debug_config,r24
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1086               		.loc 1 274 13 is_stmt 1 view .LVU261
 274:../../tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1087               		.loc 1 274 16 is_stmt 0 view .LVU262
 1088 0174 83FF      		sbrs r24,3
 1089 0176 00C0      		rjmp .L72
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1090               		.loc 1 275 17 is_stmt 1 view .LVU263
 1091               	.LBB97:
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1092               		.loc 1 275 17 view .LVU264
 275:../../tmk_core/common/command.c ****                 debug_enable = true;
 1093               		.loc 1 275 17 view .LVU265
 1094               	.LBE97:
 1095 0178 80E0      		ldi r24,lo8(__c.5004)
 1096 017a 90E0      		ldi r25,hi8(__c.5004)
 1097 017c 00C0      		rjmp .L97
 1098               	.L72:
 278:../../tmk_core/common/command.c ****             }
 1099               		.loc 1 278 17 view .LVU266
 1100               	.LBB98:
 278:../../tmk_core/common/command.c ****             }
 1101               		.loc 1 278 17 view .LVU267
 278:../../tmk_core/common/command.c ****             }
 1102               		.loc 1 278 17 view .LVU268
 1103               	.LBE98:
 1104 017e 80E0      		ldi r24,lo8(__c.5006)
 1105 0180 90E0      		ldi r25,hi8(__c.5006)
 1106 0182 00C0      		rjmp .L95
 1107               	.L61:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1108               		.loc 1 282 13 view .LVU269
 1109               	.LBB99:
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1110               		.loc 1 282 13 view .LVU270
 282:../../tmk_core/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1111               		.loc 1 282 13 view .LVU271
 1112               	.LBE99:
 1113 0184 80E0      		ldi r24,lo8(__c.5009)
 1114 0186 90E0      		ldi r25,hi8(__c.5009)
 1115 0188 0E94 0000 		call xputs
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1116               		.loc 1 283 13 view .LVU272
 1117               	.LBB100:
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1118               		.loc 1 283 13 view .LVU273
 283:../../tmk_core/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1119               		.loc 1 283 13 view .LVU274
 1120               	.LBE100:
 1121 018c 80E0      		ldi r24,lo8(__c.5011)
 1122 018e 90E0      		ldi r25,hi8(__c.5011)
 1123 0190 0E94 0000 		call xputs
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1124               		.loc 1 284 13 view .LVU275
 1125               	.LBB101:
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1126               		.loc 1 284 13 view .LVU276
 284:../../tmk_core/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1127               		.loc 1 284 13 view .LVU277
 1128               	.LBE101:
 1129 0194 80E0      		ldi r24,lo8(__c.5013)
 1130 0196 90E0      		ldi r25,hi8(__c.5013)
 1131 0198 0E94 0000 		call xputs
 287:../../tmk_core/common/command.c ****             /* build options */
 1132               		.loc 1 287 13 view .LVU278
 1133               	.LBB102:
 287:../../tmk_core/common/command.c ****             /* build options */
 1134               		.loc 1 287 13 view .LVU279
 287:../../tmk_core/common/command.c ****             /* build options */
 1135               		.loc 1 287 13 view .LVU280
 1136               	.LBE102:
 1137 019c 80E0      		ldi r24,lo8(__c.5015)
 1138 019e 90E0      		ldi r25,hi8(__c.5015)
 1139 01a0 0E94 0000 		call xputs
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1140               		.loc 1 289 13 view .LVU281
 1141               	.LBB103:
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1142               		.loc 1 289 13 view .LVU282
 289:../../tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 1143               		.loc 1 289 13 view .LVU283
 1144               	.LBE103:
 1145 01a4 80E0      		ldi r24,lo8(__c.5017)
 1146 01a6 90E0      		ldi r25,hi8(__c.5017)
 1147 01a8 0E94 0000 		call xputs
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1148               		.loc 1 325 13 view .LVU284
 1149               	.LBB104:
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1150               		.loc 1 325 13 view .LVU285
 325:../../tmk_core/common/command.c **** #if defined(__AVR__)
 1151               		.loc 1 325 13 view .LVU286
 1152               	.LBE104:
 1153 01ac 80E0      		ldi r24,lo8(__c.5019)
 1154 01ae 90E0      		ldi r25,hi8(__c.5019)
 1155 01b0 00C0      		rjmp .L95
 1156               	.L58:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1157               		.loc 1 335 13 view .LVU287
 1158               	.LBB105:
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1159               		.loc 1 335 13 view .LVU288
 335:../../tmk_core/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1160               		.loc 1 335 13 view .LVU289
 1161               	.LBE105:
 1162 01b2 80E0      		ldi r24,lo8(__c.5022)
 1163 01b4 90E0      		ldi r25,hi8(__c.5022)
 1164 01b6 0E94 0000 		call xputs
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1165               		.loc 1 336 13 view .LVU290
 1166 01ba 0E94 0000 		call host_keyboard_leds
 1167               	.LBB106:
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1168               		.loc 1 336 13 view .LVU291
 336:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_protocol);
 1169               		.loc 1 336 13 view .LVU292
 1170               	.LBE106:
 1171 01be 1F92      		push __zero_reg__
 1172               	.LCFI54:
 1173               		.cfi_def_cfa_offset 4
 1174 01c0 8F93      		push r24
 1175               	.LCFI55:
 1176               		.cfi_def_cfa_offset 5
 1177 01c2 80E0      		ldi r24,lo8(__c.5024)
 1178 01c4 90E0      		ldi r25,hi8(__c.5024)
 1179 01c6 9F93      		push r25
 1180               	.LCFI56:
 1181               		.cfi_def_cfa_offset 6
 1182 01c8 8F93      		push r24
 1183               	.LCFI57:
 1184               		.cfi_def_cfa_offset 7
 1185 01ca 0E94 0000 		call __xprintf
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1186               		.loc 1 337 13 view .LVU293
 1187               	.LBB107:
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1188               		.loc 1 337 13 view .LVU294
 337:../../tmk_core/common/command.c ****             print_val_hex8(keyboard_idle);
 1189               		.loc 1 337 13 view .LVU295
 1190               	.LBE107:
 1191 01ce 8091 0000 		lds r24,keyboard_protocol
 1192 01d2 1F92      		push __zero_reg__
 1193               	.LCFI58:
 1194               		.cfi_def_cfa_offset 8
 1195 01d4 8F93      		push r24
 1196               	.LCFI59:
 1197               		.cfi_def_cfa_offset 9
 1198 01d6 80E0      		ldi r24,lo8(__c.5026)
 1199 01d8 90E0      		ldi r25,hi8(__c.5026)
 1200 01da 9F93      		push r25
 1201               	.LCFI60:
 1202               		.cfi_def_cfa_offset 10
 1203 01dc 8F93      		push r24
 1204               	.LCFI61:
 1205               		.cfi_def_cfa_offset 11
 1206 01de 0E94 0000 		call __xprintf
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1207               		.loc 1 338 13 view .LVU296
 1208               	.LBB108:
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1209               		.loc 1 338 13 view .LVU297
 338:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1210               		.loc 1 338 13 view .LVU298
 1211               	.LBE108:
 1212 01e2 8091 0000 		lds r24,keyboard_idle
 1213 01e6 1F92      		push __zero_reg__
 1214               	.LCFI62:
 1215               		.cfi_def_cfa_offset 12
 1216 01e8 8F93      		push r24
 1217               	.LCFI63:
 1218               		.cfi_def_cfa_offset 13
 1219 01ea 80E0      		ldi r24,lo8(__c.5028)
 1220 01ec 90E0      		ldi r25,hi8(__c.5028)
 1221 01ee 9F93      		push r25
 1222               	.LCFI64:
 1223               		.cfi_def_cfa_offset 14
 1224 01f0 8F93      		push r24
 1225               	.LCFI65:
 1226               		.cfi_def_cfa_offset 15
 1227 01f2 0E94 0000 		call __xprintf
 340:../../tmk_core/common/command.c **** #endif
 1228               		.loc 1 340 13 view .LVU299
 1229               	.LBB109:
 340:../../tmk_core/common/command.c **** #endif
 1230               		.loc 1 340 13 view .LVU300
 340:../../tmk_core/common/command.c **** #endif
 1231               		.loc 1 340 13 view .LVU301
 1232               	.LBE109:
 1233 01f6 8091 0000 		lds r24,keyboard_nkro
 1234 01fa 1F92      		push __zero_reg__
 1235               	.LCFI66:
 1236               		.cfi_def_cfa_offset 16
 1237 01fc 8F93      		push r24
 1238               	.LCFI67:
 1239               		.cfi_def_cfa_offset 17
 1240 01fe 80E0      		ldi r24,lo8(__c.5030)
 1241 0200 90E0      		ldi r25,hi8(__c.5030)
 1242 0202 9F93      		push r25
 1243               	.LCFI68:
 1244               		.cfi_def_cfa_offset 18
 1245 0204 8F93      		push r24
 1246               	.LCFI69:
 1247               		.cfi_def_cfa_offset 19
 1248 0206 0E94 0000 		call __xprintf
 342:../../tmk_core/common/command.c **** 
 1249               		.loc 1 342 13 view .LVU302
 1250 020a 0E94 0000 		call timer_read32
 1251               	.LBB110:
 342:../../tmk_core/common/command.c **** 
 1252               		.loc 1 342 13 view .LVU303
 342:../../tmk_core/common/command.c **** 
 1253               		.loc 1 342 13 view .LVU304
 1254               	.LBE110:
 1255 020e 9F93      		push r25
 1256               	.LCFI70:
 1257               		.cfi_def_cfa_offset 20
 1258 0210 8F93      		push r24
 1259               	.LCFI71:
 1260               		.cfi_def_cfa_offset 21
 1261 0212 7F93      		push r23
 1262               	.LCFI72:
 1263               		.cfi_def_cfa_offset 22
 1264 0214 6F93      		push r22
 1265               	.LCFI73:
 1266               		.cfi_def_cfa_offset 23
 1267 0216 80E0      		ldi r24,lo8(__c.5032)
 1268 0218 90E0      		ldi r25,hi8(__c.5032)
 1269 021a 9F93      		push r25
 1270               	.LCFI74:
 1271               		.cfi_def_cfa_offset 24
 1272 021c 8F93      		push r24
 1273               	.LCFI75:
 1274               		.cfi_def_cfa_offset 25
 1275 021e 0E94 0000 		call __xprintf
 357:../../tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 1276               		.loc 1 357 13 view .LVU305
 1277 0222 8DB7      		in r24,__SP_L__
 1278 0224 9EB7      		in r25,__SP_H__
 1279 0226 4696      		adiw r24,22
 1280 0228 0FB6      		in __tmp_reg__,__SREG__
 1281 022a F894      		cli
 1282 022c 9EBF      		out __SP_H__,r25
 1283 022e 0FBE      		out __SREG__,__tmp_reg__
 1284 0230 8DBF      		out __SP_L__,r24
 1285               	.LCFI76:
 1286               		.cfi_def_cfa_offset 3
 1287 0232 00C0      		rjmp .L94
 1288               	.L73:
 365:../../tmk_core/common/command.c ****             }
 1289               		.loc 1 365 17 view .LVU306
 1290               	.LBB111:
 365:../../tmk_core/common/command.c ****             }
 1291               		.loc 1 365 17 view .LVU307
 365:../../tmk_core/common/command.c ****             }
 1292               		.loc 1 365 17 view .LVU308
 1293               	.LBE111:
 1294 0234 80E0      		ldi r24,lo8(__c.5037)
 1295 0236 90E0      		ldi r25,hi8(__c.5037)
 1296 0238 00C0      		rjmp .L95
 1297               	.L49:
 376:../../tmk_core/common/command.c ****             break;
 1298               		.loc 1 376 13 view .LVU309
 1299 023a 8D51      		subi r24,lo8(-(-29))
 1300 023c 00C0      		rjmp .L93
 1301               		.cfi_endproc
 1302               	.LFE107:
 1304               		.section	.text.command_extra,"ax",@progbits
 1305               		.weak	command_extra
 1307               	command_extra:
 1308               	.LVL47:
 1309               	.LFB104:
 100:../../tmk_core/common/command.c ****     (void)code;
 1310               		.loc 1 100 1 view -0
 1311               		.cfi_startproc
 1312               	/* prologue: function */
 1313               	/* frame size = 0 */
 1314               	/* stack size = 0 */
 1315               	.L__stack_usage = 0
 101:../../tmk_core/common/command.c ****     return false;
 1316               		.loc 1 101 5 view .LVU311
 102:../../tmk_core/common/command.c **** }
 1317               		.loc 1 102 5 view .LVU312
 103:../../tmk_core/common/command.c **** 
 1318               		.loc 1 103 1 is_stmt 0 view .LVU313
 1319 0000 80E0      		ldi r24,0
 1320               	.LVL48:
 1321               	/* epilogue start */
 103:../../tmk_core/common/command.c **** 
 1322               		.loc 1 103 1 view .LVU314
 1323 0002 0895      		ret
 1324               		.cfi_endproc
 1325               	.LFE104:
 1327               		.set	command_extra.localalias.0,command_extra
 1328               		.section	.text.command_console_extra,"ax",@progbits
 1329               		.weak	command_console_extra
 1331               	command_console_extra:
 1332               	.LFB118:
 1333               		.cfi_startproc
 1334               	/* prologue: function */
 1335               	/* frame size = 0 */
 1336               	/* stack size = 0 */
 1337               	.L__stack_usage = 0
 1338 0000 0C94 0000 		jmp command_extra.localalias.0
 1339               		.cfi_endproc
 1340               	.LFE118:
 1342               		.section	.text.command_proc,"ax",@progbits
 1343               	.global	command_proc
 1345               	command_proc:
 1346               	.LFB103:
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1347               		.loc 1 71 1 is_stmt 1 view -0
 1348               		.cfi_startproc
  71:../../tmk_core/common/command.c ****     switch (command_state) {
 1349               		.loc 1 71 1 is_stmt 0 view .LVU316
 1350 0000 CF93      		push r28
 1351               	.LCFI77:
 1352               		.cfi_def_cfa_offset 3
 1353               		.cfi_offset 28, -2
 1354               	/* prologue: function */
 1355               	/* frame size = 0 */
 1356               	/* stack size = 1 */
 1357               	.L__stack_usage = 1
 1358 0002 C82F      		mov r28,r24
  72:../../tmk_core/common/command.c ****         case ONESHOT:
 1359               		.loc 1 72 5 is_stmt 1 view .LVU317
 1360 0004 8091 0000 		lds r24,command_state
 1361 0008 8130      		cpi r24,lo8(1)
 1362 000a 01F0      		breq .L101
 1363 000c 8823      		tst r24
 1364 000e 01F0      		breq .L102
 1365 0010 8230      		cpi r24,lo8(2)
 1366 0012 01F4      		brne .+2
 1367 0014 00C0      		rjmp .L103
  90:../../tmk_core/common/command.c ****             return false;
 1368               		.loc 1 90 13 view .LVU318
  90:../../tmk_core/common/command.c ****             return false;
 1369               		.loc 1 90 27 is_stmt 0 view .LVU319
 1370 0016 1092 0000 		sts command_state,__zero_reg__
  91:../../tmk_core/common/command.c ****     }
 1371               		.loc 1 91 13 is_stmt 1 view .LVU320
 1372               	.L131:
  75:../../tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 1373               		.loc 1 75 24 is_stmt 0 view .LVU321
 1374 001a 80E0      		ldi r24,0
 1375 001c 00C0      		rjmp .L100
 1376               	.L102:
  74:../../tmk_core/common/command.c ****                 return false;
 1377               		.loc 1 74 13 is_stmt 1 view .LVU322
  74:../../tmk_core/common/command.c ****                 return false;
 1378               		.loc 1 74 18 is_stmt 0 view .LVU323
 1379 001e E091 0000 		lds r30,keyboard_report
 1380 0022 F091 0000 		lds r31,keyboard_report+1
  74:../../tmk_core/common/command.c ****                 return false;
 1381               		.loc 1 74 16 view .LVU324
 1382 0026 8081      		ld r24,Z
 1383 0028 8232      		cpi r24,lo8(34)
 1384 002a 01F4      		brne .L131
 1385               	.L164:
  80:../../tmk_core/common/command.c ****             else
 1386               		.loc 1 80 17 is_stmt 1 view .LVU325
  80:../../tmk_core/common/command.c ****             else
 1387               		.loc 1 80 25 is_stmt 0 view .LVU326
 1388 002c 8C2F      		mov r24,r28
 1389 002e 0E94 0000 		call command_extra
  80:../../tmk_core/common/command.c ****             else
 1390               		.loc 1 80 45 view .LVU327
 1391 0032 8111      		cpse r24,__zero_reg__
 1392 0034 00C0      		rjmp .L133
  80:../../tmk_core/common/command.c ****             else
 1393               		.loc 1 80 48 discriminator 2 view .LVU328
 1394 0036 8C2F      		mov r24,r28
 1395 0038 0E94 0000 		call command_common
 1396               	.L109:
  82:../../tmk_core/common/command.c ****             break;
 1397               		.loc 1 82 53 discriminator 6 view .LVU329
 1398 003c 8170      		andi r24,lo8(1)
 1399               	.L100:
 1400               	/* epilogue start */
  94:../../tmk_core/common/command.c **** 
 1401               		.loc 1 94 1 view .LVU330
 1402 003e CF91      		pop r28
 1403 0040 0895      		ret
 1404               	.L101:
  77:../../tmk_core/common/command.c ****         case CONSOLE:
 1405               		.loc 1 77 13 is_stmt 1 view .LVU331
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1406               		.loc 1 79 13 view .LVU332
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1407               		.loc 1 79 17 is_stmt 0 view .LVU333
 1408 0042 E091 0000 		lds r30,keyboard_report
 1409 0046 F091 0000 		lds r31,keyboard_report+1
  79:../../tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1410               		.loc 1 79 16 view .LVU334
 1411 004a 8081      		ld r24,Z
 1412 004c 8232      		cpi r24,lo8(34)
 1413 004e 01F0      		breq .L164
  82:../../tmk_core/common/command.c ****             break;
 1414               		.loc 1 82 17 is_stmt 1 view .LVU335
  82:../../tmk_core/common/command.c ****             break;
 1415               		.loc 1 82 25 is_stmt 0 view .LVU336
 1416 0050 8C2F      		mov r24,r28
 1417 0052 0E94 0000 		call command_console_extra
  82:../../tmk_core/common/command.c ****             break;
 1418               		.loc 1 82 53 view .LVU337
 1419 0056 8111      		cpse r24,__zero_reg__
 1420 0058 00C0      		rjmp .L134
 1421               	.LBB150:
 1422               	.LBI150:
 402:../../tmk_core/common/command.c **** {
 1423               		.loc 1 402 13 is_stmt 1 view .LVU338
 1424               	.LBB151:
 404:../../tmk_core/common/command.c ****         case KC_H:
 1425               		.loc 1 404 5 view .LVU339
 1426 005a C431      		cpi r28,lo8(20)
 1427 005c 01F0      		breq .L110
 1428 005e 00F4      		brsh .L111
 1429 0060 CB30      		cpi r28,lo8(11)
 1430 0062 01F0      		breq .L112
 1431 0064 C031      		cpi r28,lo8(16)
 1432 0066 01F0      		breq .L113
 1433               	.L114:
 421:../../tmk_core/common/command.c ****             return false;
 1434               		.loc 1 421 13 view .LVU340
 1435               	.LBE151:
 1436               	.LBE150:
 421:../../tmk_core/common/command.c ****             return false;
 1437               		.loc 1 421 13 view .LVU341
 421:../../tmk_core/common/command.c ****             return false;
 1438               		.loc 1 421 13 view .LVU342
 1439               	.LBB163:
 1440               	.LBB156:
 1441 0068 80E0      		ldi r24,lo8(__c.5065)
 1442 006a 90E0      		ldi r25,hi8(__c.5065)
 1443 006c 0E94 0000 		call xputs
 1444 0070 00C0      		rjmp .L157
 1445               	.L133:
 1446               	.LBE156:
 1447               	.LBE163:
  80:../../tmk_core/common/command.c ****             else
 1448               		.loc 1 80 45 is_stmt 0 view .LVU343
 1449 0072 81E0      		ldi r24,lo8(1)
 1450 0074 90E0      		ldi r25,0
 1451 0076 00C0      		rjmp .L109
 1452               	.L111:
 1453 0078 C932      		cpi r28,lo8(41)
 1454 007a 01F0      		breq .L110
 1455 007c C833      		cpi r28,lo8(56)
 1456 007e 01F4      		brne .L114
 1457               	.L112:
 1458               	.LBB164:
 1459               	.LBB157:
 407:../../tmk_core/common/command.c ****             break;
 1460               		.loc 1 407 13 is_stmt 1 view .LVU344
 1461               	.LBB152:
 1462               	.LBI152:
 392:../../tmk_core/common/command.c **** {
 1463               		.loc 1 392 13 view .LVU345
 1464               	.LBB153:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1465               		.loc 1 394 5 view .LVU346
 1466               	.LBE153:
 1467               	.LBE152:
 1468               	.LBE157:
 1469               	.LBE164:
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1470               		.loc 1 394 5 view .LVU347
 394:../../tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1471               		.loc 1 394 5 view .LVU348
 1472               	.LBB165:
 1473               	.LBB158:
 1474               	.LBB155:
 1475               	.LBB154:
 1476 0080 80E0      		ldi r24,lo8(__c.5051)
 1477 0082 90E0      		ldi r25,hi8(__c.5051)
 1478 0084 0E94 0000 		call xputs
 1479               	.LBE154:
 1480               	.LBE155:
 408:../../tmk_core/common/command.c ****         case KC_Q:
 1481               		.loc 1 408 13 view .LVU349
 424:../../tmk_core/common/command.c ****     return true;
 1482               		.loc 1 424 5 view .LVU350
 1483               	.LBE158:
 1484               	.LBE165:
 424:../../tmk_core/common/command.c ****     return true;
 1485               		.loc 1 424 5 view .LVU351
 424:../../tmk_core/common/command.c ****     return true;
 1486               		.loc 1 424 5 view .LVU352
 1487               	.LBB166:
 1488               	.LBB159:
 1489 0088 80E0      		ldi r24,lo8(__c.5067)
 1490 008a 90E0      		ldi r25,hi8(__c.5067)
 1491 008c 0E94 0000 		call xputs
 425:../../tmk_core/common/command.c **** }
 1492               		.loc 1 425 5 view .LVU353
 1493               	.L134:
 1494               	.LBE159:
 1495               	.LBE166:
  82:../../tmk_core/common/command.c ****             break;
 1496               		.loc 1 82 53 is_stmt 0 view .LVU354
 1497 0090 81E0      		ldi r24,lo8(1)
 1498 0092 00C0      		rjmp .L109
 1499               	.L110:
 1500               	.LBB167:
 1501               	.LBB160:
 411:../../tmk_core/common/command.c ****             return false;
 1502               		.loc 1 411 13 is_stmt 1 view .LVU355
 411:../../tmk_core/common/command.c ****             return false;
 1503               		.loc 1 411 27 is_stmt 0 view .LVU356
 1504 0094 1092 0000 		sts command_state,__zero_reg__
 412:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1505               		.loc 1 412 13 is_stmt 1 view .LVU357
 1506               	.L157:
 422:../../tmk_core/common/command.c ****     }
 1507               		.loc 1 422 13 view .LVU358
 1508               	.LBE160:
 1509               	.LBE167:
  82:../../tmk_core/common/command.c ****             break;
 1510               		.loc 1 82 53 is_stmt 0 view .LVU359
 1511 0098 80E0      		ldi r24,0
 1512 009a 00C0      		rjmp .L109
 1513               	.L113:
 1514               	.LBB168:
 1515               	.LBB161:
 415:../../tmk_core/common/command.c ****             print("M> ");
 1516               		.loc 1 415 13 is_stmt 1 view .LVU360
 1517 009c 0E94 0000 		call mousekey_console_help
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1518               		.loc 1 416 13 view .LVU361
 1519               	.LBE161:
 1520               	.LBE168:
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1521               		.loc 1 416 13 view .LVU362
 416:../../tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1522               		.loc 1 416 13 view .LVU363
 1523               	.LBB169:
 1524               	.LBB162:
 1525 00a0 80E0      		ldi r24,lo8(__c.5062)
 1526 00a2 90E0      		ldi r25,hi8(__c.5062)
 1527 00a4 0E94 0000 		call xputs
 417:../../tmk_core/common/command.c ****             return true;
 1528               		.loc 1 417 13 view .LVU364
 417:../../tmk_core/common/command.c ****             return true;
 1529               		.loc 1 417 27 is_stmt 0 view .LVU365
 1530 00a8 82E0      		ldi r24,lo8(2)
 1531 00aa 8093 0000 		sts command_state,r24
 418:../../tmk_core/common/command.c **** #endif
 1532               		.loc 1 418 13 is_stmt 1 view .LVU366
 1533 00ae 00C0      		rjmp .L134
 1534               	.L103:
 1535               	.LBE162:
 1536               	.LBE169:
  83:../../tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1537               		.loc 1 83 13 view .LVU367
  86:../../tmk_core/common/command.c ****             break;
 1538               		.loc 1 86 13 view .LVU368
 1539               	.LBB170:
 1540               	.LBI170:
 567:../../tmk_core/common/command.c **** {
 1541               		.loc 1 567 13 view .LVU369
 1542               	.LBB171:
 569:../../tmk_core/common/command.c ****         case KC_H:
 1543               		.loc 1 569 5 view .LVU370
 1544 00b0 C432      		cpi r28,lo8(36)
 1545 00b2 00F4      		brsh .L115
 1546 00b4 CE31      		cpi r28,lo8(30)
 1547 00b6 00F0      		brlo .+2
 1548 00b8 00C0      		rjmp .L116
 1549 00ba CB30      		cpi r28,lo8(11)
 1550 00bc 01F0      		breq .L117
 1551 00be 00F4      		brsh .L118
 1552 00c0 C730      		cpi r28,lo8(7)
 1553 00c2 01F4      		brne .+2
 1554 00c4 00C0      		rjmp .L119
 1555               	.L120:
 617:../../tmk_core/common/command.c ****             return false;
 1556               		.loc 1 617 13 view .LVU371
 1557               	.LBE171:
 1558               	.LBE170:
 617:../../tmk_core/common/command.c ****             return false;
 1559               		.loc 1 617 13 view .LVU372
 617:../../tmk_core/common/command.c ****             return false;
 1560               		.loc 1 617 13 view .LVU373
 1561               	.LBB239:
 1562               	.LBB213:
 1563 00c6 80E0      		ldi r24,lo8(__c.5189)
 1564 00c8 90E0      		ldi r25,hi8(__c.5189)
 1565               	.L161:
 623:../../tmk_core/common/command.c ****     }
 1566               		.loc 1 623 9 is_stmt 0 view .LVU374
 1567 00ca 0E94 0000 		call xputs
 1568 00ce 00C0      		rjmp .L160
 1569               	.L118:
 1570 00d0 C331      		cpi r28,lo8(19)
 1571 00d2 01F0      		breq .L121
 1572 00d4 C431      		cpi r28,lo8(20)
 1573 00d6 01F4      		brne .L120
 1574               	.L122:
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1575               		.loc 1 576 13 is_stmt 1 view .LVU375
 576:../../tmk_core/common/command.c ****                 mousekey_param = 0;
 1576               		.loc 1 576 16 is_stmt 0 view .LVU376
 1577 00d8 8091 0000 		lds r24,mousekey_param
 1578 00dc 8823      		tst r24
 1579 00de 01F0      		breq .L129
 577:../../tmk_core/common/command.c ****             } else {
 1580               		.loc 1 577 17 is_stmt 1 view .LVU377
 577:../../tmk_core/common/command.c ****             } else {
 1581               		.loc 1 577 32 is_stmt 0 view .LVU378
 1582 00e0 1092 0000 		sts mousekey_param,__zero_reg__
 583:../../tmk_core/common/command.c ****         case KC_P:
 1583               		.loc 1 583 13 is_stmt 1 view .LVU379
 1584 00e4 00C0      		rjmp .L128
 1585               	.L115:
 1586 00e6 CB34      		cpi r28,lo8(75)
 1587 00e8 01F4      		brne .+2
 1588 00ea 00C0      		rjmp .L123
 1589 00ec 00F4      		brsh .L124
 1590 00ee C932      		cpi r28,lo8(41)
 1591 00f0 01F0      		breq .L122
 1592 00f2 C833      		cpi r28,lo8(56)
 1593 00f4 01F4      		brne .L120
 1594               	.L117:
 572:../../tmk_core/common/command.c ****             break;
 1595               		.loc 1 572 13 view .LVU380
 1596 00f6 0E94 0000 		call mousekey_console_help
 573:../../tmk_core/common/command.c ****         case KC_Q:
 1597               		.loc 1 573 13 view .LVU381
 1598               	.L128:
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1599               		.loc 1 620 5 view .LVU382
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1600               		.loc 1 620 9 is_stmt 0 view .LVU383
 1601 00fa 8091 0000 		lds r24,mousekey_param
 620:../../tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1602               		.loc 1 620 8 view .LVU384
 1603 00fe 8823      		tst r24
 1604 0100 01F4      		brne .+2
 1605 0102 00C0      		rjmp .L130
 621:../../tmk_core/common/command.c ****     } else {
 1606               		.loc 1 621 9 is_stmt 1 view .LVU385
 1607               	.LBE213:
 1608               	.LBE239:
 621:../../tmk_core/common/command.c ****     } else {
 1609               		.loc 1 621 9 view .LVU386
 621:../../tmk_core/common/command.c ****     } else {
 1610               		.loc 1 621 9 view .LVU387
 1611               	.LBB240:
 1612               	.LBB214:
 1613 0104 1F92      		push __zero_reg__
 1614               	.LCFI78:
 1615               		.cfi_def_cfa_offset 4
 1616 0106 8F93      		push r24
 1617               	.LCFI79:
 1618               		.cfi_def_cfa_offset 5
 1619 0108 80E0      		ldi r24,lo8(__c.5191)
 1620 010a 90E0      		ldi r25,hi8(__c.5191)
 1621 010c 9F93      		push r25
 1622               	.LCFI80:
 1623               		.cfi_def_cfa_offset 6
 1624 010e 8F93      		push r24
 1625               	.LCFI81:
 1626               		.cfi_def_cfa_offset 7
 1627 0110 0E94 0000 		call __xprintf
 1628 0114 0F90      		pop __tmp_reg__
 1629 0116 0F90      		pop __tmp_reg__
 1630 0118 0F90      		pop __tmp_reg__
 1631 011a 0F90      		pop __tmp_reg__
 1632               	.LCFI82:
 1633               		.cfi_def_cfa_offset 3
 1634               	.L160:
 1635               	.LBE214:
 1636               	.LBE240:
  93:../../tmk_core/common/command.c **** }
 1637               		.loc 1 93 12 is_stmt 0 view .LVU388
 1638 011c 81E0      		ldi r24,lo8(1)
 1639 011e 00C0      		rjmp .L100
 1640               	.L124:
 1641 0120 C135      		cpi r28,lo8(81)
 1642 0122 01F4      		brne .+2
 1643 0124 00C0      		rjmp .L125
 1644 0126 C235      		cpi r28,lo8(82)
 1645 0128 01F4      		brne .+2
 1646 012a 00C0      		rjmp .L126
 1647 012c CE34      		cpi r28,lo8(78)
 1648 012e 01F4      		brne .L120
 1649               	.LBB241:
 1650               	.LBB215:
 605:../../tmk_core/common/command.c ****             break;
 1651               		.loc 1 605 13 is_stmt 1 view .LVU389
 1652 0130 6AE0      		ldi r22,lo8(10)
 1653 0132 00C0      		rjmp .L159
 1654               	.L129:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1655               		.loc 1 579 17 view .LVU390
 1656               	.LBE215:
 1657               	.LBE241:
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1658               		.loc 1 579 17 view .LVU391
 579:../../tmk_core/common/command.c ****                 command_state = CONSOLE;
 1659               		.loc 1 579 17 view .LVU392
 1660               	.LBB242:
 1661               	.LBB216:
 1662 0134 80E0      		ldi r24,lo8(__c.5172)
 1663 0136 90E0      		ldi r25,hi8(__c.5172)
 1664 0138 0E94 0000 		call xputs
 580:../../tmk_core/common/command.c ****                 return false;
 1665               		.loc 1 580 17 view .LVU393
 580:../../tmk_core/common/command.c ****                 return false;
 1666               		.loc 1 580 31 is_stmt 0 view .LVU394
 1667 013c 81E0      		ldi r24,lo8(1)
 1668 013e 8093 0000 		sts command_state,r24
 581:../../tmk_core/common/command.c ****             }
 1669               		.loc 1 581 17 is_stmt 1 view .LVU395
 1670 0142 00C0      		rjmp .L100
 1671               	.L121:
 585:../../tmk_core/common/command.c ****             break;
 1672               		.loc 1 585 13 view .LVU396
 1673               	.LBB172:
 1674               	.LBI172:
 435:../../tmk_core/common/command.c **** {
 1675               		.loc 1 435 13 view .LVU397
 1676               	.LBB173:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1677               		.loc 1 437 5 view .LVU398
 1678               	.LBE173:
 1679               	.LBE172:
 1680               	.LBE216:
 1681               	.LBE242:
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1682               		.loc 1 437 5 view .LVU399
 437:../../tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1683               		.loc 1 437 5 view .LVU400
 1684               	.LBB243:
 1685               	.LBB217:
 1686               	.LBB193:
 1687               	.LBB174:
 1688 0144 80E0      		ldi r24,lo8(__c.5073)
 1689 0146 90E0      		ldi r25,hi8(__c.5073)
 1690 0148 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1691               		.loc 1 438 5 view .LVU401
 1692               	.LBE174:
 1693               	.LBE193:
 1694               	.LBE217:
 1695               	.LBE243:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1696               		.loc 1 438 5 view .LVU402
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1697               		.loc 1 438 5 view .LVU403
 1698               	.LBB244:
 1699               	.LBB218:
 1700               	.LBB194:
 1701               	.LBB175:
 1702 014c 80E0      		ldi r24,lo8(__c.5075)
 1703 014e 90E0      		ldi r25,hi8(__c.5075)
 1704 0150 0E94 0000 		call xputs
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1705               		.loc 1 438 33 view .LVU404
 1706               	.LBE175:
 1707               	.LBE194:
 1708               	.LBE218:
 1709               	.LBE244:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1710               		.loc 1 438 33 view .LVU405
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1711               		.loc 1 438 33 view .LVU406
 1712               	.LBB245:
 1713               	.LBB219:
 1714               	.LBB195:
 1715               	.LBB176:
 1716 0154 8091 0000 		lds r24,mk_delay
 1717 0158 1F92      		push __zero_reg__
 1718               	.LCFI83:
 1719               		.cfi_def_cfa_offset 4
 1720 015a 8F93      		push r24
 1721               	.LCFI84:
 1722               		.cfi_def_cfa_offset 5
 1723 015c 80E0      		ldi r24,lo8(__c.5077)
 1724 015e 90E0      		ldi r25,hi8(__c.5077)
 1725 0160 9F93      		push r25
 1726               	.LCFI85:
 1727               		.cfi_def_cfa_offset 6
 1728 0162 8F93      		push r24
 1729               	.LCFI86:
 1730               		.cfi_def_cfa_offset 7
 1731 0164 0E94 0000 		call __xprintf
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1732               		.loc 1 438 49 view .LVU407
 1733               	.LBE176:
 1734               	.LBE195:
 1735               	.LBE219:
 1736               	.LBE245:
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1737               		.loc 1 438 49 view .LVU408
 438:../../tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1738               		.loc 1 438 49 view .LVU409
 1739               	.LBB246:
 1740               	.LBB220:
 1741               	.LBB196:
 1742               	.LBB177:
 1743 0168 80E0      		ldi r24,lo8(__c.5079)
 1744 016a 90E0      		ldi r25,hi8(__c.5079)
 1745 016c 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1746               		.loc 1 439 5 view .LVU410
 1747               	.LBE177:
 1748               	.LBE196:
 1749               	.LBE220:
 1750               	.LBE246:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1751               		.loc 1 439 5 view .LVU411
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1752               		.loc 1 439 5 view .LVU412
 1753               	.LBB247:
 1754               	.LBB221:
 1755               	.LBB197:
 1756               	.LBB178:
 1757 0170 80E0      		ldi r24,lo8(__c.5081)
 1758 0172 90E0      		ldi r25,hi8(__c.5081)
 1759 0174 0E94 0000 		call xputs
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1760               		.loc 1 439 33 view .LVU413
 1761               	.LBE178:
 1762               	.LBE197:
 1763               	.LBE221:
 1764               	.LBE247:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1765               		.loc 1 439 33 view .LVU414
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1766               		.loc 1 439 33 view .LVU415
 1767               	.LBB248:
 1768               	.LBB222:
 1769               	.LBB198:
 1770               	.LBB179:
 1771 0178 8091 0000 		lds r24,mk_interval
 1772 017c 1F92      		push __zero_reg__
 1773               	.LCFI87:
 1774               		.cfi_def_cfa_offset 8
 1775 017e 8F93      		push r24
 1776               	.LCFI88:
 1777               		.cfi_def_cfa_offset 9
 1778 0180 80E0      		ldi r24,lo8(__c.5083)
 1779 0182 90E0      		ldi r25,hi8(__c.5083)
 1780 0184 9F93      		push r25
 1781               	.LCFI89:
 1782               		.cfi_def_cfa_offset 10
 1783 0186 8F93      		push r24
 1784               	.LCFI90:
 1785               		.cfi_def_cfa_offset 11
 1786 0188 0E94 0000 		call __xprintf
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1787               		.loc 1 439 52 view .LVU416
 1788               	.LBE179:
 1789               	.LBE198:
 1790               	.LBE222:
 1791               	.LBE248:
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1792               		.loc 1 439 52 view .LVU417
 439:../../tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1793               		.loc 1 439 52 view .LVU418
 1794               	.LBB249:
 1795               	.LBB223:
 1796               	.LBB199:
 1797               	.LBB180:
 1798 018c 80E0      		ldi r24,lo8(__c.5085)
 1799 018e 90E0      		ldi r25,hi8(__c.5085)
 1800 0190 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1801               		.loc 1 440 5 view .LVU419
 1802               	.LBE180:
 1803               	.LBE199:
 1804               	.LBE223:
 1805               	.LBE249:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1806               		.loc 1 440 5 view .LVU420
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1807               		.loc 1 440 5 view .LVU421
 1808               	.LBB250:
 1809               	.LBB224:
 1810               	.LBB200:
 1811               	.LBB181:
 1812 0194 80E0      		ldi r24,lo8(__c.5087)
 1813 0196 90E0      		ldi r25,hi8(__c.5087)
 1814 0198 0E94 0000 		call xputs
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1815               		.loc 1 440 30 view .LVU422
 1816               	.LBE181:
 1817               	.LBE200:
 1818               	.LBE224:
 1819               	.LBE250:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1820               		.loc 1 440 30 view .LVU423
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1821               		.loc 1 440 30 view .LVU424
 1822               	.LBB251:
 1823               	.LBB225:
 1824               	.LBB201:
 1825               	.LBB182:
 1826 019c 8091 0000 		lds r24,mk_max_speed
 1827 01a0 1F92      		push __zero_reg__
 1828               	.LCFI91:
 1829               		.cfi_def_cfa_offset 12
 1830 01a2 8F93      		push r24
 1831               	.LCFI92:
 1832               		.cfi_def_cfa_offset 13
 1833 01a4 80E0      		ldi r24,lo8(__c.5089)
 1834 01a6 90E0      		ldi r25,hi8(__c.5089)
 1835 01a8 9F93      		push r25
 1836               	.LCFI93:
 1837               		.cfi_def_cfa_offset 14
 1838 01aa 8F93      		push r24
 1839               	.LCFI94:
 1840               		.cfi_def_cfa_offset 15
 1841 01ac 0E94 0000 		call __xprintf
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1842               		.loc 1 440 50 view .LVU425
 1843               	.LBE182:
 1844               	.LBE201:
 1845               	.LBE225:
 1846               	.LBE251:
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1847               		.loc 1 440 50 view .LVU426
 440:../../tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1848               		.loc 1 440 50 view .LVU427
 1849               	.LBB252:
 1850               	.LBB226:
 1851               	.LBB202:
 1852               	.LBB183:
 1853 01b0 80E0      		ldi r24,lo8(__c.5091)
 1854 01b2 90E0      		ldi r25,hi8(__c.5091)
 1855 01b4 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1856               		.loc 1 441 5 view .LVU428
 1857               	.LBE183:
 1858               	.LBE202:
 1859               	.LBE226:
 1860               	.LBE252:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1861               		.loc 1 441 5 view .LVU429
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1862               		.loc 1 441 5 view .LVU430
 1863               	.LBB253:
 1864               	.LBB227:
 1865               	.LBB203:
 1866               	.LBB184:
 1867 01b8 80E0      		ldi r24,lo8(__c.5093)
 1868 01ba 90E0      		ldi r25,hi8(__c.5093)
 1869 01bc 0E94 0000 		call xputs
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1870               		.loc 1 441 32 view .LVU431
 1871               	.LBE184:
 1872               	.LBE203:
 1873               	.LBE227:
 1874               	.LBE253:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1875               		.loc 1 441 32 view .LVU432
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1876               		.loc 1 441 32 view .LVU433
 1877               	.LBB254:
 1878               	.LBB228:
 1879               	.LBB204:
 1880               	.LBB185:
 1881 01c0 8091 0000 		lds r24,mk_time_to_max
 1882 01c4 1F92      		push __zero_reg__
 1883               	.LCFI95:
 1884               		.cfi_def_cfa_offset 16
 1885 01c6 8F93      		push r24
 1886               	.LCFI96:
 1887               		.cfi_def_cfa_offset 17
 1888 01c8 80E0      		ldi r24,lo8(__c.5095)
 1889 01ca 90E0      		ldi r25,hi8(__c.5095)
 1890 01cc 9F93      		push r25
 1891               	.LCFI97:
 1892               		.cfi_def_cfa_offset 18
 1893 01ce 8F93      		push r24
 1894               	.LCFI98:
 1895               		.cfi_def_cfa_offset 19
 1896 01d0 0E94 0000 		call __xprintf
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1897               		.loc 1 441 54 view .LVU434
 1898               	.LBE185:
 1899               	.LBE204:
 1900               	.LBE228:
 1901               	.LBE254:
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1902               		.loc 1 441 54 view .LVU435
 441:../../tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 1903               		.loc 1 441 54 view .LVU436
 1904               	.LBB255:
 1905               	.LBB229:
 1906               	.LBB205:
 1907               	.LBB186:
 1908 01d4 80E0      		ldi r24,lo8(__c.5097)
 1909 01d6 90E0      		ldi r25,hi8(__c.5097)
 1910 01d8 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1911               		.loc 1 442 5 view .LVU437
 1912               	.LBE186:
 1913               	.LBE205:
 1914               	.LBE229:
 1915               	.LBE255:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1916               		.loc 1 442 5 view .LVU438
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1917               		.loc 1 442 5 view .LVU439
 1918               	.LBB256:
 1919               	.LBB230:
 1920               	.LBB206:
 1921               	.LBB187:
 1922 01dc 80E0      		ldi r24,lo8(__c.5099)
 1923 01de 90E0      		ldi r25,hi8(__c.5099)
 1924 01e0 0E94 0000 		call xputs
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1925               		.loc 1 442 36 view .LVU440
 1926               	.LBE187:
 1927               	.LBE206:
 1928               	.LBE230:
 1929               	.LBE256:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1930               		.loc 1 442 36 view .LVU441
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1931               		.loc 1 442 36 view .LVU442
 1932               	.LBB257:
 1933               	.LBB231:
 1934               	.LBB207:
 1935               	.LBB188:
 1936 01e4 8091 0000 		lds r24,mk_wheel_max_speed
 1937 01e8 1F92      		push __zero_reg__
 1938               	.LCFI99:
 1939               		.cfi_def_cfa_offset 20
 1940 01ea 8F93      		push r24
 1941               	.LCFI100:
 1942               		.cfi_def_cfa_offset 21
 1943 01ec 80E0      		ldi r24,lo8(__c.5101)
 1944 01ee 90E0      		ldi r25,hi8(__c.5101)
 1945 01f0 9F93      		push r25
 1946               	.LCFI101:
 1947               		.cfi_def_cfa_offset 22
 1948 01f2 8F93      		push r24
 1949               	.LCFI102:
 1950               		.cfi_def_cfa_offset 23
 1951 01f4 0E94 0000 		call __xprintf
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1952               		.loc 1 442 62 view .LVU443
 1953               	.LBE188:
 1954               	.LBE207:
 1955               	.LBE231:
 1956               	.LBE257:
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1957               		.loc 1 442 62 view .LVU444
 442:../../tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 1958               		.loc 1 442 62 view .LVU445
 1959               	.LBB258:
 1960               	.LBB232:
 1961               	.LBB208:
 1962               	.LBB189:
 1963 01f8 80E0      		ldi r24,lo8(__c.5103)
 1964 01fa 90E0      		ldi r25,hi8(__c.5103)
 1965 01fc 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1966               		.loc 1 443 5 view .LVU446
 1967               	.LBE189:
 1968               	.LBE208:
 1969               	.LBE232:
 1970               	.LBE258:
 443:../../tmk_core/common/command.c **** }
 1971               		.loc 1 443 5 view .LVU447
 443:../../tmk_core/common/command.c **** }
 1972               		.loc 1 443 5 view .LVU448
 1973               	.LBB259:
 1974               	.LBB233:
 1975               	.LBB209:
 1976               	.LBB190:
 1977 0200 80E0      		ldi r24,lo8(__c.5105)
 1978 0202 90E0      		ldi r25,hi8(__c.5105)
 1979 0204 0E94 0000 		call xputs
 443:../../tmk_core/common/command.c **** }
 1980               		.loc 1 443 38 view .LVU449
 1981               	.LBE190:
 1982               	.LBE209:
 1983               	.LBE233:
 1984               	.LBE259:
 443:../../tmk_core/common/command.c **** }
 1985               		.loc 1 443 38 view .LVU450
 443:../../tmk_core/common/command.c **** }
 1986               		.loc 1 443 38 view .LVU451
 1987               	.LBB260:
 1988               	.LBB234:
 1989               	.LBB210:
 1990               	.LBB191:
 1991 0208 8091 0000 		lds r24,mk_wheel_time_to_max
 1992 020c 1F92      		push __zero_reg__
 1993               	.LCFI103:
 1994               		.cfi_def_cfa_offset 24
 1995 020e 8F93      		push r24
 1996               	.LCFI104:
 1997               		.cfi_def_cfa_offset 25
 1998 0210 80E0      		ldi r24,lo8(__c.5107)
 1999 0212 90E0      		ldi r25,hi8(__c.5107)
 2000 0214 9F93      		push r25
 2001               	.LCFI105:
 2002               		.cfi_def_cfa_offset 26
 2003 0216 8F93      		push r24
 2004               	.LCFI106:
 2005               		.cfi_def_cfa_offset 27
 2006 0218 0E94 0000 		call __xprintf
 443:../../tmk_core/common/command.c **** }
 2007               		.loc 1 443 66 view .LVU452
 2008               	.LBE191:
 2009               	.LBE210:
 2010               	.LBE234:
 2011               	.LBE260:
 443:../../tmk_core/common/command.c **** }
 2012               		.loc 1 443 66 view .LVU453
 443:../../tmk_core/common/command.c **** }
 2013               		.loc 1 443 66 view .LVU454
 2014               	.LBB261:
 2015               	.LBB235:
 2016               	.LBB211:
 2017               	.LBB192:
 2018 021c 80E0      		ldi r24,lo8(__c.5109)
 2019 021e 90E0      		ldi r25,hi8(__c.5109)
 2020 0220 0E94 0000 		call xputs
 2021 0224 8DB7      		in r24,__SP_L__
 2022 0226 9EB7      		in r25,__SP_H__
 2023 0228 4896      		adiw r24,24
 2024 022a 0FB6      		in __tmp_reg__,__SREG__
 2025 022c F894      		cli
 2026 022e 9EBF      		out __SP_H__,r25
 2027 0230 0FBE      		out __SREG__,__tmp_reg__
 2028 0232 8DBF      		out __SP_L__,r24
 2029               	.LCFI107:
 2030               		.cfi_def_cfa_offset 3
 2031 0234 00C0      		rjmp .L128
 2032               	.L116:
 2033               	.LBE192:
 2034               	.LBE211:
 593:../../tmk_core/common/command.c ****             break;
 2035               		.loc 1 593 13 view .LVU455
 2036               	.LBB212:
 2037               	.LBI212:
 634:../../tmk_core/common/command.c **** {
 2038               		.loc 1 634 16 view .LVU456
 2039               	.LBE212:
 2040               	.LBE235:
 2041               	.LBE261:
 636:../../tmk_core/common/command.c ****         case KC_1: return 1;
 2042               		.loc 1 636 5 view .LVU457
 2043               	.LBB262:
 2044               	.LBB236:
 593:../../tmk_core/common/command.c ****             break;
 2045               		.loc 1 593 28 is_stmt 0 view .LVU458
 2046 0236 CE51      		subi r28,lo8(-(-30))
 2047 0238 EC2F      		mov r30,r28
 2048 023a F0E0      		ldi r31,0
 2049 023c E050      		subi r30,lo8(-(CSWTCH.60))
 2050 023e F040      		sbci r31,hi8(-(CSWTCH.60))
 2051 0240 8081      		ld r24,Z
 2052 0242 8093 0000 		sts mousekey_param,r24
 594:../../tmk_core/common/command.c ****         case KC_UP:
 2053               		.loc 1 594 13 is_stmt 1 view .LVU459
 2054 0246 00C0      		rjmp .L128
 2055               	.L126:
 596:../../tmk_core/common/command.c ****             break;
 2056               		.loc 1 596 13 view .LVU460
 2057 0248 61E0      		ldi r22,lo8(1)
 2058               	.L158:
 602:../../tmk_core/common/command.c ****             break;
 2059               		.loc 1 602 13 is_stmt 0 view .LVU461
 2060 024a 8091 0000 		lds r24,mousekey_param
 2061 024e 0E94 0000 		call mousekey_param_inc
 603:../../tmk_core/common/command.c ****         case KC_PGDN:
 2062               		.loc 1 603 13 is_stmt 1 view .LVU462
 2063 0252 00C0      		rjmp .L128
 2064               	.L125:
 599:../../tmk_core/common/command.c ****             break;
 2065               		.loc 1 599 13 view .LVU463
 2066 0254 61E0      		ldi r22,lo8(1)
 2067               	.L159:
 605:../../tmk_core/common/command.c ****             break;
 2068               		.loc 1 605 13 is_stmt 0 view .LVU464
 2069 0256 8091 0000 		lds r24,mousekey_param
 2070 025a 0E94 0000 		call mousekey_param_dec
 606:../../tmk_core/common/command.c ****         case KC_D:
 2071               		.loc 1 606 13 is_stmt 1 view .LVU465
 2072 025e 00C0      		rjmp .L128
 2073               	.L123:
 602:../../tmk_core/common/command.c ****             break;
 2074               		.loc 1 602 13 view .LVU466
 2075 0260 6AE0      		ldi r22,lo8(10)
 2076 0262 00C0      		rjmp .L158
 2077               	.L119:
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2078               		.loc 1 608 13 view .LVU467
 608:../../tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2079               		.loc 1 608 22 is_stmt 0 view .LVU468
 2080 0264 8EE1      		ldi r24,lo8(30)
 2081 0266 8093 0000 		sts mk_delay,r24
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2082               		.loc 1 609 13 is_stmt 1 view .LVU469
 609:../../tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2083               		.loc 1 609 25 is_stmt 0 view .LVU470
 2084 026a 82E3      		ldi r24,lo8(50)
 2085 026c 8093 0000 		sts mk_interval,r24
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2086               		.loc 1 610 13 is_stmt 1 view .LVU471
 610:../../tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2087               		.loc 1 610 26 is_stmt 0 view .LVU472
 2088 0270 8AE0      		ldi r24,lo8(10)
 2089 0272 8093 0000 		sts mk_max_speed,r24
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2090               		.loc 1 611 13 is_stmt 1 view .LVU473
 611:../../tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2091               		.loc 1 611 28 is_stmt 0 view .LVU474
 2092 0276 84E1      		ldi r24,lo8(20)
 2093 0278 8093 0000 		sts mk_time_to_max,r24
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2094               		.loc 1 612 13 is_stmt 1 view .LVU475
 612:../../tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2095               		.loc 1 612 32 is_stmt 0 view .LVU476
 2096 027c 88E0      		ldi r24,lo8(8)
 2097 027e 8093 0000 		sts mk_wheel_max_speed,r24
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2098               		.loc 1 613 13 is_stmt 1 view .LVU477
 613:../../tmk_core/common/command.c ****             print("set default\n");
 2099               		.loc 1 613 34 is_stmt 0 view .LVU478
 2100 0282 88E2      		ldi r24,lo8(40)
 2101 0284 8093 0000 		sts mk_wheel_time_to_max,r24
 614:../../tmk_core/common/command.c ****             break;
 2102               		.loc 1 614 13 is_stmt 1 view .LVU479
 2103               	.LBE236:
 2104               	.LBE262:
 614:../../tmk_core/common/command.c ****             break;
 2105               		.loc 1 614 13 view .LVU480
 614:../../tmk_core/common/command.c ****             break;
 2106               		.loc 1 614 13 view .LVU481
 2107               	.LBB263:
 2108               	.LBB237:
 2109 0288 80E0      		ldi r24,lo8(__c.5186)
 2110 028a 90E0      		ldi r25,hi8(__c.5186)
 2111 028c 0E94 0000 		call xputs
 615:../../tmk_core/common/command.c ****         default:
 2112               		.loc 1 615 13 view .LVU482
 2113 0290 00C0      		rjmp .L128
 2114               	.L130:
 623:../../tmk_core/common/command.c ****     }
 2115               		.loc 1 623 9 view .LVU483
 2116               	.LBE237:
 2117               	.LBE263:
 623:../../tmk_core/common/command.c ****     }
 2118               		.loc 1 623 9 view .LVU484
 623:../../tmk_core/common/command.c ****     }
 2119               		.loc 1 623 9 view .LVU485
 2120               	.LBB264:
 2121               	.LBB238:
 2122 0292 80E0      		ldi r24,lo8(__c.5193)
 2123 0294 90E0      		ldi r25,hi8(__c.5193)
 2124 0296 00C0      		rjmp .L161
 2125               	.LBE238:
 2126               	.LBE264:
 2127               		.cfi_endproc
 2128               	.LFE103:
 2130               		.section	.rodata.CSWTCH.60,"a"
 2133               	CSWTCH.60:
 2134 0000 01        		.byte	1
 2135 0001 02        		.byte	2
 2136 0002 03        		.byte	3
 2137 0003 04        		.byte	4
 2138 0004 05        		.byte	5
 2139 0005 06        		.byte	6
 2140 0006 07        		.byte	7
 2141 0007 08        		.byte	8
 2142 0008 09        		.byte	9
 2143 0009 00        		.byte	0
 2144               		.section	.progmem.data.__c.5155,"a"
 2147               	__c.5155:
 2148 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2148      6865 656C 
 2148      5F74 696D 
 2148      655F 746F 
 2148      5F6D 6178 
 2149               		.section	.progmem.data.__c.5152,"a"
 2152               	__c.5152:
 2153 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2153      6865 656C 
 2153      5F6D 6178 
 2153      5F73 7065 
 2153      6564 203D 
 2154               		.section	.progmem.data.__c.5149,"a"
 2157               	__c.5149:
 2158 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2158      696D 655F 
 2158      746F 5F6D 
 2158      6178 203D 
 2158      2025 640A 
 2159               		.section	.progmem.data.__c.5146,"a"
 2162               	__c.5146:
 2163 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2163      6178 5F73 
 2163      7065 6564 
 2163      203D 2025 
 2163      640A 00
 2164               		.section	.progmem.data.__c.5143,"a"
 2167               	__c.5143:
 2168 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2168      6E74 6572 
 2168      7661 6C20 
 2168      3D20 2564 
 2168      0A00 
 2169               		.section	.progmem.data.__c.5139,"a"
 2172               	__c.5139:
 2173 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2173      656C 6179 
 2173      203D 2025 
 2173      640A 00
 2174               		.section	.progmem.data.__c.5132,"a"
 2177               	__c.5132:
 2178 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2178      6865 656C 
 2178      5F74 696D 
 2178      655F 746F 
 2178      5F6D 6178 
 2179               		.section	.progmem.data.__c.5129,"a"
 2182               	__c.5129:
 2183 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2183      6865 656C 
 2183      5F6D 6178 
 2183      5F73 7065 
 2183      6564 203D 
 2184               		.section	.progmem.data.__c.5126,"a"
 2187               	__c.5126:
 2188 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2188      696D 655F 
 2188      746F 5F6D 
 2188      6178 203D 
 2188      2025 640A 
 2189               		.section	.progmem.data.__c.5123,"a"
 2192               	__c.5123:
 2193 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2193      6178 5F73 
 2193      7065 6564 
 2193      203D 2025 
 2193      640A 00
 2194               		.section	.progmem.data.__c.5120,"a"
 2197               	__c.5120:
 2198 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2198      6E74 6572 
 2198      7661 6C20 
 2198      3D20 2564 
 2198      0A00 
 2199               		.section	.progmem.data.__c.5116,"a"
 2202               	__c.5116:
 2203 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2203      656C 6179 
 2203      203D 2025 
 2203      640A 00
 2204               		.section	.progmem.data.__c.5109,"a"
 2207               	__c.5109:
 2208 0000 0A00      		.string	"\n"
 2209               		.section	.progmem.data.__c.5107,"a"
 2212               	__c.5107:
 2213 0000 2575 00   		.string	"%u"
 2214               		.section	.progmem.data.__c.5105,"a"
 2217               	__c.5105:
 2218 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 2218      6865 656C 
 2218      5F74 696D 
 2218      655F 746F 
 2218      5F6D 6178 
 2219               		.section	.progmem.data.__c.5103,"a"
 2222               	__c.5103:
 2223 0000 0A00      		.string	"\n"
 2224               		.section	.progmem.data.__c.5101,"a"
 2227               	__c.5101:
 2228 0000 2575 00   		.string	"%u"
 2229               		.section	.progmem.data.__c.5099,"a"
 2232               	__c.5099:
 2233 0000 353A 2077 		.string	"5: wheel_max_speed: "
 2233      6865 656C 
 2233      5F6D 6178 
 2233      5F73 7065 
 2233      6564 3A20 
 2234               		.section	.progmem.data.__c.5097,"a"
 2237               	__c.5097:
 2238 0000 0A00      		.string	"\n"
 2239               		.section	.progmem.data.__c.5095,"a"
 2242               	__c.5095:
 2243 0000 2575 00   		.string	"%u"
 2244               		.section	.progmem.data.__c.5093,"a"
 2247               	__c.5093:
 2248 0000 343A 2074 		.string	"4: time_to_max: "
 2248      696D 655F 
 2248      746F 5F6D 
 2248      6178 3A20 
 2248      00
 2249               		.section	.progmem.data.__c.5091,"a"
 2252               	__c.5091:
 2253 0000 0A00      		.string	"\n"
 2254               		.section	.progmem.data.__c.5089,"a"
 2257               	__c.5089:
 2258 0000 2575 00   		.string	"%u"
 2259               		.section	.progmem.data.__c.5087,"a"
 2262               	__c.5087:
 2263 0000 333A 206D 		.string	"3: max_speed: "
 2263      6178 5F73 
 2263      7065 6564 
 2263      3A20 00
 2264               		.section	.progmem.data.__c.5085,"a"
 2267               	__c.5085:
 2268 0000 0A00      		.string	"\n"
 2269               		.section	.progmem.data.__c.5083,"a"
 2272               	__c.5083:
 2273 0000 2575 00   		.string	"%u"
 2274               		.section	.progmem.data.__c.5081,"a"
 2277               	__c.5081:
 2278 0000 323A 2069 		.string	"2: interval(ms): "
 2278      6E74 6572 
 2278      7661 6C28 
 2278      6D73 293A 
 2278      2000 
 2279               		.section	.progmem.data.__c.5079,"a"
 2282               	__c.5079:
 2283 0000 0A00      		.string	"\n"
 2284               		.section	.progmem.data.__c.5077,"a"
 2287               	__c.5077:
 2288 0000 2575 00   		.string	"%u"
 2289               		.section	.progmem.data.__c.5075,"a"
 2292               	__c.5075:
 2293 0000 313A 2064 		.string	"1: delay(*10ms): "
 2293      656C 6179 
 2293      282A 3130 
 2293      6D73 293A 
 2293      2000 
 2294               		.section	.progmem.data.__c.5073,"a"
 2297               	__c.5073:
 2298 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 2298      5661 6C75 
 2298      6573 202D 
 2298      0A00 
 2299               		.section	.progmem.data.__c.5193,"a"
 2302               	__c.5193:
 2303 0000 4D3E 00   		.string	"M>"
 2304               		.section	.progmem.data.__c.5191,"a"
 2307               	__c.5191:
 2308 0000 4D25 643E 		.string	"M%d> "
 2308      2000 
 2309               		.section	.progmem.data.__c.5189,"a"
 2312               	__c.5189:
 2313 0000 3F00      		.string	"?"
 2314               		.section	.progmem.data.__c.5186,"a"
 2317               	__c.5186:
 2318 0000 7365 7420 		.string	"set default\n"
 2318      6465 6661 
 2318      756C 740A 
 2318      00
 2319               		.section	.progmem.data.__c.5172,"a"
 2322               	__c.5172:
 2323 0000 433E 2000 		.string	"C> "
 2324               		.section	.progmem.data.__c.5162,"a"
 2327               	__c.5162:
 2328 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 2328      6520 6465 
 2328      6C74 613A 
 2328      2063 7572 
 2328      736F 723D 
 2329               		.section	.progmem.data.__c.5160,"a"
 2332               	__c.5160:
 2333 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 2333      4D6F 7573 
 2333      656B 6579 
 2333      202D 0A45 
 2333      5343 2F71 
 2334               		.section	.progmem.data.__c.5065,"a"
 2337               	__c.5065:
 2338 0000 3F00      		.string	"?"
 2339               		.section	.progmem.data.__c.5062,"a"
 2342               	__c.5062:
 2343 0000 4D3E 2000 		.string	"M> "
 2344               		.section	.progmem.data.__c.5067,"a"
 2347               	__c.5067:
 2348 0000 433E 2000 		.string	"C> "
 2349               		.section	.progmem.data.__c.5211,"a"
 2352               	__c.5211:
 2353 0000 4C25 640A 		.string	"L%d\n"
 2353      00
 2354               		.section	.progmem.data.__c.5051,"a"
 2357               	__c.5051:
 2358 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 2358      436F 6E73 
 2358      6F6C 6520 
 2358      2D0A 4553 
 2358      432F 713A 
 2359               		.section	.progmem.data.__c.4974,"a"
 2362               	__c.4974:
 2363 0000 0A09 2D20 		.string	"\n\t- Magic -\nd:\tdebug\nx:\tdebug matrix\nk:\tdebug keyboard\nm:\tdebug mouse\nv:\tvers
 2363      4D61 6769 
 2363      6320 2D0A 
 2363      643A 0964 
 2363      6562 7567 
 2364               		.section	.progmem.data.__c.5046,"a"
 2367               	__c.5046:
 2368 0000 3F00      		.string	"?"
 2369               		.section	.progmem.data.__c.5037,"a"
 2372               	__c.5037:
 2373 0000 4E4B 524F 		.string	"NKRO: off\n"
 2373      3A20 6F66 
 2373      660A 00
 2374               		.section	.progmem.data.__c.5035,"a"
 2377               	__c.5035:
 2378 0000 4E4B 524F 		.string	"NKRO: on\n"
 2378      3A20 6F6E 
 2378      0A00 
 2379               		.section	.progmem.data.__c.5032,"a"
 2382               	__c.5032:
 2383 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 2383      725F 7265 
 2383      6164 3332 
 2383      2829 3A20 
 2383      2530 346C 
 2384               		.section	.progmem.data.__c.5030,"a"
 2387               	__c.5030:
 2388 0000 6B65 7962 		.string	"keyboard_nkro: %X\n"
 2388      6F61 7264 
 2388      5F6E 6B72 
 2388      6F3A 2025 
 2388      580A 00
 2389               		.section	.progmem.data.__c.5028,"a"
 2392               	__c.5028:
 2393 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 2393      6F61 7264 
 2393      5F69 646C 
 2393      653A 2025 
 2393      580A 00
 2394               		.section	.progmem.data.__c.5026,"a"
 2397               	__c.5026:
 2398 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 2398      6F61 7264 
 2398      5F70 726F 
 2398      746F 636F 
 2398      6C3A 2025 
 2399               		.section	.progmem.data.__c.5024,"a"
 2402               	__c.5024:
 2403 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 2403      5F6B 6579 
 2403      626F 6172 
 2403      645F 6C65 
 2403      6473 2829 
 2404               		.section	.progmem.data.__c.5022,"a"
 2407               	__c.5022:
 2408 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 2408      5374 6174 
 2408      7573 202D 
 2408      0A00 
 2409               		.section	.progmem.data.__c.5019,"a"
 2412               	__c.5019:
 2413 0000 4743 433A 		.string	"GCC: 8.2.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 2413      2038 2E32 
 2413      2E30 2041 
 2413      5652 2D4C 
 2413      4942 433A 
 2414               		.section	.progmem.data.__c.5017,"a"
 2417               	__c.5017:
 2418 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND NKRO 4096\n"
 2418      4F4E 533A 
 2418      204C 5546 
 2418      4120 4D4F 
 2418      5553 454B 
 2419               		.section	.progmem.data.__c.5015,"a"
 2422               	__c.5015:
 2423 0000 4255 494C 		.string	"BUILD: 4650d2e5-dirty (18:31:12 Sep  9 2018)\n"
 2423      443A 2034 
 2423      3635 3064 
 2423      3265 352D 
 2423      6469 7274 
 2424               		.section	.progmem.data.__c.5013,"a"
 2427               	__c.5013:
 2428 0000 5649 443A 		.string	"VID: 0xFEED(t.m.k.) PID: 0x4242(HHKB mod) VER: 0x0104\n"
 2428      2030 7846 
 2428      4545 4428 
 2428      742E 6D2E 
 2428      6B2E 2920 
 2429               		.section	.progmem.data.__c.5011,"a"
 2432               	__c.5011:
 2433 0000 4445 5343 		.string	"DESC: t.m.k. keyboard firmware for HHKB mod\n"
 2433      3A20 742E 
 2433      6D2E 6B2E 
 2433      206B 6579 
 2433      626F 6172 
 2434               		.section	.progmem.data.__c.5009,"a"
 2437               	__c.5009:
 2438 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 2438      5665 7273 
 2438      696F 6E20 
 2438      2D0A 00
 2439               		.section	.progmem.data.__c.5006,"a"
 2442               	__c.5006:
 2443 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 2443      7365 3A20 
 2443      6F66 660A 
 2443      00
 2444               		.section	.progmem.data.__c.5004,"a"
 2447               	__c.5004:
 2448 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 2448      7365 3A20 
 2448      6F6E 0A00 
 2449               		.section	.progmem.data.__c.5001,"a"
 2452               	__c.5001:
 2453 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 2453      626F 6172 
 2453      643A 206F 
 2453      6666 0A00 
 2454               		.section	.progmem.data.__c.4999,"a"
 2457               	__c.4999:
 2458 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 2458      626F 6172 
 2458      643A 206F 
 2458      6E0A 00
 2459               		.section	.progmem.data.__c.4996,"a"
 2462               	__c.4996:
 2463 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 2463      7269 783A 
 2463      206F 6666 
 2463      0A00 
 2464               		.section	.progmem.data.__c.4994,"a"
 2467               	__c.4994:
 2468 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 2468      7269 783A 
 2468      206F 6E0A 
 2468      00
 2469               		.section	.progmem.data.__c.4991,"a"
 2472               	__c.4991:
 2473 0000 0A64 6562 		.string	"\ndebug: on\n"
 2473      7567 3A20 
 2473      6F6E 0A00 
 2474               		.section	.progmem.data.__c.4989,"a"
 2477               	__c.4989:
 2478 0000 0A64 6562 		.string	"\ndebug: off\n"
 2478      7567 3A20 
 2478      6F66 660A 
 2478      00
 2479               		.section	.progmem.data.__c.4986,"a"
 2482               	__c.4986:
 2483 0000 0A0A 626F 		.string	"\n\nbootloader... "
 2483      6F74 6C6F 
 2483      6164 6572 
 2483      2E2E 2E20 
 2483      00
 2484               		.section	.progmem.data.__c.4983,"a"
 2487               	__c.4983:
 2488 0000 433E 2000 		.string	"C> "
 2489               		.section	.bss.mousekey_param,"aw",@nobits
 2492               	mousekey_param:
 2493 0000 00        		.zero	1
 2494               	.global	command_state
 2495               		.section	.bss.command_state,"aw",@nobits
 2498               	command_state:
 2499 0000 00        		.zero	1
 2500               		.text
 2501               	.Letext0:
 2502               		.file 3 "/usr/avr/include/stdint.h"
 2503               		.file 4 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 2504               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 2505               		.file 6 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 2506               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 2507               		.file 8 "/usr/avr/include/stdio.h"
 2508               		.file 9 "../../tmk_core/common/report.h"
 2509               		.file 10 "../../tmk_core/common/host.h"
 2510               		.file 11 "../../tmk_core/common/avr/xprintf.h"
 2511               		.file 12 "../../tmk_core/common/debug.h"
 2512               		.file 13 "../../tmk_core/common/timer.h"
 2513               		.file 14 "../../tmk_core/common/action_layer.h"
 2514               		.file 15 "../../tmk_core/common/action_util.h"
 2515               		.file 16 "../../tmk_core/common/command.h"
 2516               		.file 17 "../../tmk_core/common/mousekey.h"
 2517               		.file 18 "../../tmk_core/common/action.h"
 2518               		.file 19 "../../tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
     /tmp/ccX7dilU.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccX7dilU.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccX7dilU.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccX7dilU.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccX7dilU.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccX7dilU.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
     /tmp/ccX7dilU.s:2332   .progmem.data.__c.5160:0000000000000000 __c.5160
     /tmp/ccX7dilU.s:2327   .progmem.data.__c.5162:0000000000000000 __c.5162
     /tmp/ccX7dilU.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
     /tmp/ccX7dilU.s:2202   .progmem.data.__c.5116:0000000000000000 __c.5116
     /tmp/ccX7dilU.s:2197   .progmem.data.__c.5120:0000000000000000 __c.5120
     /tmp/ccX7dilU.s:2192   .progmem.data.__c.5123:0000000000000000 __c.5123
     /tmp/ccX7dilU.s:2187   .progmem.data.__c.5126:0000000000000000 __c.5126
     /tmp/ccX7dilU.s:2182   .progmem.data.__c.5129:0000000000000000 __c.5129
     /tmp/ccX7dilU.s:2177   .progmem.data.__c.5132:0000000000000000 __c.5132
     /tmp/ccX7dilU.s:406    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
     /tmp/ccX7dilU.s:2172   .progmem.data.__c.5139:0000000000000000 __c.5139
     /tmp/ccX7dilU.s:2167   .progmem.data.__c.5143:0000000000000000 __c.5143
     /tmp/ccX7dilU.s:2162   .progmem.data.__c.5146:0000000000000000 __c.5146
     /tmp/ccX7dilU.s:2157   .progmem.data.__c.5149:0000000000000000 __c.5149
     /tmp/ccX7dilU.s:2152   .progmem.data.__c.5152:0000000000000000 __c.5152
     /tmp/ccX7dilU.s:2147   .progmem.data.__c.5155:0000000000000000 __c.5155
     /tmp/ccX7dilU.s:677    .text.switch_default_layer:0000000000000000 switch_default_layer
     /tmp/ccX7dilU.s:2352   .progmem.data.__c.5211:0000000000000000 __c.5211
     /tmp/ccX7dilU.s:750    .text.command_common:0000000000000000 command_common
     /tmp/ccX7dilU.s:2367   .progmem.data.__c.5046:0000000000000000 __c.5046
     /tmp/ccX7dilU.s:2457   .progmem.data.__c.4999:0000000000000000 __c.4999
     /tmp/ccX7dilU.s:2377   .progmem.data.__c.5035:0000000000000000 __c.5035
     /tmp/ccX7dilU.s:2467   .progmem.data.__c.4994:0000000000000000 __c.4994
     /tmp/ccX7dilU.s:2482   .progmem.data.__c.4986:0000000000000000 __c.4986
     /tmp/ccX7dilU.s:2362   .progmem.data.__c.4974:0000000000000000 __c.4974
     /tmp/ccX7dilU.s:2357   .progmem.data.__c.5051:0000000000000000 __c.5051
     /tmp/ccX7dilU.s:2487   .progmem.data.__c.4983:0000000000000000 __c.4983
     /tmp/ccX7dilU.s:2498   .bss.command_state:0000000000000000 command_state
     /tmp/ccX7dilU.s:2477   .progmem.data.__c.4989:0000000000000000 __c.4989
     /tmp/ccX7dilU.s:2472   .progmem.data.__c.4991:0000000000000000 __c.4991
     /tmp/ccX7dilU.s:2462   .progmem.data.__c.4996:0000000000000000 __c.4996
     /tmp/ccX7dilU.s:2452   .progmem.data.__c.5001:0000000000000000 __c.5001
     /tmp/ccX7dilU.s:2447   .progmem.data.__c.5004:0000000000000000 __c.5004
     /tmp/ccX7dilU.s:2442   .progmem.data.__c.5006:0000000000000000 __c.5006
     /tmp/ccX7dilU.s:2437   .progmem.data.__c.5009:0000000000000000 __c.5009
     /tmp/ccX7dilU.s:2432   .progmem.data.__c.5011:0000000000000000 __c.5011
     /tmp/ccX7dilU.s:2427   .progmem.data.__c.5013:0000000000000000 __c.5013
     /tmp/ccX7dilU.s:2422   .progmem.data.__c.5015:0000000000000000 __c.5015
     /tmp/ccX7dilU.s:2417   .progmem.data.__c.5017:0000000000000000 __c.5017
     /tmp/ccX7dilU.s:2412   .progmem.data.__c.5019:0000000000000000 __c.5019
     /tmp/ccX7dilU.s:2407   .progmem.data.__c.5022:0000000000000000 __c.5022
     /tmp/ccX7dilU.s:2402   .progmem.data.__c.5024:0000000000000000 __c.5024
     /tmp/ccX7dilU.s:2397   .progmem.data.__c.5026:0000000000000000 __c.5026
     /tmp/ccX7dilU.s:2392   .progmem.data.__c.5028:0000000000000000 __c.5028
     /tmp/ccX7dilU.s:2387   .progmem.data.__c.5030:0000000000000000 __c.5030
     /tmp/ccX7dilU.s:2382   .progmem.data.__c.5032:0000000000000000 __c.5032
     /tmp/ccX7dilU.s:2372   .progmem.data.__c.5037:0000000000000000 __c.5037
     /tmp/ccX7dilU.s:1307   .text.command_extra:0000000000000000 command_extra
     /tmp/ccX7dilU.s:1307   .text.command_extra:0000000000000000 command_extra.localalias.0
     /tmp/ccX7dilU.s:1331   .text.command_console_extra:0000000000000000 command_console_extra
     /tmp/ccX7dilU.s:1345   .text.command_proc:0000000000000000 command_proc
     /tmp/ccX7dilU.s:2337   .progmem.data.__c.5065:0000000000000000 __c.5065
     /tmp/ccX7dilU.s:2347   .progmem.data.__c.5067:0000000000000000 __c.5067
     /tmp/ccX7dilU.s:2342   .progmem.data.__c.5062:0000000000000000 __c.5062
     /tmp/ccX7dilU.s:2312   .progmem.data.__c.5189:0000000000000000 __c.5189
     /tmp/ccX7dilU.s:2492   .bss.mousekey_param:0000000000000000 mousekey_param
     /tmp/ccX7dilU.s:2307   .progmem.data.__c.5191:0000000000000000 __c.5191
     /tmp/ccX7dilU.s:2322   .progmem.data.__c.5172:0000000000000000 __c.5172
     /tmp/ccX7dilU.s:2297   .progmem.data.__c.5073:0000000000000000 __c.5073
     /tmp/ccX7dilU.s:2292   .progmem.data.__c.5075:0000000000000000 __c.5075
     /tmp/ccX7dilU.s:2287   .progmem.data.__c.5077:0000000000000000 __c.5077
     /tmp/ccX7dilU.s:2282   .progmem.data.__c.5079:0000000000000000 __c.5079
     /tmp/ccX7dilU.s:2277   .progmem.data.__c.5081:0000000000000000 __c.5081
     /tmp/ccX7dilU.s:2272   .progmem.data.__c.5083:0000000000000000 __c.5083
     /tmp/ccX7dilU.s:2267   .progmem.data.__c.5085:0000000000000000 __c.5085
     /tmp/ccX7dilU.s:2262   .progmem.data.__c.5087:0000000000000000 __c.5087
     /tmp/ccX7dilU.s:2257   .progmem.data.__c.5089:0000000000000000 __c.5089
     /tmp/ccX7dilU.s:2252   .progmem.data.__c.5091:0000000000000000 __c.5091
     /tmp/ccX7dilU.s:2247   .progmem.data.__c.5093:0000000000000000 __c.5093
     /tmp/ccX7dilU.s:2242   .progmem.data.__c.5095:0000000000000000 __c.5095
     /tmp/ccX7dilU.s:2237   .progmem.data.__c.5097:0000000000000000 __c.5097
     /tmp/ccX7dilU.s:2232   .progmem.data.__c.5099:0000000000000000 __c.5099
     /tmp/ccX7dilU.s:2227   .progmem.data.__c.5101:0000000000000000 __c.5101
     /tmp/ccX7dilU.s:2222   .progmem.data.__c.5103:0000000000000000 __c.5103
     /tmp/ccX7dilU.s:2217   .progmem.data.__c.5105:0000000000000000 __c.5105
     /tmp/ccX7dilU.s:2212   .progmem.data.__c.5107:0000000000000000 __c.5107
     /tmp/ccX7dilU.s:2207   .progmem.data.__c.5109:0000000000000000 __c.5109
     /tmp/ccX7dilU.s:2133   .rodata.CSWTCH.60:0000000000000000 CSWTCH.60
     /tmp/ccX7dilU.s:2317   .progmem.data.__c.5186:0000000000000000 __c.5186
     /tmp/ccX7dilU.s:2302   .progmem.data.__c.5193:0000000000000000 __c.5193

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
debug_config
keyboard_nkro
bootloader_jump
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
keyboard_report
__do_copy_data
__do_clear_bss
